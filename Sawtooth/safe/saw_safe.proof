> tamarin-prover --heuristic=s --stop-on-trace=DFS saw_safe.spthy --prove
maude tool: 'maude'
 checking version: 3.0. OK.
 checking installation: OK.

  solved goal nr. 0 (directly):
    PSE_sgx_increment_MC( MC_owner_policy, mcid.1, ptr_old.2,
                          ptr_new.3, valMC.4
    ) @ #i.5
  solved goal nr. 0 (directly):
    PoETCertificate( platform, valMC_ref.1 ) @ #t1.2
  solved goal nr. 0 (directly):
    PoETCertificate( platform1, valMC_ref.3 ) @ #t1.4
  solved goal nr. 0 (directly):
    PSE_sgx_increment_MC( MC_owner_policy, mcid.1, ptr_old1.2,
                          ptr_new1.3, valMC.6
    ) @ #i.7
  solved goal nr. 0 (directly):
    ISV_L1( sk_ISV, pk_ISV.1 ) @ #isv_L1.2
  solved goal nr. 1 (directly):
    Signup_L2a( sk_ISV, pk_ISV.1, platform.3, sk_user.4, mrenclave.5
    ) @ #csd1.6
  solved goal nr. 1 (directly):
    PSE_sgx_increment_MC( MC_owner_policy, mcid.1, ptr_old2.4,
                          ptr_new2.5, valMC.6
    ) @ #j.8
  solved goal nr. 2 (directly):
    PSE_CreateMC( <platform.3, pk_ISV.1>, mcid.7, ptr1.9, '1'
    ) @ #cmc1.11
  solved goal nr. 1 (directly):
    PoETCertificate( platform, valMC_ref.1 ) @ #t2.3
  solved goal nr. 1 (directly):
    PoETCertificate( platform2.1, valMC_ref.3 ) @ #t2.5
  solved goal nr. 3 (directly):
    Signup_L2b( sk_ISV, pk_ISV.1, platform.3, mrenclave.5, sk_user.4,
                pk_user.14, mcid.7, '1'
    ) @ #csd2.12
  solved goal nr. 2 (directly):
    PoETCertificate( platform3.2, valMC_ref.3 ) @ #t3.6
  solved goal nr. 4 (directly):
    Signup_3( sk_ISV, pk_ISV.1, platform.3, mrenclave.5, p_id.13,
              sk_user.4, pk_user.14, mcid.7, '1'
    ) @ #csd3.15
  solved goal nr. 7 (directly):
    PSE_CreateMC( MC_owner_policy, mcid.1, ptr.9, '1' ) @ #j.10
  solved goal nr. 8 (directly):
    PSE_CreateMC( MC_owner_policy, mcid.1, ptr.11, '1' ) @ #j.12
  solved goal nr. 5 (directly):
    E_CreateWaitTimer_1( pk_ISV.1, platform.3, mrenclave.5, p_id.13,
                         sk_user.4, pk_user.14, mcid.7
    ) @ #cwt1.16
  simplified formula:
      "((last(#i.7)) ∨ (last(#i.7)) ∨ (#i.7 = #i.7))"
    to
      "⊤"
  solved goal nr. 3 (simplified):
     (last(#i.7))  ∥ (last(#i.7))  ∥ (#i.7 = #i.7)
  solved goal nr. 11 (directly):
    PSE_CreateMC( <platform.3, pk_ISV.1>, mcid.7, ptr.26, '1' ) @ #j.27
  solved goal nr. 12 (directly):
    PSE_CreateMC( <platform.3, pk_ISV.1>, mcid.7, ptr.28, '1' ) @ #j.29
  simplified formula:
      "((last(#j.8)) ∨ (last(#j.8)) ∨ (#j.8 = #j.8))"
    to
      "⊤"
  solved goal nr. 6 (simplified):
     (last(#j.8))  ∥ (last(#j.8))  ∥ (#j.8 = #j.8)
  solved goal nr. 0 (directly): !ISV_E_Singup1( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly):
    !Priv_mem_ME( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 2 (directly):
    Sgx_create_MC( t.1, label.6 ) ▶₂ #vr.5
  solved goal nr. 0 (directly): Sgx_create_MC( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly):
    EPC_CWT( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8 ) ▶₀ #i
  solved goal nr. 0 (directly):
    !Signup_Mem_23( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8 ) ▶₀ #i
  solved goal nr. 0 (directly):
    EPC_CWC_12( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8, t.9 ) ▶₀ #i
  solved goal nr. 2 (directly):
    !ISV_E_Singup1( sk_ISV.4, pk_ISV.4 ) ▶₀ #vr.3
  solved goal nr. 0 (directly):
    Sgx_increment_MC( t.1, t.2, t.3 ) ▶₀ #i
  solved goal nr. 2 (directly):
    Sgx_create_MC_done( <~platform_sec.10, t.2>, ~mcid.10,
                        ~mc_session.10, t.8
    ) ▶₀ #vr.9
  solved goal nr. 0 (directly):
    Sgx_create_MC_done( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 2 (directly):
    Start_process_cwt( t.1, t.2, mrenclave.10, ~p_id.10 ) ▶₀ #vr.9
  solved goal nr. 2 (directly):
    Start_process_cwt( pk_ISV.5, platform_sec.5, mrenclave.5, ~p_id.5
    ) ▶₀ #vr.4
  solved goal nr. 4 (directly):
    !ISV_E_Singup1( sk_ISV.10, pk_ISV.10 ) ▶₀ #vr.9
  solved goal nr. 2 (directly): Sgx_create_MC( t.1, t.3 ) ▶₂ #vr.5
  solved goal nr. 3 (directly):
    Signup_Mem_12( t.1, t.2, ~platform_sec.10, ~mrenclave.10,
                   ~sk_user.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 0 (directly):
    Sgx_increment_MC_done( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 5 (directly):
    !Signup_Mem_23( sk_ISV.15, t.1, t.2, mrenclave.10, sk_user.15,
                    pk_user.15, mcid.15, initMC.15
    ) ▶₁ #vr.14
  solved goal nr. 4 (directly):
    !ISV_E_Singup1( sk_ISV.10, pk_ISV.10 ) ▶₀ #vr.9
  solved goal nr. 5 (directly):
    Sgx_create_MC( <~platform_sec.10, t.2>, ~mc_session.10 ) ▶₂ #vr.11
  solved goal nr. 5 (directly):
    !Signup_Mem_23( sk_ISV.14, pk_ISV.5, platform_sec.5, mrenclave.5,
                    sk_user.14, pk_user.14, mcid.14, initMC.14
    ) ▶₁ #vr.13
  solved goal nr. 0 (directly):
    Signup_Mem_12( t.1, t.2, t.3, t.4, t.5, t.6 ) ▶₀ #i
  solved goal nr. 2 (directly):
    Start_process_cwc( t.1, t.2, t.3, t.4 ) ▶₀ #vr.10
  solved goal nr. 0 (directly):
    Start_process_cwc( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 2 (directly): !ISV_E_Singup1( t.1, t.2 ) ▶₀ #vr.7
  solved goal nr. 7 (directly):
    Sgx_create_MC_done( <~platform_sec.18, t.1>, ~mcid.18,
                        ~mc_session.18, initMC.15
    ) ▶₀ #vr.17
  solved goal nr. 2 (directly):
    !Signup_Mem_23( sk_ISV.6, t.1, t.2, t.3, sk_user.6, pk_user.6,
                    mcid.6, initMC.6
    ) ▶₁ #vr.5
  solved goal nr. 7 (directly): !ISV_E_Singup1( t.1, t.2 ) ▶₀ #vr.15
  solved goal nr. 12 (directly):
    !Signup_Mem_23( sk_ISV.22, t.1, t.2, t.3, sk_user.22, pk_user.22,
                    mcid.22, initMC.22
    ) ▶₁ #vr.21
  solved goal nr. 0 (directly):
    Start_process_cwt( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 8 (directly):
    Signup_Mem_12( sk_ISV.15, t.1, ~platform_sec.18, ~mrenclave.18,
                   ~sk_user.18, ~mc_session.18
    ) ▶₁ #vr.17
  solved goal nr. 7 (directly):
    Sgx_create_MC_done( <~platform_sec.17, pk_ISV.5>, ~mcid.17,
                        ~mc_session.17, initMC.14
    ) ▶₀ #vr.16
  solved goal nr. 2 (directly):
    !Signup_Mem_23( sk_ISV.6, t.1, t.2, t.3, sk_user.6, pk_user.6,
                    mcid.6, initMC.6
    ) ▶₁ #vr.5
  solved goal nr. 14 (directly):
    Sgx_create_MC_done( <~platform_sec.25, t.1>, ~mcid.25,
                        ~mc_session.25, initMC.22
    ) ▶₀ #vr.24
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <~platform_sec.9, t.1>, ~mcid.9, ~mc_session.9,
                        initMC.6
    ) ▶₀ #vr.8
  solved goal nr. 10 (directly):
    Sgx_create_MC( <~platform_sec.18, t.1>, ~mc_session.18 ) ▶₂ #vr.19
  solved goal nr. 0 (directly): !KU( ~t.1 ) @ #i
  solved goal nr. 8 (directly):
    Signup_Mem_12( sk_ISV.14, pk_ISV.5, ~platform_sec.17,
                   ~mrenclave.17, ~sk_user.17, ~mc_session.17
    ) ▶₁ #vr.16
  solved goal nr. 10 (directly):
    Sgx_create_MC( <~platform_sec.17, pk_ISV.5>, ~mc_session.17
    ) ▶₂ #vr.18
  solved goal nr. 5 (directly):
    Signup_Mem_12( sk_ISV.6, t.1, ~platform_sec.9, ~mrenclave.9,
                   ~sk_user.9, ~mc_session.9
    ) ▶₁ #vr.8
  solved goal nr. 15 (directly):
    Signup_Mem_12( sk_ISV.22, t.1, ~platform_sec.25, ~mrenclave.25,
                   ~sk_user.25, ~mc_session.25
    ) ▶₁ #vr.24
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <~platform_sec.9, t.1>, ~mcid.9, ~mc_session.9,
                        initMC.6
    ) ▶₀ #vr.8
  solved goal nr. 7 (directly):
    Sgx_create_MC( <~platform_sec.9, t.1>, ~mc_session.9 ) ▶₂ #vr.10
  solved goal nr. 0 (directly): !KU( adec(t.1, t.2) ) @ #i
  solved goal nr. 5 (directly):
    Signup_Mem_12( sk_ISV.6, t.1, ~platform_sec.9, ~mrenclave.9,
                   ~sk_user.9, ~mc_session.9
    ) ▶₁ #vr.8
  solved goal nr. 17 (directly):
    Sgx_create_MC( <~platform_sec.25, t.1>, ~mc_session.25 ) ▶₂ #vr.26
  solved goal nr. 12 (directly):
    !ISV_E_Singup1( sk_ISV.15, t.1 ) ▶₀ #vr.23
  solved goal nr. 7 (directly):
    Sgx_create_MC( <~platform_sec.9, t.1>, ~mc_session.9 ) ▶₂ #vr.10
  solved goal nr. 0 (directly): !KU( aenc(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( fst(t.1) ) @ #i
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <~platform_sec.7, pk_ISV.7>, ~t.1,
                        ~mc_session.7, initMC.7
    ) ▶₀ #vr.6
  solved goal nr. 9 (directly):
    !ISV_E_Singup1( sk_ISV.6, t.1 ) ▶₀ #vr.14
  solved goal nr. 5 (directly):
    Signup_Mem_12( sk_ISV.7, pk_ISV.7, ~platform_sec.7, ~mrenclave.7,
                   ~sk_user.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 9 (directly):
    !ISV_E_Singup1( sk_ISV.6, t.1 ) ▶₀ #vr.14
  solved goal nr. 13 (directly):
    Sgx_create_MC( <~platform_sec.7, pk_ISV.7>, ~mc_session.7
    ) ▶₂ #vr.15
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.10, pk_ISV.10, platform_sec.10,
                    mrenclave.10, sk_user.10, t.8, mcid.10, initMC.10
    ) ▶₁ #vr.9
  solved goal nr. 19 (directly):
    !ISV_E_Singup1( sk_ISV.22, t.1 ) ▶₀ #vr.30
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.7, pk_ISV.7, platform_sec.7, mrenclave.7,
                    sk_user.7, t.5, mcid.7, initMC.7
    ) ▶₁ #vr.6
  solved goal nr. 12 (directly):
    !ISV_E_Singup1( sk_ISV.14, pk_ISV.5 ) ▶₀ #vr.22
  solved goal nr. 15 (directly):
    !ISV_E_Singup1( sk_ISV.7, pk_ISV.7 ) ▶₀ #vr.19
  solved goal nr. 0 (directly): !KU( h(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( pk(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( sdec(t.1, t.2) ) @ #i
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.10, pk_ISV.10, platform_sec.10,
                    mrenclave.10, sk_user.10, t.8, mcid.10, initMC.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 0 (directly): !KU( senc(t.1, t.2) ) @ #i
  solved goal nr. 3 (directly):
    Sgx_increment_MC_done( <t.2, t.1>, mcid.6, ~mc_session.6,
                           ('1'+valMC_ref.6)
    ) ▶₁ #vr.5
  solved goal nr. 0 (directly): !KU( sign(t.1, t.2) ) @ #i
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 0 (directly): !KU( snd(t.1) ) @ #i
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.10, pk_ISV.10, platform_sec.10,
                    mrenclave.10, sk_user.10, t.8, mcid.10, initMC.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <~platform_sec.10, pk_ISV.10>, ~mcid.10,
                        ~mc_session.10, initMC.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly):
    Signup_Mem_12( sk_ISV.10, pk_ISV.10, ~platform_sec.10,
                   ~mrenclave.10, ~sk_user.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 7 (directly):
    Sgx_create_MC( <~platform_sec.10, pk_ISV.10>, ~mc_session.10
    ) ▶₂ #vr.11
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.10, pk_ISV.10, platform_sec.10,
                    mrenclave.10, sk_user.10, t.8, mcid.10, initMC.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.7, pk_ISV.7, platform_sec.7, mrenclave.7,
                    sk_user.7, t.5, mcid.7, initMC.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.7, pk_ISV.7, platform_sec.7, mrenclave.7,
                    sk_user.7, t.5, mcid.7, initMC.7
    ) ▶₁ #vr.6
  solved goal nr. 9 (directly):
    !ISV_E_Singup1( sk_ISV.10, pk_ISV.10 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, t.1
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 0 (directly): !KU( verify(t.1, t.2, t.3) ) @ #i
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, t.2, pk_user.10,
             seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.10, pk_ISV.10, platform_sec.10,
                    mrenclave.10, sk_user.10, t.8, mcid.10, initMC.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <~platform_sec.7, pk_ISV.7>, ~mcid.7,
                        ~mc_session.7, initMC.7
    ) ▶₀ #vr.6
  solved goal nr. 14 (directly):
    Start_process_cwt( pk_ISV.10, platform_sec.10, mrenclave.21,
                       ~p_id.10
    ) ▶₀ #vr.20
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 5 (directly):
    Signup_Mem_12( sk_ISV.7, pk_ISV.7, ~platform_sec.7, ~mrenclave.7,
                   ~sk_user.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 15 (directly):
    Sgx_create_MC( <~platform_sec.7, pk_ISV.7>, ~mc_session.7
    ) ▶₂ #vr.18
  solved goal nr. 17 (directly):
    !Signup_Mem_23( sk_ISV.26, pk_ISV.10, platform_sec.10,
                    mrenclave.21, sk_user.26, pk_user.26, mcid.26, initMC.26
    ) ▶₁ #vr.25
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 19 (directly):
    Sgx_create_MC_done( <~platform_sec.29, pk_ISV.10>, ~mcid.29,
                        ~mc_session.29, initMC.26
    ) ▶₀ #vr.28
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 17 (directly):
    !ISV_E_Singup1( sk_ISV.7, pk_ISV.7 ) ▶₀ #vr.22
  solved goal nr. 20 (directly):
    Signup_Mem_12( sk_ISV.26, pk_ISV.10, ~platform_sec.29,
                   ~mrenclave.29, ~sk_user.29, ~mc_session.29
    ) ▶₁ #vr.28
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.13, pk_ISV.13, platform_sec.13,
                    mrenclave.13, sk_user.13, t.11, mcid.13, initMC.13
    ) ▶₁ #vr.12
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 22 (directly):
    Sgx_create_MC( <~platform_sec.29, pk_ISV.10>, ~mc_session.29
    ) ▶₂ #vr.30
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 19 (directly):
    PSE_CreateMC( MC_owner_policy, ~mcid.18, ptr.24, '1' ) @ #j.25
  solved goal nr. 20 (directly):
    PSE_CreateMC( MC_owner_policy, ~mcid.18, ptr.26, '1' ) @ #j.27
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.13, pk_ISV.13>, mcid.13,
                           ~mc_session.13, valMC_ref.13
    ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 24 (directly):
    !ISV_E_Singup1( sk_ISV.26, pk_ISV.10 ) ▶₀ #vr.34
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.13, pk_ISV.13>, mcid.13,
                           ~mc_session.13, valMC_ref.13
    ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 13 (directly):
    Sgx_increment_MC_done( <t.2, t.1>, mcid.22, ~mc_session.22,
                           ('1'+valMC_ref.22)
    ) ▶₁ #vr.21
  solved goal nr. 2 (directly):
    Start_process_cwc( pk_ISV.5, platform_sec.5, mrenclave.5, p_id.5
    ) ▶₀ #vr.4
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.13, platform_sec.13, ~p_id.13, sk_user.13,
             pk_user.13, seal_key.13, mcid.13, ~mc_session.13
    ) ▶₁ #vr.12
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 11 (directly):
    !Signup_Mem_23( sk_ISV.16, pk_ISV.5, platform_sec.5, mrenclave.5,
                    sk_user.16, pk_user.16, mcid.16, initMC.16
    ) ▶₁ #vr.15
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.7, pk_ISV.7, platform_sec.7, mrenclave.7,
                    sk_user.7, t.5, mcid.7, initMC.7
    ) ▶₁ #vr.6
  solved goal nr. 13 (directly):
    Sgx_create_MC_done( <~platform_sec.19, pk_ISV.5>, ~mcid.19,
                        ~mc_session.19, initMC.16
    ) ▶₀ #vr.18
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <~platform_sec.7, pk_ISV.7>, ~mcid.7,
                        ~mc_session.7, initMC.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, t.2, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 6 (directly):
    Sgx_create_MC_done( <~platform_sec.10, pk_ISV.7>, ~mcid.10,
                        ~mc_session.10, initMC.7
    ) ▶₀ #vr.9
  solved goal nr. 14 (directly):
    Signup_Mem_12( sk_ISV.16, pk_ISV.5, ~platform_sec.19,
                   ~mrenclave.19, ~sk_user.19, ~mc_session.19
    ) ▶₁ #vr.18
  solved goal nr. 5 (directly):
    Signup_Mem_12( sk_ISV.7, pk_ISV.7, ~platform_sec.7, ~mrenclave.7,
                   ~t.1, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 15 (directly):
    Sgx_create_MC( <~platform_sec.7, pk_ISV.7>, ~mc_session.7
    ) ▶₂ #vr.18
  solved goal nr. 16 (directly):
    Sgx_create_MC( <~platform_sec.19, pk_ISV.5>, ~mc_session.19
    ) ▶₂ #vr.20
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.13, pk_ISV.13>, mcid.13,
                           ~mc_session.13, valMC_ref.13
    ) ▶₀ #vr.12
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 7 (directly):
    Signup_Mem_12( sk_ISV.7, pk_ISV.7, ~platform_sec.10, ~mrenclave.10,
                   ~sk_user.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.13, platform_sec.13, ~p_id.13, sk_user.13,
             pk_user.13, seal_key.13, mcid.13, ~mc_session.13
    ) ▶₁ #vr.12
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 9 (directly):
    Sgx_create_MC( <~platform_sec.10, pk_ISV.7>, ~mc_session.10
    ) ▶₂ #vr.11
  solved goal nr. 18 (directly):
    !ISV_E_Singup1( sk_ISV.16, pk_ISV.5 ) ▶₀ #vr.24
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 17 (directly):
    !ISV_E_Singup1( sk_ISV.7, pk_ISV.7 ) ▶₀ #vr.22
  solved goal nr. 11 (directly):
    !ISV_E_Singup1( sk_ISV.7, pk_ISV.7 ) ▶₀ #vr.15
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.13, pk_ISV.13>, mcid.13,
                           ~mc_session.13, valMC_ref.13
    ) ▶₀ #vr.12
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.13, platform_sec.13, ~p_id.13, sk_user.13,
             pk_user.13, seal_key.13, mcid.13, ~mc_session.13
    ) ▶₁ #vr.12
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    !Signup_Mem_23( sk_ISV.7, pk_ISV.7, platform_sec.7, mrenclave.7,
                    sk_user.7, t.5, mcid.7, initMC.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, pk_ISV.10>, mcid.10,
                           ~mc_session.10, valMC_ref.10
    ) ▶₀ #vr.9
  solved goal nr. 12 (directly):
    Sgx_increment_MC_done( <platform_sec.5, pk_ISV.5>, mcid.16,
                           ~mc_session.16, ('1'+valMC_ref.16)
    ) ▶₁ #vr.15
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.10, platform_sec.10, ~p_id.10, sk_user.10,
             pk_user.10, seal_key.10, mcid.10, ~mc_session.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, pk_ISV.7>, mcid.7,
                           ~mc_session.7, valMC_ref.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_CWT( pk_ISV.7, platform_sec.7, ~p_id.7, sk_user.7, pk_user.7,
             seal_key.7, mcid.7, ~mc_session.7
    ) ▶₁ #vr.6
  solved goal nr. 9 (precomputed):
    !KU( h(<~platform_sec.7, ~mrenclave.7, 'seal'>) ) @ #vk.11
  solved goal nr. 9 (precomputed):
    !KU( h(<~platform_sec.7, ~mrenclave.7, 'seal'>) ) @ #vk.11
  solved goal nr. 9 (precomputed):
    !KU( h(<~platform_sec.7, ~mrenclave.7, 'seal'>) ) @ #vk.11
  solved goal nr. 2 (directly): (#t1 < #t2)  ∥ (#t2 < #t1)
  solved goal nr. 5 (precomputed):
    Sgx_increment_MC_done( <platform1, pk_ISV>, mcid, ~mc_session,
                           ('1'+valMC_ref)
    ) ▶₁ #t1
  solved goal nr. 1 (directly):
     (last(#i))  ∥
     (∃ ptr #j.
       (PSE_CreateMC( MC_owner_policy, mcid, ptr, '1' ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  solved goal nr. 6 (directly):
    PSE_CreateMC( MC_owner_policy, mcid, ptr.1, '1' ) @ #j.2
  simplified formula:
      "((#last.3 < #j.2) ∨ (#j.2 < #last.3))"
    to
      "#j.2 < #last.3"
  solved goal nr. 7 (simplified):
     (#last.3 < #j.2)  ∥ (#j.2 < #last.3)
  simplified formula:
      "((#j.2 = #i) ∨ (#i < #j.2))"
    to
      "⊥"
  solved goal nr. 10 (simplified): (#j.2 = #i)  ∥ (#i < #j.2)
  solved goal nr. 2 (directly): (#i < #j)  ∥ (#j < #i)
  simplified formula:
      "((last(#i)) ∨ (last(#j)) ∨ (#j = #i))"
    to
      "last(#j)"
  solved goal nr. 15 (directly):
    PSE_CreateMC( <platform1, pk_ISV>, mcid, ptr.8, '1' ) @ #j.9
  solved goal nr. 5 (simplified):
     (last(#i))  ∥ (last(#j))  ∥ (#j = #i)
  simplified formula:
      "((last(#j)) ∨ (last(#i)) ∨ (#i = #j))"
    to
      "last(#j)"
  solved goal nr. 4 (simplified):
     (last(#j))  ∥ (last(#i))  ∥ (#i = #j)
  solved goal nr. 5 (precomputed):
    Sgx_increment_MC_done( <platform, pk_ISV>, mcid, ~mc_session,
                           ('1'+valMC_ref)
    ) ▶₁ #t1
  solved goal nr. 5 (precomputed):
    Sgx_increment_MC_done( <platform, pk_ISV>, mcid, ~mc_session,
                           ('1'+valMC_ref)
    ) ▶₁ #t1
  simplified formula:
      "((last(#i)) ∨ (last(#j)) ∨ (#j = #i))"
    to
      "last(#i)"
  solved goal nr. 5 (simplified):
     (last(#i))  ∥ (last(#j))  ∥ (#j = #i)
  simplified formula:
      "((last(#j)) ∨ (last(#i)) ∨ (#i = #j))"
    to
      "last(#i)"
  solved goal nr. 4 (simplified):
     (last(#j))  ∥ (last(#i))  ∥ (#i = #j)
  solved goal nr. 12 (directly):
    PSE_CreateMC( <platform, pk_ISV>, mcid, ptr.7, '1' ) @ #j.8
  solved goal nr. 15 (precomputed):
    !ISV_E_Singup1( ~sk_ISV, pk(~sk_ISV) ) ▶₀ #csd1
  solved goal nr. 12 (directly):
    PSE_CreateMC( <platform, pk_ISV>, mcid, ptr.7, '1' ) @ #j.8
  solved goal nr. 8 (precomputed):
    Sgx_increment_MC_done( <platform2, pk_ISV.1>, mcid.1,
                           ~mc_session.1, ('1'+valMC_ref)
    ) ▶₁ #t2
  solved goal nr. 3 (precomputed):
    Sgx_increment_MC( MC_owner_policy, mcid, label ) ▶₀ #i
  solved goal nr. 21 (directly):
    PSE_CreateMC( <platform2, pk_ISV.1>, mcid.1, ptr.8, '1' ) @ #j.9
  solved goal nr. 8 (precomputed):
    Sgx_increment_MC_done( <platform, pk_ISV.1>, mcid.1, ~mc_session.1,
                           ('1'+valMC_ref)
    ) ▶₁ #t2
  solved goal nr. 18 (directly):
    PSE_CreateMC( <platform, pk_ISV.1>, mcid.1, ptr.8, '1' ) @ #j.9
  solved goal nr. 16 (precomputed):
    Sgx_create_MC( MC_owner_policy, label.2 ) ▶₂ #j.1
  solved goal nr. 16 (precomputed):
    Sgx_create_MC( MC_owner_policy, label.2 ) ▶₂ #j.1
  simplified formula:
      "((last(#vr.18)) ∨
        (∃ ptr #j.
          (PSE_CreateMC( <platform_sec.3, pk_ISV.2>, mcid.15, ptr, '1'
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.18)))"
    to
      "∃ ptr #j.
        (PSE_CreateMC( <platform_sec.3, pk_ISV.2>, mcid.15, ptr, '1'
         ) @ #j)
       ∧
        (¬(last(#j))) ∧ (#j < #vr.18)"
  solved goal nr. 11 (precomputed):
    Sgx_increment_MC_done( <platform3, pk_ISV.2>, mcid.2,
                           ~mc_session.2, ('1'+valMC_ref)
    ) ▶₁ #t3
  solved goal nr. 17 (simplified):
     (last(#vr.18))  ∥
     (∃ ptr #j.
       (PSE_CreateMC( <platform_sec.3, pk_ISV.2>, mcid.15, ptr, '1'
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.18))
  solved goal nr. 18 (directly):
    PSE_CreateMC( <platform_sec.3, pk_ISV.2>, mcid.15, ptr.27, '1'
    ) @ #j.28
  solved goal nr. 8 (precomputed):
    Sgx_increment_MC_done( <platform, pk_ISV.1>, mcid.1, ~mc_session.1,
                           ('1'+valMC_ref)
    ) ▶₁ #t2
  simplified formula:
      "((#i < #j.28) ∨ (#j.28 < #i))"
    to
      "⊤"
  solved goal nr. 19 (simplified): (#i < #j.28)  ∥ (#j.28 < #i)
  solved goal nr. 17 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #cmc1
  solved goal nr. 14 (precomputed):
    Sgx_create_MC( <platform, pk_ISV>, label ) ▶₂ #j
  solved goal nr. 27 (directly):
    PSE_CreateMC( <platform3, pk_ISV.2>, mcid.2, ptr.11, '1' ) @ #j.12
  solved goal nr. 18 (directly):
    PSE_CreateMC( <platform, pk_ISV.1>, mcid.1, ptr.8, '1' ) @ #j.9
  solved goal nr. 21 (precomputed):
    Sgx_create_MC( <platform_sec, pk_ISV>, label ) ▶₂ #j
  solved goal nr. 10 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #i
  solved goal nr. 6 (precomputed):
    !KU( senc(<mcid, sk_user, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk
  solved goal nr. 10 (precomputed):
    !KU( senc(<mcid, sk_user, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.4
  solved goal nr. 14 (precomputed):
    Sgx_create_MC( <platform, pk_ISV>, label ) ▶₂ #j
  solved goal nr. 20 (precomputed):
    Sgx_create_MC( <~platform_sec, pk_ISV>, label ) ▶₂ #j.1
  simplified formula:
      "((#vr.3 = #i) ∨ (#i < #vr.3))"
    to
      "⊥"
  solved goal nr. 23 (simplified): (#vr.3 = #i)  ∥ (#i < #vr.3)
  simplified formula:
      "((#vr.3 = #i) ∨ (#i < #vr.3))"
    to
      "⊥"
  solved goal nr. 19 (simplified): (#vr.3 = #i)  ∥ (#i < #vr.3)
  solved goal nr. 17 (precomputed):
    Sgx_create_MC( <platform1, pk_ISV>, label ) ▶₂ #j
  solved goal nr. 19 (precomputed):
    Sgx_create_MC_done( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                        ~mc_session.1, '1'
    ) ▶₀ #csd2
  solved goal nr. 20 (precomputed):
    !KU( h(<~platform_sec, ~mrenclave, 'seal'>) ) @ #vk.6
  solved goal nr. 20 (precomputed):
    Sgx_create_MC( <~platform_sec, pk_ISV>, label ) ▶₂ #j.1
  solved goal nr. 23 (precomputed):
    Sgx_create_MC( <platform2, pk_ISV>, label ) ▶₂ #j.1
  solved goal nr. 27 (precomputed): !KU( ~platform_sec ) @ #vk.12
  solved goal nr. 10 (precomputed):
    !KU( senc(<mcid, sk_user, pk(x)>,
              h(<~platform_sec, mrenclave, 'seal'>))
    ) @ #vk.4
  solved goal nr. 29 (precomputed):
    Sgx_create_MC( <platform3, pk_ISV>, label ) ▶₂ #j.2
  solved goal nr. 20 (precomputed):
    Signup_Mem_12( ~sk_ISV, pk(~sk_ISV), ~platform_sec, ~mrenclave,
                   ~sk_user, ~mc_session
    ) ▶₁ #csd2
  simplified formula:
      "((#j = #i) ∨ (#i < #j))"
    to
      "⊥"
  solved goal nr. 29 (simplified): (#j = #i)  ∥ (#i < #j)
  solved goal nr. 22 (precomputed):
    !Signup_Mem_23( ~sk_ISV, pk(~sk_ISV), ~platform_sec, ~mrenclave,
                    ~sk_user, pk(~sk_user), ~mcid, '1'
    ) ▶₁ #csd3
  solved goal nr. 4 (precomputed):
    EPC_CWC_12( pk(~sk_ISV), ~platform_sec, mrenclave, p_id, sk_user,
                pk_user, ~mcid, ~mc_session.1, valMC_ref
    ) ▶₀ #t1
  solved goal nr. 26 (precomputed):
    !KU( h(<~platform_sec, mrenclave, 'seal'>) ) @ #vk.6
  solved goal nr. 39 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.21, ptr.33, '1'
    ) @ #j.34
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 38 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 33 (precomputed): !KU( ~platform_sec ) @ #vk.12
  solved goal nr. 24 (precomputed):
    Start_process_cwt( pk(~sk_ISV), ~platform_sec, ~mrenclave, ~p_id
    ) ▶₀ #cwt1
  solved goal nr. 16 (precomputed):
    !KU( h(<~platform_sec, ~mrenclave, 'seal'>) ) @ #vk.2
  solved goal nr. 31 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.4
  solved goal nr. 27 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk
  solved goal nr. 47 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.31, ptr.43, '1'
    ) @ #j.44
  solved goal nr. 41 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2
  solved goal nr. 23 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 6 (directly):
    PSE_sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ~ptr,
                          ptr2, ('1'+'1')
    ) @ #imc1
  solved goal nr. 42 (precomputed): !KU( ~mcid ) @ #vk.7
  solved goal nr. 7 (directly):
    E_CreateWaitTimer_2( pk(~sk_ISV), ~platform_sec, ~p_id, ~sk_user,
                         pk(~sk_user), ~mcid, ('1'+'1')
    ) @ #cwt2
  solved goal nr. 40 (precomputed):
    !KU( senc(<~mcid, sk_user, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.4
  solved goal nr. 30 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 49 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.3
  solved goal nr. 53 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                           ~mc_session.2, ('1'+'1')
    ) ▶₀ #cwt2
  solved goal nr. 60 (directly):
    PSE_CreateMC( <~platform_sec.16, pk(~sk_ISV.19)>, mcid.14, ptr.51,
                  '1'
    ) @ #j.52
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 59 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 58 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.15, '1'
    ) @ #j.16
  solved goal nr. 54 (precomputed):
    EPC_CWT( pk(~sk_ISV), ~platform_sec, ~p_id, ~sk_user, pk(~sk_user),
             seal_key, ~mcid, ~mc_session.2
    ) ▶₁ #cwt2
  solved goal nr. 39 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 51 (precomputed): !KU( ~mcid ) @ #vk.7
  solved goal nr. 46 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 62 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 68 (directly):
    PSE_CreateMC( <~platform_sec.31, pk(~sk_ISV.34)>, mcid.29, ptr.66,
                  '1'
    ) @ #j.67
  solved goal nr. 8 (directly):
    E_CreateWaitCertificate_1( pk(~sk_ISV), ~platform_sec, ~mrenclave,
                               ~p_id, ~sk_user, pk(~sk_user), ~mcid, ('1'+'1')
    ) @ #cwc1
  solved goal nr. 70 (precomputed):
    Start_process_cwc( pk(~sk_ISV), ~platform_sec, ~mrenclave, ~p_id
    ) ▶₀ #cwc1
  solved goal nr. 49 (precomputed): !KU( ~platform_sec ) @ #vk.12
  solved goal nr. 45 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 55 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 70 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 85 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.16, ptr.23, '1'
    ) @ #j.24
  solved goal nr. 31 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.4
  solved goal nr. 9 (directly):
    PSE_sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                          ~ptr_new, ptr3, ('1'+'1'+'1')
    ) @ #imc2
  solved goal nr. 54 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user, pk_user.2>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.5
  solved goal nr. 87 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j
  solved goal nr. 9 (directly):
    PSE_sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                          ~ptr_new, ptr3, ('1'+'1'+'1')
    ) @ #imc2
  solved goal nr. 30 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 47 (precomputed): !KU( ~mcid ) @ #vk.7
  solved goal nr. 10 (directly):
    E_CreateWaitCertificate_2( pk(~sk_ISV), ~platform_sec, ~mrenclave,
                               ~p_id, ~sk_user, pk(~sk_user), ~mcid, ('1'+'1'+'1')
    ) @ #cwc2
  solved goal nr. 65 (directly):
    PSE_CreateMC( <~platform_sec.16, pk(~sk_ISV.19)>, mcid.14, ptr.51,
                  '1'
    ) @ #j.52
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 64 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 76 (precomputed): !KU( ~mcid.3 ) @ #vk.10
  solved goal nr. 7 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.1), ~platform_sec.1, mrenclave.1, p_id.1,
                sk_user.1, pk_user, ~mcid.1, ~mc_session.2, ('1'+valMC)
    ) ▶₀ #t2
  solved goal nr. 10 (directly):
    E_CreateWaitCertificate_2( pk(~sk_ISV), ~platform_sec, ~mrenclave,
                               ~p_id, ~sk_user, pk(~sk_user), ~mcid, ('1'+'1'+'1')
    ) @ #cwc2
  solved goal nr. 95 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                           ~mc_session.2, ('1'+'1'+'1')
    ) ▶₁ #cwc2
  solved goal nr. 91 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                           ~mc_session.2, ('1'+'1'+'1')
    ) ▶₁ #cwc2
  solved goal nr. 51 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 99 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.19, '1'
    ) @ #j.20
  solved goal nr. 38 (precomputed): !KU( ~mcid ) @ #vk.3
  solved goal nr. 11 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
    ) ▶₁ #i
  solved goal nr. 67 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 91 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.38, ptr.52,
                  '1'
    ) @ #j.53
  solved goal nr. 95 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.18, '1'
    ) @ #j.19
  solved goal nr. 54 (precomputed): !KU( ~platform_sec ) @ #vk.13
  solved goal nr. 44 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.18, '1'
    ) @ #j.19
  simplified formula:
      "((last(#vr.12)) ∨ (last(#vr.12)) ∨ (#vr.12 = #vr.12))"
    to
      "⊤"
  solved goal nr. 43 (simplified):
     (last(#vr.12))  ∥ (last(#vr.12))  ∥ (#vr.12 = #vr.12)
  solved goal nr. 50 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.3
    ) ▶₀ #imc1
  solved goal nr. 82 (precomputed):
    !KU( senc(<~mcid.1, sk_user.1, pk(x)>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.10
  solved goal nr. 93 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.3
  solved goal nr. 50 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.3
    ) ▶₀ #imc1
  solved goal nr. 109 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.25, ptr.37, '1'
    ) @ #j.38
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 113 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.26, ptr.38, '1'
    ) @ #j.39
  solved goal nr. 81 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.1) ) @ #vk.10
  solved goal nr. 95 (precomputed): !KU( ~mcid.1 ) @ #vk.13
  solved goal nr. 51 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ~ptr, '1'
    ) ▶₁ #imc1
  solved goal nr. 55 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.24, ptr.36, '1'
    ) @ #j.37
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.27))"
    to
      "⊤"
  solved goal nr. 54 (simplified):
     (last(#vr.27))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.27)
  solved goal nr. 109 (directly):
    PSE_CreateMC( <~platform_sec.38, pk(~sk_ISV.41)>, mcid.36, ptr.71,
                  '1'
    ) @ #j.72
  solved goal nr. 47 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.5
  solved goal nr. 43 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.1
  solved goal nr. 57 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2
  solved goal nr. 81 (precomputed):
    EPC_CWC_12( pk(~sk_ISV), ~platform_sec, ~mrenclave, ~p_id,
                sk_user.1, pk_user, ~mcid, ~mc_session.4, valMC_ref
    ) ▶₀ #vr
  solved goal nr. 59 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.25, ptr.37, '1'
    ) @ #j.38
  simplified formula:
      "((last(#vr.28)) ∨ (last(#vr.28)) ∨ (#vr.28 = #vr.28))"
    to
      "⊤"
  solved goal nr. 58 (simplified):
     (last(#vr.28))  ∥ (last(#vr.28))  ∥ (#vr.28 = #vr.28)
  solved goal nr. 99 (precomputed): !KU( ~sk_user.1 ) @ #vk.11
  solved goal nr. 111 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 124 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.22, ptr.34, '1'
    ) @ #j.35
  solved goal nr. 45 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 47 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.1
  solved goal nr. 51 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.5
  solved goal nr. 61 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2
  solved goal nr. 10 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #i
  solved goal nr. 117 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.10
  solved goal nr. 126 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j
  solved goal nr. 98 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.1, pk_user.1>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.11
  solved goal nr. 102 (precomputed): !KU( ~platform_sec.1 ) @ #vk.18
  solved goal nr. 39 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.21, ptr.33, '1'
    ) @ #j.34
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 38 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 82 (precomputed):
    !KU( senc(<~mcid.1, sk_user.1, pk(x)>,
              h(<~platform_sec.1, mrenclave.1, 'seal'>))
    ) @ #vk.10
  solved goal nr. 31 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.4
  solved goal nr. 41 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2
  solved goal nr. 27 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk
  solved goal nr. 116 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.9
  solved goal nr. 128 (precomputed): !KU( ~mcid ) @ #vk.13
  solved goal nr. 30 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 42 (precomputed): !KU( ~mcid ) @ #vk.7
  solved goal nr. 145 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.19, ptr.56, '1'
    ) @ #j.57
  solved goal nr. 60 (directly):
    PSE_CreateMC( <~platform_sec.16, pk(~sk_ISV.19)>, mcid.14, ptr.51,
                  '1'
    ) @ #j.52
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 59 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 99 (precomputed): !KU( ~mcid.1 ) @ #vk.13
  solved goal nr. 81 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.1) ) @ #vk.10
  solved goal nr. 46 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 62 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 113 (directly):
    PSE_CreateMC( <~platform_sec.38, pk(~sk_ISV.41)>, mcid.36, ptr.71,
                  '1'
    ) @ #j.72
  solved goal nr. 83 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.2
    ) ▶₀ #imc2
  solved goal nr. 45 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 132 (precomputed): !KU( ~sk_user ) @ #vk.10
  solved goal nr. 49 (precomputed): !KU( ~platform_sec ) @ #vk.12
  solved goal nr. 50 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 164 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.27, ptr.39, '1'
    ) @ #j.40
  solved goal nr. 31 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.4
  solved goal nr. 78 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 84 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ~ptr_new,
                  ('1'+'1')
    ) ▶₁ #imc2
  solved goal nr. 103 (precomputed): !KU( ~sk_user.1 ) @ #vk.11
  solved goal nr. 106 (precomputed): !KU( ~platform_sec.1 ) @ #vk.19
  solved goal nr. 115 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 171 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.20, '1'
    ) @ #j.21
  solved goal nr. 47 (precomputed): !KU( ~mcid ) @ #vk.7
  solved goal nr. 30 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 83 (precomputed): !KU( ~platform_sec.3 ) @ #vk.16
  solved goal nr. 65 (directly):
    PSE_CreateMC( <~platform_sec.16, pk(~sk_ISV.19)>, mcid.14, ptr.51,
                  '1'
    ) @ #j.52
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 64 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 11 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
    ) ▶₁ #i
  solved goal nr. 59 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 38 (precomputed): !KU( ~mcid ) @ #vk.3
  solved goal nr. 51 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 54 (precomputed): !KU( ~platform_sec ) @ #vk.13
  solved goal nr. 67 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 44 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.18, '1'
    ) @ #j.19
  simplified formula:
      "((last(#vr.12)) ∨ (last(#vr.12)) ∨ (#vr.12 = #vr.12))"
    to
      "⊤"
  solved goal nr. 43 (simplified):
     (last(#vr.12))  ∥ (last(#vr.12))  ∥ (#vr.12 = #vr.12)
  solved goal nr. 58 (precomputed): !KU( ~platform_sec ) @ #vk.12
  solved goal nr. 40 (precomputed):
    !KU( senc(<~mcid, sk_user, pk(x)>,
              h(<~platform_sec, mrenclave, 'seal'>))
    ) @ #vk.4
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 55 (precomputed): !KU( ~mcid ) @ #vk.7
  solved goal nr. 39 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 55 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.24, ptr.36, '1'
    ) @ #j.37
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.27))"
    to
      "⊤"
  solved goal nr. 54 (simplified):
     (last(#vr.27))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.27)
  solved goal nr. 72 (directly):
    PSE_CreateMC( <~platform_sec.31, pk(~sk_ISV.34)>, mcid.29, ptr.66,
                  '1'
    ) @ #j.67
  solved goal nr. 47 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.5
  solved goal nr. 43 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.1
  solved goal nr. 57 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2
  solved goal nr. 59 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.25, ptr.37, '1'
    ) @ #j.38
  simplified formula:
      "((last(#vr.28)) ∨ (last(#vr.28)) ∨ (#vr.28 = #vr.28))"
    to
      "⊤"
  solved goal nr. 58 (simplified):
     (last(#vr.28))  ∥ (last(#vr.28))  ∥ (#vr.28 = #vr.28)
  solved goal nr. 59 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 45 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 74 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 68 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 11 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
    ) ▶₁ #i
  solved goal nr. 58 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user, pk_user.2>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.5
  solved goal nr. 74 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.22, '1'
    ) @ #j.23
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.16))"
    to
      "⊤"
  solved goal nr. 73 (simplified):
     (last(#vr.16))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.16)
  solved goal nr. 80 (precomputed): !KU( ~mcid.3 ) @ #vk.10
  solved goal nr. 7 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.1), ~platform_sec.1, mrenclave.1, p_id.1,
                sk_user.1, pk_user, ~mcid.1, ~mc_session.2, ('1'+valMC)
    ) ▶₀ #t2
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 95 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.38, ptr.52,
                  '1'
    ) @ #j.53
  solved goal nr. 85 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.28, ptr.40, '1'
    ) @ #j.41
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 84 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 97 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.3
  solved goal nr. 86 (precomputed):
    !KU( senc(<~mcid.1, sk_user.1, pk(x)>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.10
  solved goal nr. 77 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.11
  solved goal nr. 73 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.7
  solved goal nr. 89 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.29, ptr.41, '1'
    ) @ #j.42
  solved goal nr. 87 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 88 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 85 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.1) ) @ #vk.10
  solved goal nr. 88 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 76 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10
  solved goal nr. 99 (precomputed): !KU( ~mcid.1 ) @ #vk.13
  solved goal nr. 106 (directly):
    PSE_CreateMC( <~platform_sec.23, pk(~sk_ISV.26)>, mcid.21, ptr.58,
                  '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 105 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 113 (directly):
    PSE_CreateMC( <~platform_sec.38, pk(~sk_ISV.41)>, mcid.36, ptr.71,
                  '1'
    ) @ #j.72
  solved goal nr. 92 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 108 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 115 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 86 (precomputed):
    !KU( senc(<~mcid.1, sk_user.1, pk(x)>,
              h(<~platform_sec.1, mrenclave.1, 'seal'>))
    ) @ #vk.10
  solved goal nr. 91 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 85 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.1) ) @ #vk.10
  solved goal nr. 82 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 114 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 117 (directly):
    PSE_CreateMC( <~platform_sec.38, pk(~sk_ISV.41)>, mcid.36, ptr.71,
                  '1'
    ) @ #j.72
  solved goal nr. 87 (precomputed): !KU( ~platform_sec.3 ) @ #vk.16
  simplified formula:
      "((last(#vr.8)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.8))"
    to
      "#vr.16 = #vr.8"
  solved goal nr. 129 (simplified):
     (last(#vr.8))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.8)
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.8)) ∨ (#vr.8 = #vr.16))"
    to
      "#vr.8 = #vr.16"
  solved goal nr. 128 (simplified):
     (last(#vr.16))  ∥ (last(#vr.8))  ∥ (#vr.8 = #vr.16)
  solved goal nr. 96 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 63 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 116 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 62 (precomputed): !KU( ~platform_sec ) @ #vk.13
  solved goal nr. 95 (precomputed): !KU( ~platform_sec ) @ #vk.19
  solved goal nr. 117 (precomputed): !KU( ~mcid.3 ) @ #vk.14
  solved goal nr. 10 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.2), ~platform_sec.2, mrenclave.2, p_id.2,
                sk_user.2, pk_user, ~mcid.2, ~mc_session.3, ('1'+valMC)
    ) ▶₀ #t3
  solved goal nr. 77 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 132 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.45, ptr.59,
                  '1'
    ) @ #j.60
  solved goal nr. 76 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10
  solved goal nr. 93 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 123 (precomputed):
    !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
              h(<~platform_sec.2, ~mrenclave.2, 'seal'>))
    ) @ #vk.14
  solved goal nr. 134 (precomputed):
    Sgx_create_MC( <~platform_sec.2, pk(~sk_ISV.2)>, label ) ▶₂ #j.3
  solved goal nr. 111 (directly):
    PSE_CreateMC( <~platform_sec.23, pk(~sk_ISV.26)>, mcid.21, ptr.58,
                  '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 110 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 97 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 113 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 122 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14
  solved goal nr. 136 (precomputed): !KU( ~mcid.2 ) @ #vk.17
  solved goal nr. 150 (directly):
    PSE_CreateMC( <~platform_sec.45, pk(~sk_ISV.48)>, mcid.43, ptr.78,
                  '1'
    ) @ #j.79
  solved goal nr. 96 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 140 (precomputed): !KU( ~sk_user.2 ) @ #vk.15
  solved goal nr. 152 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 101 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 139 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.15
  solved goal nr. 100 (precomputed): !KU( ~platform_sec ) @ #vk.20
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 84 (precomputed): !KU( ~mcid ) @ #vk.10
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.1
    ) ▶₀ #vr
  solved goal nr. 158 (precomputed): !KU( ~mcid.3 ) @ #vk.18
  solved goal nr. 91 (precomputed): !KU( ~platform_sec ) @ #vk.15
  solved goal nr. 171 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 81 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.11
  solved goal nr. 77 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.7
  solved goal nr. 91 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr
  solved goal nr. 178 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 80 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10
  solved goal nr. 92 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 19 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.2
    ) ▶₀ #vr.1
  solved goal nr. 110 (directly):
    PSE_CreateMC( <~platform_sec.24, pk(~sk_ISV.27)>, mcid.22, ptr.59,
                  '1'
    ) @ #j.60
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 109 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 96 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 112 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 192 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 20 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.1
  solved goal nr. 199 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 95 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 25 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.3
    ) ▶₀ #vr.2
  solved goal nr. 118 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 213 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 126 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.30, '1'
    ) @ #j.31
  simplified formula:
      "((last(#vr.11)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.11))"
    to
      "#vr.24 = #vr.11"
  solved goal nr. 124 (simplified):
     (last(#vr.11))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.11)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.11)) ∨ (#vr.11 = #vr.24))"
    to
      "#vr.11 = #vr.24"
  solved goal nr. 123 (simplified):
     (last(#vr.24))  ∥ (last(#vr.11))  ∥ (#vr.11 = #vr.24)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 125 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 26 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.2
  solved goal nr. 220 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr.51,
                  '1'
    ) @ #j.52
  simplified formula:
      "((last(#vr.8)) ∨ (last(#vr.17)) ∨ (#vr.17 = #vr.8))"
    to
      "#vr.17 = #vr.8"
  solved goal nr. 139 (simplified):
     (last(#vr.8))  ∥ (last(#vr.17))  ∥ (#vr.17 = #vr.8)
  simplified formula:
      "((last(#vr.17)) ∨ (last(#vr.8)) ∨ (#vr.8 = #vr.17))"
    to
      "#vr.8 = #vr.17"
  solved goal nr. 138 (simplified):
     (last(#vr.17))  ∥ (last(#vr.8))  ∥ (#vr.8 = #vr.17)
  solved goal nr. 100 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 57 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.6
    ) ▶₀ #vr.15
  solved goal nr. 99 (precomputed): !KU( ~platform_sec ) @ #vk.19
  solved goal nr. 234 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 81 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 58 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old, valMC
    ) ▶₁ #vr.15
  solved goal nr. 241 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.56, '1'
    ) @ #j.57
  solved goal nr. 80 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10
  solved goal nr. 97 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 115 (directly):
    PSE_CreateMC( <~platform_sec.24, pk(~sk_ISV.27)>, mcid.22, ptr.59,
                  '1'
    ) @ #j.60
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 114 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 101 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.7
    ) ▶₀ #vr.24
  solved goal nr. 101 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.7
    ) ▶₀ #vr.24
  solved goal nr. 101 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 117 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 249 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 255 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.57, ptr.69,
                  '1'
    ) @ #j.70
  solved goal nr. 102 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  '1'
    ) ▶₁ #vr.24
  solved goal nr. 142 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.8
    ) ▶₀ #vr.33
  solved goal nr. 100 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 102 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.24
  solved goal nr. 255 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.52,
                  '1'
    ) @ #j.53
  solved goal nr. 260 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 142 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.8
    ) ▶₀ #vr.33
  solved goal nr. 160 (precomputed): !KU( ~sk_user.2 ) @ #vk.20
  solved goal nr. 123 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 105 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 131 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.30, '1'
    ) @ #j.31
  simplified formula:
      "((last(#vr.11)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.11))"
    to
      "#vr.24 = #vr.11"
  solved goal nr. 129 (simplified):
     (last(#vr.11))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.11)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.11)) ∨ (#vr.11 = #vr.24))"
    to
      "#vr.11 = #vr.24"
  solved goal nr. 128 (simplified):
     (last(#vr.24))  ∥ (last(#vr.11))  ∥ (#vr.11 = #vr.24)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 130 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 165 (precomputed): !KU( ~platform_sec.3 ) @ #vk.24
  solved goal nr. 104 (precomputed): !KU( ~platform_sec ) @ #vk.20
  solved goal nr. 269 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.58, ptr.70,
                  '1'
    ) @ #j.71
  solved goal nr. 146 (precomputed): !KU( ~platform_sec.2 ) @ #vk.18
  solved goal nr. 88 (precomputed): !KU( ~mcid ) @ #vk.10
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 96 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.26, '1'
    ) @ #j.27
  solved goal nr. 143 (precomputed): !KU( ~platform_sec.2 ) @ #vk.22
  simplified formula:
      "((last(#vr.11)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.11))"
    to
      "#vr.20 = #vr.11"
  solved goal nr. 94 (simplified):
     (last(#vr.11))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.11)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.11)) ∨ (#vr.11 = #vr.20))"
    to
      "#vr.11 = #vr.20"
  solved goal nr. 93 (simplified):
     (last(#vr.20))  ∥ (last(#vr.11))  ∥ (#vr.11 = #vr.20)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 95 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 123 (precomputed):
    !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
              h(<~platform_sec.2, mrenclave.2, 'seal'>))
    ) @ #vk.14
  solved goal nr. 95 (precomputed): !KU( ~platform_sec ) @ #vk.15
  solved goal nr. 70 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 122 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14
  solved goal nr. 140 (precomputed): !KU( ~mcid.2 ) @ #vk.17
  solved goal nr. 75 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 154 (directly):
    PSE_CreateMC( <~platform_sec.45, pk(~sk_ISV.48)>, mcid.43, ptr.78,
                  '1'
    ) @ #j.79
  solved goal nr. 50 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 50 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 144 (precomputed): !KU( ~sk_user.2 ) @ #vk.15
  solved goal nr. 156 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 73 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 11 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
    ) ▶₁ #i
  solved goal nr. 143 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.15
  solved goal nr. 79 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.22, '1'
    ) @ #j.23
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.16))"
    to
      "⊤"
  solved goal nr. 78 (simplified):
     (last(#vr.16))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.16)
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 162 (precomputed): !KU( ~mcid.3 ) @ #vk.18
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.1
    ) ▶₀ #vr
  solved goal nr. 175 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 90 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.28, ptr.40, '1'
    ) @ #j.41
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 89 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr
  solved goal nr. 94 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.29, ptr.41, '1'
    ) @ #j.42
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 93 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 182 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 82 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.11
  solved goal nr. 78 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk_user.1>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.7
  solved goal nr. 92 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2
  solved goal nr. 81 (precomputed):
    !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10
  solved goal nr. 93 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 19 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.2
    ) ▶₀ #vr.1
  solved goal nr. 111 (directly):
    PSE_CreateMC( <~platform_sec.23, pk(~sk_ISV.26)>, mcid.21, ptr.58,
                  '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 110 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 97 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 196 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 113 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 20 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.1
  solved goal nr. 203 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 96 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 25 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.3
    ) ▶₀ #vr.2
  solved goal nr. 101 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 217 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 100 (precomputed): !KU( ~platform_sec ) @ #vk.19
  solved goal nr. 82 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 26 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.2
  solved goal nr. 226 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 81 (precomputed):
    !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10
  solved goal nr. 98 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 57 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.6
    ) ▶₀ #vr.15
  solved goal nr. 116 (directly):
    PSE_CreateMC( <~platform_sec.23, pk(~sk_ISV.26)>, mcid.21, ptr.58,
                  '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 115 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 240 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 102 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 118 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 58 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old, valMC
    ) ▶₁ #vr.15
  solved goal nr. 247 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.56, '1'
    ) @ #j.57
  solved goal nr. 101 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 105 (precomputed): !KU( ~platform_sec ) @ #vk.20
  solved goal nr. 106 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 101 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.7
    ) ▶₀ #vr.24
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 89 (precomputed): !KU( ~mcid ) @ #vk.10
  solved goal nr. 101 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.7
    ) ▶₀ #vr.24
  solved goal nr. 255 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 96 (precomputed): !KU( ~platform_sec ) @ #vk.15
  solved goal nr. 261 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.57, ptr.69,
                  '1'
    ) @ #j.70
  solved goal nr. 102 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  '1'
    ) ▶₁ #vr.24
  solved goal nr. 82 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk_user.1>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.7
  solved goal nr. 86 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.11
  solved goal nr. 96 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2
  solved goal nr. 164 (precomputed): !KU( ~sk_user.2 ) @ #vk.20
  solved goal nr. 169 (precomputed): !KU( ~platform_sec.3 ) @ #vk.24
  solved goal nr. 85 (precomputed):
    !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10
  solved goal nr. 97 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 115 (directly):
    PSE_CreateMC( <~platform_sec.24, pk(~sk_ISV.27)>, mcid.22, ptr.59,
                  '1'
    ) @ #j.60
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 114 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 150 (precomputed): !KU( ~platform_sec.2 ) @ #vk.18
  solved goal nr. 147 (precomputed): !KU( ~platform_sec.2 ) @ #vk.23
  solved goal nr. 101 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 117 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 119 (precomputed): !KU( ~sk_user.1 ) @ #vk.16
  solved goal nr. 100 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 124 (precomputed): !KU( ~platform_sec.3 ) @ #vk.20
  solved goal nr. 105 (precomputed): !KU( ~platform_sec.1 ) @ #vk.14
  solved goal nr. 102 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.1, pk_user.1>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.11
  solved goal nr. 105 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 123 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 131 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.30, '1'
    ) @ #j.31
  simplified formula:
      "((last(#vr.12)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.12))"
    to
      "#vr.24 = #vr.12"
  solved goal nr. 129 (simplified):
     (last(#vr.12))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.12)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.12)) ∨ (#vr.12 = #vr.24))"
    to
      "#vr.12 = #vr.24"
  solved goal nr. 128 (simplified):
     (last(#vr.24))  ∥ (last(#vr.12))  ∥ (#vr.12 = #vr.24)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 130 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 10 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.2), ~platform_sec.2, mrenclave.2, p_id.2,
                sk_user.2, pk_user, ~mcid.2, ~mc_session.3, ('1'+valMC)
    ) ▶₀ #t3
  solved goal nr. 121 (precomputed): !KU( ~mcid.3 ) @ #vk.14
  solved goal nr. 104 (precomputed): !KU( ~platform_sec ) @ #vk.19
  solved goal nr. 136 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.45, ptr.59,
                  '1'
    ) @ #j.60
  solved goal nr. 86 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 127 (precomputed):
    !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
              h(<~platform_sec.2, ~mrenclave.2, 'seal'>))
    ) @ #vk.14
  solved goal nr. 138 (precomputed):
    Sgx_create_MC( <~platform_sec.2, pk(~sk_ISV.2)>, label ) ▶₂ #j.3
  solved goal nr. 102 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 85 (precomputed):
    !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10
  solved goal nr. 126 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14
  solved goal nr. 140 (precomputed): !KU( ~mcid.2 ) @ #vk.17
  solved goal nr. 154 (directly):
    PSE_CreateMC( <~platform_sec.45, pk(~sk_ISV.48)>, mcid.43, ptr.78,
                  '1'
    ) @ #j.79
  solved goal nr. 120 (directly):
    PSE_CreateMC( <~platform_sec.24, pk(~sk_ISV.27)>, mcid.22, ptr.59,
                  '1'
    ) @ #j.60
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 119 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 144 (precomputed): !KU( ~sk_user.2 ) @ #vk.15
  solved goal nr. 156 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 106 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 122 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 143 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.15
  solved goal nr. 105 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 109 (precomputed): !KU( ~platform_sec ) @ #vk.20
  solved goal nr. 162 (precomputed): !KU( ~mcid.3 ) @ #vk.18
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.1
    ) ▶₀ #vr
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 93 (precomputed): !KU( ~mcid ) @ #vk.10
  solved goal nr. 101 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.26, '1'
    ) @ #j.27
  simplified formula:
      "((last(#vr.12)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.12))"
    to
      "#vr.20 = #vr.12"
  solved goal nr. 99 (simplified):
     (last(#vr.12))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.12)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.12)) ∨ (#vr.12 = #vr.20))"
    to
      "#vr.12 = #vr.20"
  solved goal nr. 98 (simplified):
     (last(#vr.20))  ∥ (last(#vr.12))  ∥ (#vr.12 = #vr.20)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 100 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 175 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr
  solved goal nr. 182 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 100 (precomputed): !KU( ~platform_sec ) @ #vk.15
  solved goal nr. 19 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.2
    ) ▶₀ #vr.1
  solved goal nr. 75 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 196 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 80 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 55 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 46 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 58 (precomputed): !KU( ~mcid ) @ #vk.8
  solved goal nr. 20 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.1
  solved goal nr. 76 (directly):
    PSE_CreateMC( <~platform_sec.19, pk(~sk_ISV.22)>, mcid.17, ptr.54,
                  '1'
    ) @ #j.55
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.27))"
    to
      "⊤"
  solved goal nr. 75 (simplified):
     (last(#vr.27))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.27)
  solved goal nr. 205 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 62 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 78 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 61 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 25 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.3
    ) ▶₀ #vr.2
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 84 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 219 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 86 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 26 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.2
  solved goal nr. 91 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 226 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 66 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 65 (precomputed): !KU( ~platform_sec ) @ #vk.13
  solved goal nr. 47 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 57 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.6
    ) ▶₀ #vr.15
  solved goal nr. 46 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 63 (precomputed): !KU( ~mcid ) @ #vk.8
  solved goal nr. 81 (directly):
    PSE_CreateMC( <~platform_sec.19, pk(~sk_ISV.22)>, mcid.17, ptr.54,
                  '1'
    ) @ #j.55
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.27))"
    to
      "⊤"
  solved goal nr. 80 (simplified):
     (last(#vr.27))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.27)
  solved goal nr. 240 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 67 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 83 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 58 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old, valMC
    ) ▶₁ #vr.15
  solved goal nr. 66 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 247 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.56, '1'
    ) @ #j.57
  solved goal nr. 89 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 91 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 87 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.1), ~platform_sec.1, ~mrenclave.1, p_id.1,
                sk_user.3, pk_user, ~mcid.1, ~mc_session.7, valMC_ref
    ) ▶₀ #vr.19
  solved goal nr. 87 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.1), ~platform_sec.1, ~mrenclave.1, p_id.1,
                sk_user.3, pk_user, ~mcid.1, ~mc_session.7, valMC_ref
    ) ▶₀ #vr.19
  solved goal nr. 96 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 255 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.52, ptr.64,
                  '1'
    ) @ #j.65
  solved goal nr. 261 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.53, ptr.65,
                  '1'
    ) @ #j.66
  solved goal nr. 71 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 70 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 257 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.3
  solved goal nr. 248 (precomputed):
    !KU( senc(<~mcid.1, sk_user.3, pk(x)>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.18
  solved goal nr. 54 (precomputed): !KU( ~mcid ) @ #vk.4
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 164 (precomputed): !KU( ~sk_user.2 ) @ #vk.20
  solved goal nr. 61 (precomputed): !KU( ~platform_sec ) @ #vk.9
  solved goal nr. 50 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 62 (precomputed): !KU( ~mcid ) @ #vk.8
  solved goal nr. 80 (directly):
    PSE_CreateMC( <~platform_sec.20, pk(~sk_ISV.23)>, mcid.18, ptr.55,
                  '1'
    ) @ #j.56
  simplified formula:
      "((last(#vr.28)) ∨ (last(#vr.28)) ∨ (#vr.28 = #vr.28))"
    to
      "⊤"
  solved goal nr. 79 (simplified):
     (last(#vr.28))  ∥ (last(#vr.28))  ∥ (#vr.28 = #vr.28)
  solved goal nr. 66 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 82 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 169 (precomputed): !KU( ~platform_sec.3 ) @ #vk.24
  solved goal nr. 65 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 150 (precomputed): !KU( ~platform_sec.2 ) @ #vk.18
  solved goal nr. 88 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 147 (precomputed): !KU( ~platform_sec.2 ) @ #vk.22
  solved goal nr. 96 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.26, '1'
    ) @ #j.27
  simplified formula:
      "((last(#vr.5)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.5))"
    to
      "#vr.20 = #vr.5"
  solved goal nr. 94 (simplified):
     (last(#vr.5))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.5)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.5)) ∨ (#vr.5 = #vr.20))"
    to
      "#vr.5 = #vr.20"
  solved goal nr. 93 (simplified):
     (last(#vr.20))  ∥ (last(#vr.5))  ∥ (#vr.5 = #vr.20)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 95 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 90 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 127 (precomputed):
    !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
              h(<~platform_sec.2, mrenclave.2, 'seal'>))
    ) @ #vk.14
  solved goal nr. 95 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 70 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 126 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14
  solved goal nr. 144 (precomputed): !KU( ~mcid.2 ) @ #vk.17
  solved goal nr. 69 (precomputed): !KU( ~platform_sec ) @ #vk.13
  solved goal nr. 158 (directly):
    PSE_CreateMC( <~platform_sec.45, pk(~sk_ISV.48)>, mcid.43, ptr.78,
                  '1'
    ) @ #j.79
  solved goal nr. 51 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 148 (precomputed): !KU( ~sk_user.2 ) @ #vk.15
  solved goal nr. 160 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 67 (precomputed): !KU( ~mcid ) @ #vk.8
  solved goal nr. 50 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 85 (directly):
    PSE_CreateMC( <~platform_sec.20, pk(~sk_ISV.23)>, mcid.18, ptr.55,
                  '1'
    ) @ #j.56
  simplified formula:
      "((last(#vr.28)) ∨ (last(#vr.28)) ∨ (#vr.28 = #vr.28))"
    to
      "⊤"
  solved goal nr. 84 (simplified):
     (last(#vr.28))  ∥ (last(#vr.28))  ∥ (#vr.28 = #vr.28)
  solved goal nr. 147 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.15
  solved goal nr. 71 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 87 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 70 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.1
    ) ▶₀ #vr
  solved goal nr. 166 (precomputed): !KU( ~mcid.3 ) @ #vk.18
  solved goal nr. 93 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 101 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.26, '1'
    ) @ #j.27
  simplified formula:
      "((last(#vr.5)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.5))"
    to
      "#vr.20 = #vr.5"
  solved goal nr. 99 (simplified):
     (last(#vr.5))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.5)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.5)) ∨ (#vr.5 = #vr.20))"
    to
      "#vr.5 = #vr.20"
  solved goal nr. 98 (simplified):
     (last(#vr.20))  ∥ (last(#vr.5))  ∥ (#vr.5 = #vr.20)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 100 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 179 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 95 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr
  solved goal nr. 186 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 100 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 75 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 19 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.2
    ) ▶₀ #vr.1
  solved goal nr. 74 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 200 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 58 (precomputed): !KU( ~mcid ) @ #vk.4
  solved goal nr. 66 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.22, '1'
    ) @ #j.23
  simplified formula:
      "((last(#vr.5)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.5))"
    to
      "#vr.16 = #vr.5"
  solved goal nr. 64 (simplified):
     (last(#vr.5))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.5)
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.5)) ∨ (#vr.5 = #vr.16))"
    to
      "#vr.5 = #vr.16"
  solved goal nr. 63 (simplified):
     (last(#vr.16))  ∥ (last(#vr.5))  ∥ (#vr.5 = #vr.16)
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.16))"
    to
      "⊤"
  solved goal nr. 65 (simplified):
     (last(#vr.16))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.16)
  solved goal nr. 65 (precomputed): !KU( ~platform_sec ) @ #vk.9
  solved goal nr. 11 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
    ) ▶₁ #i
  solved goal nr. 68 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 20 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.1
  solved goal nr. 209 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 74 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.22, '1'
    ) @ #j.23
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.16))"
    to
      "⊤"
  solved goal nr. 73 (simplified):
     (last(#vr.16))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.16)
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 25 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.3
    ) ▶₀ #vr.2
  solved goal nr. 85 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.28, ptr.40, '1'
    ) @ #j.41
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 84 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 223 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 87 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2
  solved goal nr. 73 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.7
  solved goal nr. 77 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.11
  solved goal nr. 89 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.29, ptr.41, '1'
    ) @ #j.42
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 88 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 76 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10
  solved goal nr. 88 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 106 (directly):
    PSE_CreateMC( <~platform_sec.23, pk(~sk_ISV.26)>, mcid.21, ptr.58,
                  '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 105 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 26 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.2
  solved goal nr. 232 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 92 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 108 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 91 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 57 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.6
    ) ▶₀ #vr.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 114 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 246 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  simplified formula:
      "((last(#vr.8)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.8))"
    to
      "#vr.16 = #vr.8"
  solved goal nr. 129 (simplified):
     (last(#vr.8))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.8)
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.8)) ∨ (#vr.8 = #vr.16))"
    to
      "#vr.8 = #vr.16"
  solved goal nr. 128 (simplified):
     (last(#vr.16))  ∥ (last(#vr.8))  ∥ (#vr.8 = #vr.16)
  solved goal nr. 96 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 58 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old, valMC
    ) ▶₁ #vr.15
  solved goal nr. 95 (precomputed): !KU( ~platform_sec ) @ #vk.19
  solved goal nr. 253 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.56, '1'
    ) @ #j.57
  solved goal nr. 77 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 76 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10
  solved goal nr. 93 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 111 (directly):
    PSE_CreateMC( <~platform_sec.23, pk(~sk_ISV.26)>, mcid.21, ptr.58,
                  '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 110 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 87 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.1), ~platform_sec.1, ~mrenclave.1, p_id.1,
                sk_user.3, pk_user, ~mcid.1, ~mc_session.7, valMC_ref
    ) ▶₀ #vr.19
  solved goal nr. 87 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.1), ~platform_sec.1, ~mrenclave.1, p_id.1,
                sk_user.3, pk_user, ~mcid.1, ~mc_session.7, valMC_ref
    ) ▶₀ #vr.19
  solved goal nr. 168 (precomputed): !KU( ~sk_user.2 ) @ #vk.20
  solved goal nr. 97 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 113 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 261 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.52, ptr.64,
                  '1'
    ) @ #j.65
  solved goal nr. 96 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 267 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.53, ptr.65,
                  '1'
    ) @ #j.66
  solved goal nr. 173 (precomputed): !KU( ~platform_sec.3 ) @ #vk.24
  solved goal nr. 154 (precomputed): !KU( ~platform_sec.2 ) @ #vk.18
  solved goal nr. 119 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 101 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 151 (precomputed): !KU( ~platform_sec.2 ) @ #vk.23
  solved goal nr. 100 (precomputed): !KU( ~platform_sec ) @ #vk.20
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 84 (precomputed): !KU( ~mcid ) @ #vk.10
  solved goal nr. 123 (precomputed): !KU( ~sk_user.1 ) @ #vk.16
  solved goal nr. 91 (precomputed): !KU( ~platform_sec ) @ #vk.15
  solved goal nr. 128 (precomputed): !KU( ~platform_sec.3 ) @ #vk.20
  solved goal nr. 81 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.11
  solved goal nr. 77 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.7
  solved goal nr. 91 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2
  solved goal nr. 109 (precomputed): !KU( ~platform_sec.1 ) @ #vk.14
  solved goal nr. 103 (precomputed): !KU( ~sk_user.1 ) @ #vk.11
  solved goal nr. 80 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10
  solved goal nr. 92 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 102 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.1, pk_user.1>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.11
  solved goal nr. 110 (directly):
    PSE_CreateMC( <~platform_sec.24, pk(~sk_ISV.27)>, mcid.22, ptr.59,
                  '1'
    ) @ #j.60
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 109 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 96 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 112 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 10 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.2), ~platform_sec.2, mrenclave.2, p_id.2,
                sk_user.2, pk_user, ~mcid.2, ~mc_session.3, ('1'+valMC)
    ) ▶₀ #t3
  solved goal nr. 121 (precomputed): !KU( ~mcid.3 ) @ #vk.14
  solved goal nr. 136 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.45, ptr.59,
                  '1'
    ) @ #j.60
  solved goal nr. 95 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 138 (precomputed):
    Sgx_create_MC( <~platform_sec.2, pk(~sk_ISV.2)>, label ) ▶₂ #j.3
  solved goal nr. 127 (precomputed):
    !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
              h(<~platform_sec.2, ~mrenclave.2, 'seal'>))
    ) @ #vk.14
  solved goal nr. 118 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 126 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.30, '1'
    ) @ #j.31
  simplified formula:
      "((last(#vr.11)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.11))"
    to
      "#vr.24 = #vr.11"
  solved goal nr. 124 (simplified):
     (last(#vr.11))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.11)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.11)) ∨ (#vr.11 = #vr.24))"
    to
      "#vr.11 = #vr.24"
  solved goal nr. 123 (simplified):
     (last(#vr.24))  ∥ (last(#vr.11))  ∥ (#vr.11 = #vr.24)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 125 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  simplified formula:
      "((last(#vr.8)) ∨ (last(#vr.17)) ∨ (#vr.17 = #vr.8))"
    to
      "#vr.17 = #vr.8"
  solved goal nr. 139 (simplified):
     (last(#vr.8))  ∥ (last(#vr.17))  ∥ (#vr.17 = #vr.8)
  simplified formula:
      "((last(#vr.17)) ∨ (last(#vr.8)) ∨ (#vr.8 = #vr.17))"
    to
      "#vr.8 = #vr.17"
  solved goal nr. 138 (simplified):
     (last(#vr.17))  ∥ (last(#vr.8))  ∥ (#vr.8 = #vr.17)
  solved goal nr. 140 (precomputed): !KU( ~mcid.2 ) @ #vk.17
  solved goal nr. 126 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14
  solved goal nr. 154 (directly):
    PSE_CreateMC( <~platform_sec.45, pk(~sk_ISV.48)>, mcid.43, ptr.78,
                  '1'
    ) @ #j.79
  solved goal nr. 100 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 120 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 99 (precomputed): !KU( ~platform_sec ) @ #vk.19
  solved goal nr. 144 (precomputed): !KU( ~sk_user.2 ) @ #vk.15
  solved goal nr. 156 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 81 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 143 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.15
  solved goal nr. 97 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 80 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10
  solved goal nr. 115 (directly):
    PSE_CreateMC( <~platform_sec.24, pk(~sk_ISV.27)>, mcid.22, ptr.59,
                  '1'
    ) @ #j.60
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 114 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.1
    ) ▶₀ #vr
  solved goal nr. 162 (precomputed): !KU( ~mcid.3 ) @ #vk.18
  solved goal nr. 101 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 117 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 175 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 100 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr
  solved goal nr. 184 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 19 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.2
    ) ▶₀ #vr.1
  solved goal nr. 105 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 131 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.30, '1'
    ) @ #j.31
  simplified formula:
      "((last(#vr.11)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.11))"
    to
      "#vr.24 = #vr.11"
  solved goal nr. 129 (simplified):
     (last(#vr.11))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.11)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.11)) ∨ (#vr.11 = #vr.24))"
    to
      "#vr.11 = #vr.24"
  solved goal nr. 128 (simplified):
     (last(#vr.24))  ∥ (last(#vr.11))  ∥ (#vr.11 = #vr.24)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 130 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 198 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 104 (precomputed): !KU( ~platform_sec ) @ #vk.20
  solved goal nr. 20 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.1
  solved goal nr. 205 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 88 (precomputed): !KU( ~mcid ) @ #vk.10
  solved goal nr. 96 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.26, '1'
    ) @ #j.27
  simplified formula:
      "((last(#vr.11)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.11))"
    to
      "#vr.20 = #vr.11"
  solved goal nr. 94 (simplified):
     (last(#vr.11))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.11)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.11)) ∨ (#vr.11 = #vr.20))"
    to
      "#vr.11 = #vr.20"
  solved goal nr. 93 (simplified):
     (last(#vr.20))  ∥ (last(#vr.11))  ∥ (#vr.11 = #vr.20)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 95 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 25 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.3
    ) ▶₀ #vr.2
  solved goal nr. 95 (precomputed): !KU( ~platform_sec ) @ #vk.15
  solved goal nr. 70 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 219 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 75 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 26 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.2
  solved goal nr. 50 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 226 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 73 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 11 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
    ) ▶₁ #i
  solved goal nr. 43 (precomputed):
    EPC_CWC_12( pk(~sk_ISV), ~platform_sec, ~mrenclave, p_id,
                sk_user.3, pk_user, ~mcid, ~mc_session.6, valMC_ref
    ) ▶₀ #vr.10
  solved goal nr. 79 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.22, '1'
    ) @ #j.23
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.16))"
    to
      "⊤"
  solved goal nr. 78 (simplified):
     (last(#vr.16))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.16)
  solved goal nr. 240 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.52, ptr.64, '1'
    ) @ #j.65
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
    ) ▶₀ #j
  solved goal nr. 233 (precomputed):
    !KU( senc(<~mcid, sk_user.3, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.19
  solved goal nr. 242 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.3
  solved goal nr. 90 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.28, ptr.40, '1'
    ) @ #j.41
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 89 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 244 (precomputed): !KU( ~mcid ) @ #vk.22
  solved goal nr. 232 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.18
  solved goal nr. 94 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.29, ptr.41, '1'
    ) @ #j.42
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 93 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 82 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.11
  solved goal nr. 78 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk_user.1>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.7
  solved goal nr. 92 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2
  solved goal nr. 261 (directly):
    PSE_CreateMC( <~platform_sec.52, pk(~sk_ISV.55)>, mcid.50, ptr.87,
                  '1'
    ) @ #j.88
  solved goal nr. 81 (precomputed):
    !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10
  solved goal nr. 93 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 111 (directly):
    PSE_CreateMC( <~platform_sec.23, pk(~sk_ISV.26)>, mcid.21, ptr.58,
                  '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 110 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 248 (precomputed): !KU( ~sk_user ) @ #vk.19
  solved goal nr. 263 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 251 (precomputed): !KU( ~platform_sec ) @ #vk.27
  solved goal nr. 233 (precomputed):
    !KU( senc(<~mcid, sk_user.3, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.19
  solved goal nr. 97 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 113 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 96 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 232 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.18
  solved goal nr. 164 (precomputed): !KU( ~sk_user.2 ) @ #vk.20
  solved goal nr. 265 (directly):
    PSE_CreateMC( <~platform_sec.52, pk(~sk_ISV.55)>, mcid.50, ptr.87,
                  '1'
    ) @ #j.88
  solved goal nr. 101 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 100 (precomputed): !KU( ~platform_sec ) @ #vk.19
  solved goal nr. 169 (precomputed): !KU( ~platform_sec.3 ) @ #vk.24
  solved goal nr. 82 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 150 (precomputed): !KU( ~platform_sec.2 ) @ #vk.18
  solved goal nr. 147 (precomputed): !KU( ~platform_sec.2 ) @ #vk.22
  solved goal nr. 98 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 81 (precomputed):
    !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10
  solved goal nr. 127 (precomputed):
    !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
              h(<~platform_sec.2, mrenclave.2, 'seal'>))
    ) @ #vk.14
  solved goal nr. 116 (directly):
    PSE_CreateMC( <~platform_sec.23, pk(~sk_ISV.26)>, mcid.21, ptr.58,
                  '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.31)) ∨ (last(#vr.31)) ∨ (#vr.31 = #vr.31))"
    to
      "⊤"
  solved goal nr. 115 (simplified):
     (last(#vr.31))  ∥ (last(#vr.31))  ∥ (#vr.31 = #vr.31)
  solved goal nr. 102 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 118 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 126 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14
  solved goal nr. 144 (precomputed): !KU( ~mcid.2 ) @ #vk.17
  solved goal nr. 158 (directly):
    PSE_CreateMC( <~platform_sec.45, pk(~sk_ISV.48)>, mcid.43, ptr.78,
                  '1'
    ) @ #j.79
  solved goal nr. 101 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 106 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 105 (precomputed): !KU( ~platform_sec ) @ #vk.20
  solved goal nr. 148 (precomputed): !KU( ~sk_user.2 ) @ #vk.15
  solved goal nr. 160 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 89 (precomputed): !KU( ~mcid ) @ #vk.10
  solved goal nr. 147 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.15
  solved goal nr. 96 (precomputed): !KU( ~platform_sec ) @ #vk.15
  solved goal nr. 86 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.11
  solved goal nr. 96 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2
  solved goal nr. 82 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk_user.1>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.7
  solved goal nr. 166 (precomputed): !KU( ~mcid.3 ) @ #vk.18
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.1
    ) ▶₀ #vr
  solved goal nr. 85 (precomputed):
    !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10
  solved goal nr. 97 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 179 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 115 (directly):
    PSE_CreateMC( <~platform_sec.24, pk(~sk_ISV.27)>, mcid.22, ptr.59,
                  '1'
    ) @ #j.60
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 114 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 101 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 117 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr
  solved goal nr. 188 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 100 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 19 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.2
    ) ▶₀ #vr.1
  solved goal nr. 202 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 105 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 131 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.30, '1'
    ) @ #j.31
  simplified formula:
      "((last(#vr.12)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.12))"
    to
      "#vr.24 = #vr.12"
  solved goal nr. 129 (simplified):
     (last(#vr.12))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.12)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.12)) ∨ (#vr.12 = #vr.24))"
    to
      "#vr.12 = #vr.24"
  solved goal nr. 128 (simplified):
     (last(#vr.24))  ∥ (last(#vr.12))  ∥ (#vr.12 = #vr.24)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 130 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 20 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.1
  solved goal nr. 209 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 104 (precomputed): !KU( ~platform_sec ) @ #vk.19
  solved goal nr. 86 (precomputed):
    !KU( senc(<~mcid, sk_user.2, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 25 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.3
    ) ▶₀ #vr.2
  solved goal nr. 223 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 85 (precomputed):
    !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10
  solved goal nr. 102 (precomputed): !KU( ~mcid ) @ #vk.14
  solved goal nr. 26 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.2
  solved goal nr. 120 (directly):
    PSE_CreateMC( <~platform_sec.24, pk(~sk_ISV.27)>, mcid.22, ptr.59,
                  '1'
    ) @ #j.60
  simplified formula:
      "((last(#vr.32)) ∨ (last(#vr.32)) ∨ (#vr.32 = #vr.32))"
    to
      "⊤"
  solved goal nr. 119 (simplified):
     (last(#vr.32))  ∥ (last(#vr.32))  ∥ (#vr.32 = #vr.32)
  solved goal nr. 232 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 106 (precomputed): !KU( ~sk_user ) @ #vk.11
  solved goal nr. 122 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 43 (precomputed):
    EPC_CWC_12( pk(~sk_ISV), ~platform_sec, ~mrenclave, p_id,
                sk_user.3, pk_user, ~mcid, ~mc_session.6, valMC_ref
    ) ▶₀ #vr.10
  solved goal nr. 246 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.52, ptr.64, '1'
    ) @ #j.65
  solved goal nr. 105 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.11
  solved goal nr. 110 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 109 (precomputed): !KU( ~platform_sec ) @ #vk.20
  solved goal nr. 239 (precomputed):
    !KU( senc(<~mcid, sk_user.3, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.19
  solved goal nr. 248 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.3
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 93 (precomputed): !KU( ~mcid ) @ #vk.10
  solved goal nr. 101 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.26, '1'
    ) @ #j.27
  simplified formula:
      "((last(#vr.12)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.12))"
    to
      "#vr.20 = #vr.12"
  solved goal nr. 99 (simplified):
     (last(#vr.12))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.12)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.12)) ∨ (#vr.12 = #vr.20))"
    to
      "#vr.12 = #vr.20"
  solved goal nr. 98 (simplified):
     (last(#vr.20))  ∥ (last(#vr.12))  ∥ (#vr.12 = #vr.20)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 100 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 238 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.18
  solved goal nr. 168 (precomputed): !KU( ~sk_user.2 ) @ #vk.20
  solved goal nr. 267 (directly):
    PSE_CreateMC( <~platform_sec.52, pk(~sk_ISV.55)>, mcid.50, ptr.87,
                  '1'
    ) @ #j.88
  solved goal nr. 100 (precomputed): !KU( ~platform_sec ) @ #vk.15
  solved goal nr. 75 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 173 (precomputed): !KU( ~platform_sec.3 ) @ #vk.24
  solved goal nr. 80 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 154 (precomputed): !KU( ~platform_sec.2 ) @ #vk.18
  solved goal nr. 55 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 46 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 58 (precomputed): !KU( ~mcid ) @ #vk.8
  solved goal nr. 151 (precomputed): !KU( ~platform_sec.2 ) @ #vk.23
  solved goal nr. 76 (directly):
    PSE_CreateMC( <~platform_sec.19, pk(~sk_ISV.22)>, mcid.17, ptr.54,
                  '1'
    ) @ #j.55
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.27))"
    to
      "⊤"
  solved goal nr. 75 (simplified):
     (last(#vr.27))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.27)
  solved goal nr. 62 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 78 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 61 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 123 (precomputed): !KU( ~sk_user.1 ) @ #vk.16
  solved goal nr. 84 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 128 (precomputed): !KU( ~platform_sec.3 ) @ #vk.20
  solved goal nr. 86 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 109 (precomputed): !KU( ~platform_sec.1 ) @ #vk.14
  solved goal nr. 91 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 66 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 106 (precomputed): !KU( ~platform_sec.1 ) @ #vk.18
  solved goal nr. 65 (precomputed): !KU( ~platform_sec ) @ #vk.13
  solved goal nr. 47 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 107 (precomputed): !KU( ~sk_user.1 ) @ #vk.11
  solved goal nr. 103 (precomputed): !KU( ~mcid.1 ) @ #vk.13
  solved goal nr. 119 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 46 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 63 (precomputed): !KU( ~mcid ) @ #vk.8
  solved goal nr. 81 (directly):
    PSE_CreateMC( <~platform_sec.19, pk(~sk_ISV.22)>, mcid.17, ptr.54,
                  '1'
    ) @ #j.55
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.27))"
    to
      "⊤"
  solved goal nr. 80 (simplified):
     (last(#vr.27))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.27)
  solved goal nr. 106 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.1, pk_user.1>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.11
  solved goal nr. 67 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 83 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2
  solved goal nr. 66 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 125 (precomputed): !KU( ~mcid.3 ) @ #vk.14
  solved goal nr. 10 (precomputed):
    EPC_CWC_12( pk(~sk_ISV.2), ~platform_sec.2, mrenclave.2, p_id.2,
                sk_user.2, pk_user, ~mcid.2, ~mc_session.3, ('1'+valMC)
    ) ▶₀ #t3
  solved goal nr. 89 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 140 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.45, ptr.59,
                  '1'
    ) @ #j.60
  solved goal nr. 91 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 131 (precomputed):
    !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
              h(<~platform_sec.2, ~mrenclave.2, 'seal'>))
    ) @ #vk.14
  solved goal nr. 142 (precomputed):
    Sgx_create_MC( <~platform_sec.2, pk(~sk_ISV.2)>, label ) ▶₂ #j.3
  solved goal nr. 96 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 71 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 70 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 54 (precomputed): !KU( ~mcid ) @ #vk.4
  solved goal nr. 130 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14
  solved goal nr. 144 (precomputed): !KU( ~mcid.2 ) @ #vk.17
  solved goal nr. 61 (precomputed): !KU( ~platform_sec ) @ #vk.9
  solved goal nr. 158 (directly):
    PSE_CreateMC( <~platform_sec.45, pk(~sk_ISV.48)>, mcid.43, ptr.78,
                  '1'
    ) @ #j.79
  solved goal nr. 47 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk_user>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.1
  solved goal nr. 61 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2
  solved goal nr. 51 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.5
  solved goal nr. 50 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 62 (precomputed): !KU( ~mcid ) @ #vk.8
  solved goal nr. 148 (precomputed): !KU( ~sk_user.2 ) @ #vk.15
  solved goal nr. 160 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 80 (directly):
    PSE_CreateMC( <~platform_sec.20, pk(~sk_ISV.23)>, mcid.18, ptr.55,
                  '1'
    ) @ #j.56
  simplified formula:
      "((last(#vr.28)) ∨ (last(#vr.28)) ∨ (#vr.28 = #vr.28))"
    to
      "⊤"
  solved goal nr. 79 (simplified):
     (last(#vr.28))  ∥ (last(#vr.28))  ∥ (#vr.28 = #vr.28)
  solved goal nr. 66 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 82 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 147 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.15
  solved goal nr. 65 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 88 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 96 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.26, '1'
    ) @ #j.27
  simplified formula:
      "((last(#vr.5)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.5))"
    to
      "#vr.20 = #vr.5"
  solved goal nr. 94 (simplified):
     (last(#vr.5))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.5)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.5)) ∨ (#vr.5 = #vr.20))"
    to
      "#vr.5 = #vr.20"
  solved goal nr. 93 (simplified):
     (last(#vr.20))  ∥ (last(#vr.5))  ∥ (#vr.5 = #vr.20)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 95 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 90 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 166 (precomputed): !KU( ~mcid.3 ) @ #vk.18
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.1
    ) ▶₀ #vr
  solved goal nr. 95 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 179 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 70 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 69 (precomputed): !KU( ~platform_sec ) @ #vk.13
  solved goal nr. 51 (precomputed):
    !KU( senc(<~mcid, sk_user.1, pk(x)>,
              h(<~platform_sec, mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr
  solved goal nr. 188 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 50 (precomputed):
    !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4
  solved goal nr. 67 (precomputed): !KU( ~mcid ) @ #vk.8
  solved goal nr. 85 (directly):
    PSE_CreateMC( <~platform_sec.20, pk(~sk_ISV.23)>, mcid.18, ptr.55,
                  '1'
    ) @ #j.56
  simplified formula:
      "((last(#vr.28)) ∨ (last(#vr.28)) ∨ (#vr.28 = #vr.28))"
    to
      "⊤"
  solved goal nr. 84 (simplified):
     (last(#vr.28))  ∥ (last(#vr.28))  ∥ (#vr.28 = #vr.28)
  solved goal nr. 19 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.2
    ) ▶₀ #vr.1
  solved goal nr. 71 (precomputed): !KU( ~sk_user ) @ #vk.5
  solved goal nr. 87 (precomputed):
    Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1 ) ▶₂ #j.2
  solved goal nr. 202 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 70 (precomputed):
    !KU( senc(<~mcid.1, ~sk_user, pk_user>,
              h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
    ) @ #vk.5
  solved goal nr. 20 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.1
  solved goal nr. 211 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 93 (precomputed): !KU( ~mcid.1 ) @ #vk.10
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 101 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.26, '1'
    ) @ #j.27
  simplified formula:
      "((last(#vr.5)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.5))"
    to
      "#vr.20 = #vr.5"
  solved goal nr. 99 (simplified):
     (last(#vr.5))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.5)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.5)) ∨ (#vr.5 = #vr.20))"
    to
      "#vr.5 = #vr.20"
  solved goal nr. 98 (simplified):
     (last(#vr.20))  ∥ (last(#vr.5))  ∥ (#vr.5 = #vr.20)
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 100 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 25 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.3
    ) ▶₀ #vr.2
  solved goal nr. 95 (precomputed): !KU( ~sk_user ) @ #vk.12
  solved goal nr. 100 (precomputed): !KU( ~platform_sec.1 ) @ #vk.16
  solved goal nr. 225 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 75 (precomputed): !KU( ~platform_sec ) @ #vk.8
  solved goal nr. 26 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.2
  solved goal nr. 232 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 74 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 58 (precomputed): !KU( ~mcid ) @ #vk.4
  solved goal nr. 66 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.22, '1'
    ) @ #j.23
  simplified formula:
      "((last(#vr.5)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.5))"
    to
      "#vr.16 = #vr.5"
  solved goal nr. 64 (simplified):
     (last(#vr.5))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.5)
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.5)) ∨ (#vr.5 = #vr.16))"
    to
      "#vr.5 = #vr.16"
  solved goal nr. 63 (simplified):
     (last(#vr.16))  ∥ (last(#vr.5))  ∥ (#vr.5 = #vr.16)
  simplified formula:
      "((last(#vr.16)) ∨ (last(#vr.16)) ∨ (#vr.16 = #vr.16))"
    to
      "⊤"
  solved goal nr. 65 (simplified):
     (last(#vr.16))  ∥ (last(#vr.16))  ∥ (#vr.16 = #vr.16)
  solved goal nr. 43 (precomputed):
    EPC_CWC_12( pk(~sk_ISV), ~platform_sec, ~mrenclave, p_id,
                sk_user.3, pk_user, ~mcid, ~mc_session.6, valMC_ref
    ) ▶₀ #vr.10
  solved goal nr. 65 (precomputed): !KU( ~platform_sec ) @ #vk.9
  solved goal nr. 246 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.52, ptr.64, '1'
    ) @ #j.65
  solved goal nr. 121 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 119 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 239 (precomputed):
    !KU( senc(<~mcid, sk_user.3, pk(x)>,
              h(<~platform_sec, ~mrenclave, 'seal'>))
    ) @ #vk.19
  solved goal nr. 248 (precomputed):
    Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.3
  solved goal nr. 121 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 126 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 168 (precomputed): !KU( ~sk_user.2 ) @ #vk.20
  solved goal nr. 120 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 173 (precomputed): !KU( ~platform_sec.3 ) @ #vk.24
  solved goal nr. 125 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 154 (precomputed): !KU( ~platform_sec.2 ) @ #vk.18
  solved goal nr. 125 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 151 (precomputed): !KU( ~platform_sec.2 ) @ #vk.22
  solved goal nr. 130 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 131 (precomputed):
    !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
              h(<~platform_sec.2, mrenclave.2, 'seal'>))
    ) @ #vk.14
  solved goal nr. 119 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 130 (precomputed):
    !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14
  solved goal nr. 148 (precomputed): !KU( ~mcid.2 ) @ #vk.17
  solved goal nr. 121 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 162 (directly):
    PSE_CreateMC( <~platform_sec.45, pk(~sk_ISV.48)>, mcid.43, ptr.78,
                  '1'
    ) @ #j.79
  solved goal nr. 126 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 152 (precomputed): !KU( ~sk_user.2 ) @ #vk.15
  solved goal nr. 164 (precomputed):
    Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3
  solved goal nr. 124 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 151 (precomputed):
    !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
              h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
    ) @ #vk.15
  simplified formula:
      "((last(#vr.9)) ∨ (last(#vr.18)) ∨ (#vr.18 = #vr.9))"
    to
      "#vr.18 = #vr.9"
  solved goal nr. 139 (simplified):
     (last(#vr.9))  ∥ (last(#vr.18))  ∥ (#vr.18 = #vr.9)
  simplified formula:
      "((last(#vr.18)) ∨ (last(#vr.9)) ∨ (#vr.9 = #vr.18))"
    to
      "#vr.9 = #vr.18"
  solved goal nr. 138 (simplified):
     (last(#vr.18))  ∥ (last(#vr.9))  ∥ (#vr.9 = #vr.18)
  simplified formula:
      "((last(#vr.4)) ∨ (last(#vr.4)) ∨ (#vr.4 = #vr.4))"
    to
      "⊤"
  solved goal nr. 38 (simplified):
     (last(#vr.4))  ∥ (last(#vr.4))  ∥ (#vr.4 = #vr.4)
  solved goal nr. 126 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                      ~mc_session.1
    ) ▶₀ #vr
  solved goal nr. 170 (precomputed): !KU( ~mcid.3 ) @ #vk.18
  solved goal nr. 131 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 183 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.56, ptr.68, '1'
    ) @ #j.69
  solved goal nr. 125 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr
  solved goal nr. 192 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 130 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 19 (precomputed):
    Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1,
                      ~mc_session.2
    ) ▶₀ #vr.1
  solved goal nr. 128 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 136 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.30, '1'
    ) @ #j.31
  simplified formula:
      "((last(#vr.12)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.12))"
    to
      "#vr.24 = #vr.12"
  solved goal nr. 134 (simplified):
     (last(#vr.12))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.12)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.12)) ∨ (#vr.12 = #vr.24))"
    to
      "#vr.12 = #vr.24"
  solved goal nr. 133 (simplified):
     (last(#vr.24))  ∥ (last(#vr.12))  ∥ (#vr.12 = #vr.24)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 135 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  solved goal nr. 206 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  simplified formula:
      "((last(#vr.9)) ∨ (last(#vr.19)) ∨ (#vr.19 = #vr.9))"
    to
      "#vr.19 = #vr.9"
  solved goal nr. 149 (simplified):
     (last(#vr.9))  ∥ (last(#vr.19))  ∥ (#vr.19 = #vr.9)
  simplified formula:
      "((last(#vr.19)) ∨ (last(#vr.9)) ∨ (#vr.9 = #vr.19))"
    to
      "#vr.9 = #vr.19"
  solved goal nr. 148 (simplified):
     (last(#vr.19))  ∥ (last(#vr.9))  ∥ (#vr.9 = #vr.19)
  simplified formula:
      "((last(#vr.4)) ∨ (last(#vr.4)) ∨ (#vr.4 = #vr.4))"
    to
      "⊤"
  solved goal nr. 38 (simplified):
     (last(#vr.4))  ∥ (last(#vr.4))  ∥ (#vr.4 = #vr.4)
  solved goal nr. 130 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 20 (precomputed):
    !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.1
  solved goal nr. 215 (directly):
    PSE_CreateMC( <~platform_sec.1, pk(~sk_ISV.1)>, ~mcid.1, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 25 (precomputed):
    Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2,
                      ~mc_session.3
    ) ▶₀ #vr.2
  solved goal nr. 135 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 229 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, mcid.56, ptr.68,
                  '1'
    ) @ #j.69
  solved goal nr. 110 (precomputed): !KU( ~platform_sec ) @ #vk.14
  solved goal nr. 116 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 26 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  ('1'+valMC)
    ) ▶₁ #vr.2
  solved goal nr. 238 (directly):
    PSE_CreateMC( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr.51,
                  '1'
    ) @ #j.52
  solved goal nr. 121 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 121 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 43 (precomputed):
    EPC_CWC_12( pk(~sk_ISV), ~platform_sec, ~mrenclave, p_id,
                sk_user.3, pk_user, ~mcid, ~mc_session.6, valMC_ref
    ) ▶₀ #vr.10
  solved goal nr. 252 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, mcid.52, ptr.64, '1'
    ) @ #j.65
  solved goal nr. 126 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 125 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 172 (precomputed): !KU( ~sk_user.2 ) @ #vk.20
  solved goal nr. 123 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 177 (precomputed): !KU( ~platform_sec.3 ) @ #vk.24
  solved goal nr. 125 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 158 (precomputed): !KU( ~platform_sec.2 ) @ #vk.18
  solved goal nr. 130 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 155 (precomputed): !KU( ~platform_sec.2 ) @ #vk.23
  solved goal nr. 119 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 127 (precomputed): !KU( ~sk_user.1 ) @ #vk.16
  solved goal nr. 121 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 132 (precomputed): !KU( ~platform_sec.3 ) @ #vk.20
  solved goal nr. 126 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 113 (precomputed): !KU( ~platform_sec.1 ) @ #vk.14
  solved goal nr. 124 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 110 (precomputed): !KU( ~platform_sec.1 ) @ #vk.19
  solved goal nr. 143 (precomputed):
    !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>, ~mcid.2, ptr_old,
                  '1'
    ) ▶₁ #vr.33
  simplified formula:
      "((last(#vr.9)) ∨ (last(#vr.18)) ∨ (#vr.18 = #vr.9))"
    to
      "#vr.18 = #vr.9"
  solved goal nr. 139 (simplified):
     (last(#vr.9))  ∥ (last(#vr.18))  ∥ (#vr.18 = #vr.9)
  simplified formula:
      "((last(#vr.18)) ∨ (last(#vr.9)) ∨ (#vr.9 = #vr.18))"
    to
      "#vr.9 = #vr.18"
  solved goal nr. 138 (simplified):
     (last(#vr.18))  ∥ (last(#vr.9))  ∥ (#vr.9 = #vr.18)
  simplified formula:
      "((last(#vr.4)) ∨ (last(#vr.4)) ∨ (#vr.4 = #vr.4))"
    to
      "⊤"
  solved goal nr. 38 (simplified):
     (last(#vr.4))  ∥ (last(#vr.4))  ∥ (#vr.4 = #vr.4)
  solved goal nr. 126 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 131 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 123 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 125 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 130 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
  solved goal nr. 128 (precomputed): !KU( ~mcid.1 ) @ #vk.15
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 136 (directly):
    PSE_CreateMC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr.30, '1'
    ) @ #j.31
  simplified formula:
      "((last(#vr.12)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.12))"
    to
      "#vr.24 = #vr.12"
  solved goal nr. 134 (simplified):
     (last(#vr.12))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.12)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.12)) ∨ (#vr.12 = #vr.24))"
    to
      "#vr.12 = #vr.24"
  solved goal nr. 133 (simplified):
     (last(#vr.24))  ∥ (last(#vr.12))  ∥ (#vr.12 = #vr.24)
  simplified formula:
      "((last(#vr.24)) ∨ (last(#vr.24)) ∨ (#vr.24 = #vr.24))"
    to
      "⊤"
  solved goal nr. 135 (simplified):
     (last(#vr.24))  ∥ (last(#vr.24))  ∥ (#vr.24 = #vr.24)
  simplified formula:
      "((last(#vr.9)) ∨ (last(#vr.19)) ∨ (#vr.19 = #vr.9))"
    to
      "#vr.19 = #vr.9"
  solved goal nr. 149 (simplified):
     (last(#vr.9))  ∥ (last(#vr.19))  ∥ (#vr.19 = #vr.9)
  simplified formula:
      "((last(#vr.19)) ∨ (last(#vr.9)) ∨ (#vr.9 = #vr.19))"
    to
      "#vr.9 = #vr.19"
  solved goal nr. 148 (simplified):
     (last(#vr.19))  ∥ (last(#vr.9))  ∥ (#vr.9 = #vr.19)
  simplified formula:
      "((last(#vr.4)) ∨ (last(#vr.4)) ∨ (#vr.4 = #vr.4))"
    to
      "⊤"
  solved goal nr. 38 (simplified):
     (last(#vr.4))  ∥ (last(#vr.4))  ∥ (#vr.4 = #vr.4)
  solved goal nr. 130 (precomputed): !KU( ~sk_user ) @ #vk.17
  solved goal nr. 135 (precomputed): !KU( ~platform_sec.1 ) @ #vk.21
theory sawtooth_safe begin

// Function signature and definition of the equational theory E

builtins: multiset
functions: adec/2, aenc/2, fst/1, h/1, pair/2, pk/1, sdec/2, senc/2,
           sign/2, snd/1, true/0, verify/3
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



restriction Equality:
  "∀ x y #i. (Eql( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction MemoryCanBeFreedOnlyOnce:
  "∀ owner pointer pointer_new1 val_old1 val_new1 pointer_new2 val_old2
     val_new2 #i #j.
    ((Free( owner, pointer, pointer_new1, val_old1, val_new1 ) @ #i) ∧
     (Free( owner, pointer, pointer_new2, val_old2, val_new2 ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

rule (modulo E) ISV_L1[color=#f7e6c5]:
   [ Fr( ~sk_ISV ) ]
  --[ ISV_L1( ~sk_ISV, pk(~sk_ISV) ) ]->
   [ !ISV_E_Singup1( ~sk_ISV, pk(~sk_ISV) ), Out( pk(~sk_ISV) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Signup_L2a[color=#f7e6c5]:
   [
   !ISV_E_Singup1( sk_ISV, pk_ISV ), Fr( ~platform_sec ), Fr( ~sk_user ),
   Fr( ~mrenclave ), Fr( ~mc_session )
   ]
  --[
  Signup_L2a( sk_ISV, pk_ISV, ~platform_sec, ~sk_user, ~mrenclave ),
  Node( ~platform_sec )
  ]->
   [
   Sgx_create_MC( <~platform_sec, pk_ISV>, ~mc_session ),
   Signup_Mem_12( sk_ISV, pk_ISV, ~platform_sec, ~mrenclave, ~sk_user,
                  ~mc_session
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) PSE_CreateMC[color=#dbf6fa]:
   [ Fr( ~mcid ), Fr( ~ptr ), Sgx_create_MC( MC_owner_policy, label ) ]
  --[ PSE_CreateMC( MC_owner_policy, ~mcid, ~ptr, '1' ) ]->
   [
   !Priv_mem_ME( MC_owner_policy, ~mcid, ~ptr, '1' ),
   Sgx_create_MC_done( MC_owner_policy, ~mcid, label, '1' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Signup_L2b[color=#f7e6c5]:
   [
   Sgx_create_MC_done( <~platform_sec, pk_ISV>, ~mcid, ~mc_session, initMC
   ),
   Signup_Mem_12( sk_ISV, pk_ISV, ~platform_sec, ~mrenclave, ~sk_user,
                  ~mc_session
   )
   ]
  --[
  Signup_L2b( sk_ISV, pk_ISV, ~platform_sec, ~mrenclave, ~sk_user,
              pk(~sk_user), ~mcid, initMC
  )
  ]->
   [
   Out( senc(<~mcid, ~sk_user, pk(~sk_user)>,
             h(<~platform_sec, ~mrenclave, 'seal'>))
   ),
   !Signup_Mem_23( sk_ISV, pk_ISV, ~platform_sec, ~mrenclave, ~sk_user,
                   pk(~sk_user), ~mcid, initMC
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Signup_3[color=#f7e6c5]:
   [
   Fr( ~p_id ),
   !Signup_Mem_23( sk_ISV, pk_ISV, platform_sec, mrenclave, sk_user,
                   pk_user, mcid, initMC
   )
   ]
  --[
  Signup_3( sk_ISV, pk_ISV, platform_sec, mrenclave, ~p_id, sk_user,
            pk_user, mcid, initMC
  ),
  Process( platform_sec, ~p_id )
  ]->
   [
   Start_process_cwt( pk_ISV, platform_sec, mrenclave, ~p_id ),
   Start_process_cwc( pk_ISV, platform_sec, mrenclave, ~p_id ),
   Out( pk_user )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) E_CreateWaitTimer_1[color=#e5e8e8]:
   [
   Start_process_cwt( pk_ISV, platform_sec, mrenclave, ~p_id ),
   In( senc(<mcid, sk_user, pk_user>, h(<platform_sec, mrenclave, 'seal'>))
   ),
   Fr( ~mc_session )
   ]
  --[
  E_CreateWaitTimer_1( pk_ISV, platform_sec, mrenclave, ~p_id, sk_user,
                       pk_user, mcid
  ),
  CWT_start( platform_sec )
  ]->
   [
   Sgx_increment_MC( <platform_sec, pk_ISV>, mcid, ~mc_session ),
   EPC_CWT( pk_ISV, platform_sec, ~p_id, sk_user, pk_user,
            h(<platform_sec, mrenclave, 'seal'>), mcid, ~mc_session
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) PSE_sgx_increment_MC[color=#dbf6fa]:
   [
   Sgx_increment_MC( MC_owner_policy, mcid, label ),
   !Priv_mem_ME( MC_owner_policy, mcid, ptr_old, valMC ), Fr( ~ptr_new )
   ]
  --[
  Free( mcid, ptr_old, ~ptr_new, valMC, ('1'+valMC) ),
  PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old, ~ptr_new,
                        ('1'+valMC)
  )
  ]->
   [
   Sgx_increment_MC_done( MC_owner_policy, mcid, label, ('1'+valMC) ),
   !Priv_mem_ME( MC_owner_policy, mcid, ~ptr_new, ('1'+valMC) )
   ]

  // loop breakers: [1,0]
  /* has exactly the trivial AC variant */

rule (modulo E) E_CreateWaitTimer_2[color=#e5e8e8]:
   [
   Sgx_increment_MC_done( <platform_sec, pk_ISV>, mcid, ~mc_session,
                          valMC_ref
   ),
   EPC_CWT( pk_ISV, platform_sec, ~p_id, sk_user, pk_user, seal_key, mcid,
            ~mc_session
   )
   ]
  --[
  E_CreateWaitTimer_2( pk_ISV, platform_sec, ~p_id, sk_user, pk_user, mcid,
                       valMC_ref
  ),
  CWT_end( platform_sec )
  ]->
   [
   Out( <valMC_ref, sign(valMC_ref, sk_user), 
         senc(<mcid, sk_user, pk_user>, seal_key)>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) E_CreateWaitCertificate_1[color=#c8d6b9]:
   [
   Start_process_cwc( pk_ISV, platform_sec, mrenclave, p_id ),
   In( <valMC_ref, valMC_ref_signed, 
        senc(<mcid, sk_user, pk_user>, h(<platform_sec, mrenclave, 'seal'>))>
   ),
   Fr( ~mc_session )
   ]
  --[
  E_CreateWaitCertificate_1( pk_ISV, platform_sec, mrenclave, p_id,
                             sk_user, pk_user, mcid, valMC_ref
  ),
  Eql( verify(valMC_ref_signed, valMC_ref, pk_user), true ),
  CWC_start( platform_sec )
  ]->
   [
   Sgx_increment_MC( <platform_sec, pk_ISV>, mcid, ~mc_session ),
   EPC_CWC_12( pk_ISV, platform_sec, mrenclave, p_id, sk_user, pk_user,
               mcid, ~mc_session, valMC_ref
   )
   ]

  /*
  rule (modulo AC) E_CreateWaitCertificate_1[color=#c8d6b9]:
     [
     Start_process_cwc( pk_ISV, platform_sec, mrenclave, p_id ),
     In( <valMC_ref, valMC_ref_signed, 
          senc(<mcid, sk_user, pk_user>, h(<platform_sec, mrenclave, 'seal'>))>
     ),
     Fr( ~mc_session )
     ]
    --[
    E_CreateWaitCertificate_1( pk_ISV, platform_sec, mrenclave, p_id,
                               sk_user, pk_user, mcid, valMC_ref
    ),
    Eql( z, true ), CWC_start( platform_sec )
    ]->
     [
     Sgx_increment_MC( <platform_sec, pk_ISV>, mcid, ~mc_session ),
     EPC_CWC_12( pk_ISV, platform_sec, mrenclave, p_id, sk_user, pk_user,
                 mcid, ~mc_session, valMC_ref
     )
     ]
    variants (modulo AC)
    1. pk_user
             = pk_user.14
       valMC_ref
             = valMC_ref.17
       valMC_ref_signed
             = valMC_ref_signed.18
       z     = verify(valMC_ref_signed.18, valMC_ref.17, pk_user.14)
    
    2. pk_user
             = pk(x.21)
       valMC_ref
             = valMC_ref.17
       valMC_ref_signed
             = sign(valMC_ref.17, x.21)
       z     = true
  */

rule (modulo E) E_CreateWaitCertificate_2[color=#c8d6b9]:
   [
   EPC_CWC_12( pk_ISV, platform_sec, mrenclave, p_id, sk_user, pk_user,
               mcid, ~mc_session, valMC_ref
   ),
   Sgx_increment_MC_done( <platform_sec, pk_ISV>, mcid, ~mc_session,
                          valMC_rcvd
   )
   ]
  --[
  E_CreateWaitCertificate_2( pk_ISV, platform_sec, mrenclave, p_id,
                             sk_user, pk_user, mcid, valMC_rcvd
  ),
  Eql( valMC_rcvd, ('1'+valMC_ref) ),
  PoETCertificate( platform_sec, valMC_ref )
  ]->
   [ Start_process_cwc( pk_ISV, platform_sec, mrenclave, p_id ) ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

lemma createMC_for_every_incMC_ind [use_induction, reuse]:
  all-traces
  "∀ MC_owner_policy mcid ptr_old ptr_new valMC #i.
    (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old, ptr_new, valMC
     ) @ #i) ⇒
    (∃ ptr #j.
      (PSE_CreateMC( MC_owner_policy, mcid, ptr, '1' ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ MC_owner_policy mcid ptr_old ptr_new valMC #i.
  (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old, ptr_new, valMC
   ) @ #i)
 ∧
  ∀ ptr #j.
   (PSE_CreateMC( MC_owner_policy, mcid, ptr, '1' ) @ #j) ⇒ ¬(#j < #i)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (last(#i))  ∥
         (∃ ptr #j.
           (PSE_CreateMC( MC_owner_policy, mcid, ptr, '1' ) @ #j)
          ∧
           (¬(last(#j))) ∧ (#j < #i)) )
    case case_1
    solve( Sgx_increment_MC( MC_owner_policy, mcid, label ) ▶₀ #i )
      case E_CreateWaitCertificate_1_case_1
      solve( !KU( senc(<mcid, sk_user, pk(x)>,
                       h(<~platform_sec, ~mrenclave, 'seal'>))
             ) @ #vk.4 )
        case Signup_L2b
        by contradiction /* from formulas */
      next
        case c_senc
        solve( !KU( h(<~platform_sec, ~mrenclave, 'seal'>) ) @ #vk.6 )
          case c_h
          by solve( !KU( ~platform_sec ) @ #vk.12 )
        qed
      qed
    next
      case E_CreateWaitCertificate_1_case_2
      solve( Sgx_create_MC( <platform_sec, pk_ISV>, label ) ▶₂ #j )
        case Signup_L2a
        solve( !KU( senc(<mcid, sk_user, pk(x)>,
                         h(<~platform_sec, mrenclave, 'seal'>))
               ) @ #vk.4 )
          case Signup_L2b
          by contradiction /* from formulas */
        next
          case c_senc
          solve( !KU( h(<~platform_sec, mrenclave, 'seal'>) ) @ #vk.6 )
            case c_h
            by solve( !KU( ~platform_sec ) @ #vk.12 )
          qed
        qed
      qed
    next
      case E_CreateWaitTimer_1
      solve( !KU( senc(<mcid, sk_user, pk_user>,
                       h(<~platform_sec, ~mrenclave, 'seal'>))
             ) @ #vk )
        case Signup_L2b
        by contradiction /* from formulas */
      next
        case c_senc
        solve( !KU( h(<~platform_sec, ~mrenclave, 'seal'>) ) @ #vk.2 )
          case c_h
          by solve( !KU( ~platform_sec ) @ #vk.8 )
        qed
      qed
    qed
  next
    case case_2
    by contradiction /* from formulas */
  qed
qed

lemma MC_value_never_equals_ind [use_induction, reuse]:
  all-traces
  "∀ MC_owner_policy mcid ptr_old1 ptr_new1 ptr_old2 ptr_new2 valMC #i #j.
    ((PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old1, ptr_new1, valMC
      ) @ #i) ∧
     (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old2, ptr_new2, valMC
      ) @ #j)) ⇒
    (#i = #j)"
/*
guarded formula characterizing all counter-examples:
"∃ MC_owner_policy mcid ptr_old1 ptr_new1 ptr_old2 ptr_new2 valMC #i #j.
  (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old1, ptr_new1, valMC
   ) @ #i) ∧
  (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old2, ptr_new2, valMC
   ) @ #j)
 ∧
  ¬(#i = #j)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (#i < #j)  ∥ (#j < #i) )
    case case_1
    solve( Sgx_create_MC( MC_owner_policy, label.2 ) ▶₂ #j.1 )
      case Signup_L2a
      solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
             ) ▶₀ #i )
        case E_CreateWaitCertificate_1_case_1
        solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                         h(<~platform_sec, ~mrenclave, 'seal'>))
               ) @ #vk.4 )
          case Signup_L2b
          solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
            case E_CreateWaitTimer_2
            solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                   ) ▶₂ #j.2 )
              case Signup_L2a
              solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                               h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                     ) @ #vk.5 )
                case Signup_L2b
                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
                       ) ▶₁ #i )
                  case PSE_CreateMC
                  solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                         ) ▶₀ #j )
                    case E_CreateWaitCertificate_1_case_1
                    solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                     h(<~platform_sec, ~mrenclave, 'seal'>))
                           ) @ #vk.11 )
                      case Signup_L2b
                      solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10 )
                        case E_CreateWaitTimer_2
                        solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                          case Signup_L2a
                          solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                           h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                 ) @ #vk.11 )
                            case Signup_L2b
                            solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
                                   ) ▶₁ #j )
                              case PSE_CreateMC
                              by contradiction /* cyclic */
                            qed
                          next
                            case c_senc
                            solve( !KU( ~mcid.1 ) @ #vk.15 )
                              case Signup_L2b
                              solve( !KU( ~sk_user ) @ #vk.17 )
                                case Signup_L2b
                                by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case c_sign
                        solve( !KU( ~sk_user ) @ #vk.11 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.14 )
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( ~mcid ) @ #vk.14 )
                        case Signup_L2b
                        by solve( !KU( ~platform_sec ) @ #vk.19 )
                      qed
                    qed
                  next
                    case E_CreateWaitCertificate_1_case_2
                    solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2 )
                      case Signup_L2a
                      solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                       h(<~platform_sec, mrenclave.1, 'seal'>))
                             ) @ #vk.11 )
                        case Signup_L2b
                        solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10 )
                          case E_CreateWaitTimer_2
                          solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                            case Signup_L2a
                            solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                             h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                   ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                      '1'
                                        ) ▶₁ #j )
                            next
                              case c_senc
                              solve( !KU( ~mcid.1 ) @ #vk.15 )
                                case Signup_L2b
                                solve( !KU( ~sk_user ) @ #vk.17 )
                                  case Signup_L2b
                                  by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~sk_user ) @ #vk.11 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.14 )
                          qed
                        qed
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.14 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.20 )
                        qed
                      qed
                    qed
                  next
                    case E_CreateWaitTimer_1
                    solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                                     h(<~platform_sec, ~mrenclave, 'seal'>))
                           ) @ #vk.7 )
                      case Signup_L2b
                      by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                              '1'
                                ) ▶₁ #j )
                    next
                      case c_senc
                      solve( !KU( ~mcid ) @ #vk.10 )
                        case Signup_L2b
                        by solve( !KU( ~platform_sec ) @ #vk.15 )
                      qed
                    qed
                  qed
                next
                  case PSE_sgx_increment_MC
                  solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                         ) ▶₀ #j )
                    case E_CreateWaitCertificate_1_case_1
                    solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                     h(<~platform_sec, ~mrenclave, 'seal'>))
                           ) @ #vk.11 )
                      case Signup_L2b
                      solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10 )
                        case E_CreateWaitTimer_2
                        solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                               ) ▶₂ #j.2 )
                          case Signup_L2a
                          solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                           h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                 ) @ #vk.11 )
                            case Signup_L2b
                            solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                 ('1'+valMC)
                                   ) ▶₁ #j )
                              case PSE_sgx_increment_MC
                              by contradiction /* cyclic */
                            qed
                          next
                            case c_senc
                            solve( !KU( ~mcid.1 ) @ #vk.15 )
                              case Signup_L2b
                              solve( !KU( ~sk_user ) @ #vk.17 )
                                case Signup_L2b
                                by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case c_sign
                        solve( !KU( ~sk_user ) @ #vk.11 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.14 )
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( ~mcid ) @ #vk.14 )
                        case Signup_L2b
                        by solve( !KU( ~platform_sec ) @ #vk.19 )
                      qed
                    qed
                  next
                    case E_CreateWaitCertificate_1_case_2
                    solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2 )
                      case Signup_L2a
                      solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                       h(<~platform_sec, mrenclave.1, 'seal'>))
                             ) @ #vk.11 )
                        case Signup_L2b
                        solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10 )
                          case E_CreateWaitTimer_2
                          solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                                 ) ▶₂ #j.2 )
                            case Signup_L2a
                            solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                             h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                   ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                      ('1'+valMC)
                                        ) ▶₁ #j )
                            next
                              case c_senc
                              solve( !KU( ~mcid.1 ) @ #vk.15 )
                                case Signup_L2b
                                solve( !KU( ~sk_user ) @ #vk.17 )
                                  case Signup_L2b
                                  by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~sk_user ) @ #vk.11 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.14 )
                          qed
                        qed
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.14 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.20 )
                        qed
                      qed
                    qed
                  next
                    case E_CreateWaitTimer_1
                    solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                                     h(<~platform_sec, ~mrenclave, 'seal'>))
                           ) @ #vk.7 )
                      case Signup_L2b
                      by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                              ('1'+valMC)
                                ) ▶₁ #j )
                    next
                      case c_senc
                      solve( !KU( ~mcid ) @ #vk.10 )
                        case Signup_L2b
                        by solve( !KU( ~platform_sec ) @ #vk.15 )
                      qed
                    qed
                  qed
                qed
              next
                case c_senc
                solve( !KU( ~mcid.1 ) @ #vk.10 )
                  case Signup_L2b
                  solve( !KU( ~sk_user ) @ #vk.12 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                  qed
                qed
              qed
            qed
          next
            case c_sign
            solve( !KU( ~sk_user ) @ #vk.5 )
              case Signup_L2b
              by solve( !KU( ~platform_sec ) @ #vk.8 )
            qed
          qed
        next
          case c_senc
          solve( !KU( ~mcid ) @ #vk.7 )
            case Signup_L2b
            by solve( !KU( ~platform_sec ) @ #vk.12 )
          qed
        qed
      next
        case E_CreateWaitCertificate_1_case_2
        solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2 )
          case Signup_L2a
          solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                           h(<~platform_sec, mrenclave.1, 'seal'>))
                 ) @ #vk.4 )
            case Signup_L2b
            solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
              case E_CreateWaitTimer_2
              solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                     ) ▶₂ #j.2 )
                case Signup_L2a
                solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                 h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                       ) @ #vk.5 )
                  case Signup_L2b
                  solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
                         ) ▶₁ #i )
                    case PSE_CreateMC
                    solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                           ) ▶₀ #j )
                      case E_CreateWaitCertificate_1_case_1
                      solve( !KU( senc(<~mcid, sk_user.2, pk(x)>,
                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                             ) @ #vk.11 )
                        case Signup_L2b
                        solve( !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10 )
                          case E_CreateWaitTimer_2
                          solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                            case Signup_L2a
                            solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                             h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                   ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                      '1'
                                        ) ▶₁ #j )
                            next
                              case c_senc
                              solve( !KU( ~mcid.1 ) @ #vk.15 )
                                case Signup_L2b
                                solve( !KU( ~sk_user ) @ #vk.17 )
                                  case Signup_L2b
                                  by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~sk_user ) @ #vk.11 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.14 )
                          qed
                        qed
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.14 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.19 )
                        qed
                      qed
                    next
                      case E_CreateWaitCertificate_1_case_2
                      solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2 )
                        case Signup_L2a
                        solve( !KU( senc(<~mcid, sk_user.2, pk(x)>,
                                         h(<~platform_sec, mrenclave.1, 'seal'>))
                               ) @ #vk.11 )
                          case Signup_L2b
                          solve( !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10 )
                            case E_CreateWaitTimer_2
                            solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                              case Signup_L2a
                              solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                               h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                     ) @ #vk.11 )
                                case Signup_L2b
                                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
                                       ) ▶₁ #j )
                                  case PSE_CreateMC
                                  by contradiction /* cyclic */
                                qed
                              next
                                case c_senc
                                solve( !KU( ~mcid.1 ) @ #vk.15 )
                                  case Signup_L2b
                                  solve( !KU( ~sk_user ) @ #vk.17 )
                                    case Signup_L2b
                                    by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_sign
                            solve( !KU( ~sk_user ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !KU( ~platform_sec ) @ #vk.14 )
                            qed
                          qed
                        next
                          case c_senc
                          solve( !KU( ~mcid ) @ #vk.14 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.20 )
                          qed
                        qed
                      qed
                    next
                      case E_CreateWaitTimer_1
                      solve( !KU( senc(<~mcid, sk_user.2, pk_user.1>,
                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                             ) @ #vk.7 )
                        case Signup_L2b
                        by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                '1'
                                  ) ▶₁ #j )
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.10 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.15 )
                        qed
                      qed
                    qed
                  next
                    case PSE_sgx_increment_MC
                    solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                           ) ▶₀ #j )
                      case E_CreateWaitCertificate_1_case_1
                      solve( !KU( senc(<~mcid, sk_user.2, pk(x)>,
                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                             ) @ #vk.11 )
                        case Signup_L2b
                        solve( !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10 )
                          case E_CreateWaitTimer_2
                          solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                                 ) ▶₂ #j.2 )
                            case Signup_L2a
                            solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                             h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                   ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                      ('1'+valMC)
                                        ) ▶₁ #j )
                            next
                              case c_senc
                              solve( !KU( ~mcid.1 ) @ #vk.15 )
                                case Signup_L2b
                                solve( !KU( ~sk_user ) @ #vk.17 )
                                  case Signup_L2b
                                  by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~sk_user ) @ #vk.11 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.14 )
                          qed
                        qed
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.14 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.19 )
                        qed
                      qed
                    next
                      case E_CreateWaitCertificate_1_case_2
                      solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2 )
                        case Signup_L2a
                        solve( !KU( senc(<~mcid, sk_user.2, pk(x)>,
                                         h(<~platform_sec, mrenclave.1, 'seal'>))
                               ) @ #vk.11 )
                          case Signup_L2b
                          solve( !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10 )
                            case E_CreateWaitTimer_2
                            solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                                   ) ▶₂ #j.2 )
                              case Signup_L2a
                              solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                               h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                     ) @ #vk.11 )
                                case Signup_L2b
                                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                     ('1'+valMC)
                                       ) ▶₁ #j )
                                  case PSE_sgx_increment_MC
                                  by contradiction /* cyclic */
                                qed
                              next
                                case c_senc
                                solve( !KU( ~mcid.1 ) @ #vk.15 )
                                  case Signup_L2b
                                  solve( !KU( ~sk_user ) @ #vk.17 )
                                    case Signup_L2b
                                    by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_sign
                            solve( !KU( ~sk_user ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !KU( ~platform_sec ) @ #vk.14 )
                            qed
                          qed
                        next
                          case c_senc
                          solve( !KU( ~mcid ) @ #vk.14 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.20 )
                          qed
                        qed
                      qed
                    next
                      case E_CreateWaitTimer_1
                      solve( !KU( senc(<~mcid, sk_user.2, pk_user.1>,
                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                             ) @ #vk.7 )
                        case Signup_L2b
                        by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                ('1'+valMC)
                                  ) ▶₁ #j )
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.10 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.15 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( ~mcid.1 ) @ #vk.10 )
                    case Signup_L2b
                    solve( !KU( ~sk_user ) @ #vk.12 )
                      case Signup_L2b
                      by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                    qed
                  qed
                qed
              qed
            next
              case c_sign
              solve( !KU( ~sk_user ) @ #vk.5 )
                case Signup_L2b
                by solve( !KU( ~platform_sec ) @ #vk.8 )
              qed
            qed
          next
            case c_senc
            solve( !KU( ~mcid ) @ #vk.7 )
              case Signup_L2b
              by solve( !KU( ~platform_sec ) @ #vk.13 )
            qed
          qed
        qed
      next
        case E_CreateWaitTimer_1
        solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                         h(<~platform_sec, ~mrenclave, 'seal'>))
               ) @ #vk )
          case Signup_L2b
          solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
                 ) ▶₁ #i )
            case PSE_CreateMC
            solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                   ) ▶₀ #j )
              case E_CreateWaitCertificate_1_case_1
              solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.5 )
                case Signup_L2b
                solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                  case E_CreateWaitTimer_2
                  solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                    case Signup_L2a
                    solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                     h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                           ) @ #vk.5 )
                      case Signup_L2b
                      by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                              '1'
                                ) ▶₁ #j )
                    next
                      case c_senc
                      solve( !KU( ~mcid.1 ) @ #vk.10 )
                        case Signup_L2b
                        solve( !KU( ~sk_user ) @ #vk.12 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_sign
                  solve( !KU( ~sk_user ) @ #vk.5 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec ) @ #vk.8 )
                  qed
                qed
              next
                case c_senc
                solve( !KU( ~mcid ) @ #vk.8 )
                  case Signup_L2b
                  by solve( !KU( ~platform_sec ) @ #vk.13 )
                qed
              qed
            next
              case E_CreateWaitCertificate_1_case_2
              solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2 )
                case Signup_L2a
                solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                 h(<~platform_sec, mrenclave.1, 'seal'>))
                       ) @ #vk.5 )
                  case Signup_L2b
                  solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                    case E_CreateWaitTimer_2
                    solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                      case Signup_L2a
                      solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                       h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                             ) @ #vk.5 )
                        case Signup_L2b
                        by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                '1'
                                  ) ▶₁ #j )
                      next
                        case c_senc
                        solve( !KU( ~mcid.1 ) @ #vk.10 )
                          case Signup_L2b
                          solve( !KU( ~sk_user ) @ #vk.12 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~sk_user ) @ #vk.5 )
                      case Signup_L2b
                      by solve( !KU( ~platform_sec ) @ #vk.8 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( ~mcid ) @ #vk.8 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec ) @ #vk.14 )
                  qed
                qed
              qed
            next
              case E_CreateWaitTimer_1
              solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.1 )
                case Signup_L2b
                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
                       ) ▶₁ #j )
                  case PSE_CreateMC
                  by contradiction /* cyclic */
                qed
              next
                case c_senc
                solve( !KU( ~mcid ) @ #vk.4 )
                  case Signup_L2b
                  by solve( !KU( ~platform_sec ) @ #vk.9 )
                qed
              qed
            qed
          next
            case PSE_sgx_increment_MC
            solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                   ) ▶₀ #j )
              case E_CreateWaitCertificate_1_case_1
              solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.5 )
                case Signup_L2b
                solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                  case E_CreateWaitTimer_2
                  solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                         ) ▶₂ #j.2 )
                    case Signup_L2a
                    solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                     h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                           ) @ #vk.5 )
                      case Signup_L2b
                      by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                              ('1'+valMC)
                                ) ▶₁ #j )
                    next
                      case c_senc
                      solve( !KU( ~mcid.1 ) @ #vk.10 )
                        case Signup_L2b
                        solve( !KU( ~sk_user ) @ #vk.12 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_sign
                  solve( !KU( ~sk_user ) @ #vk.5 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec ) @ #vk.8 )
                  qed
                qed
              next
                case c_senc
                solve( !KU( ~mcid ) @ #vk.8 )
                  case Signup_L2b
                  by solve( !KU( ~platform_sec ) @ #vk.13 )
                qed
              qed
            next
              case E_CreateWaitCertificate_1_case_2
              solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2 )
                case Signup_L2a
                solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                 h(<~platform_sec, mrenclave.1, 'seal'>))
                       ) @ #vk.5 )
                  case Signup_L2b
                  solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                    case E_CreateWaitTimer_2
                    solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                           ) ▶₂ #j.2 )
                      case Signup_L2a
                      solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                       h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                             ) @ #vk.5 )
                        case Signup_L2b
                        by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                ('1'+valMC)
                                  ) ▶₁ #j )
                      next
                        case c_senc
                        solve( !KU( ~mcid.1 ) @ #vk.10 )
                          case Signup_L2b
                          solve( !KU( ~sk_user ) @ #vk.12 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~sk_user ) @ #vk.5 )
                      case Signup_L2b
                      by solve( !KU( ~platform_sec ) @ #vk.8 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( ~mcid ) @ #vk.8 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec ) @ #vk.14 )
                  qed
                qed
              qed
            next
              case E_CreateWaitTimer_1
              solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.1 )
                case Signup_L2b
                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                     ('1'+valMC)
                       ) ▶₁ #j )
                  case PSE_sgx_increment_MC
                  by contradiction /* cyclic */
                qed
              next
                case c_senc
                solve( !KU( ~mcid ) @ #vk.4 )
                  case Signup_L2b
                  by solve( !KU( ~platform_sec ) @ #vk.9 )
                qed
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( ~mcid ) @ #vk.3 )
            case Signup_L2b
            by solve( !KU( ~platform_sec ) @ #vk.8 )
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( Sgx_create_MC( MC_owner_policy, label.2 ) ▶₂ #j.1 )
      case Signup_L2a
      solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
             ) ▶₀ #i )
        case E_CreateWaitCertificate_1_case_1
        solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                         h(<~platform_sec, ~mrenclave, 'seal'>))
               ) @ #vk.4 )
          case Signup_L2b
          solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
            case E_CreateWaitTimer_2
            solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                   ) ▶₂ #j.2 )
              case Signup_L2a
              solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                               h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                     ) @ #vk.5 )
                case Signup_L2b
                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
                       ) ▶₁ #i )
                  case PSE_CreateMC
                  solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                         ) ▶₀ #j )
                    case E_CreateWaitCertificate_1_case_1
                    solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                     h(<~platform_sec, ~mrenclave, 'seal'>))
                           ) @ #vk.11 )
                      case Signup_L2b
                      solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10 )
                        case E_CreateWaitTimer_2
                        solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                          case Signup_L2a
                          solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                           h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                 ) @ #vk.11 )
                            case Signup_L2b
                            solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
                                   ) ▶₁ #j )
                              case PSE_CreateMC
                              by contradiction /* cyclic */
                            qed
                          next
                            case c_senc
                            solve( !KU( ~mcid.1 ) @ #vk.15 )
                              case Signup_L2b
                              solve( !KU( ~sk_user ) @ #vk.17 )
                                case Signup_L2b
                                by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case c_sign
                        solve( !KU( ~sk_user ) @ #vk.11 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.14 )
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( ~mcid ) @ #vk.14 )
                        case Signup_L2b
                        by solve( !KU( ~platform_sec ) @ #vk.19 )
                      qed
                    qed
                  next
                    case E_CreateWaitCertificate_1_case_2
                    solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2 )
                      case Signup_L2a
                      solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                       h(<~platform_sec, mrenclave.1, 'seal'>))
                             ) @ #vk.11 )
                        case Signup_L2b
                        solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10 )
                          case E_CreateWaitTimer_2
                          solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                            case Signup_L2a
                            solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                             h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                   ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                      '1'
                                        ) ▶₁ #j )
                            next
                              case c_senc
                              solve( !KU( ~mcid.1 ) @ #vk.15 )
                                case Signup_L2b
                                solve( !KU( ~sk_user ) @ #vk.17 )
                                  case Signup_L2b
                                  by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~sk_user ) @ #vk.11 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.14 )
                          qed
                        qed
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.14 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.20 )
                        qed
                      qed
                    qed
                  next
                    case E_CreateWaitTimer_1
                    solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                                     h(<~platform_sec, ~mrenclave, 'seal'>))
                           ) @ #vk.7 )
                      case Signup_L2b
                      by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                              '1'
                                ) ▶₁ #j )
                    next
                      case c_senc
                      solve( !KU( ~mcid ) @ #vk.10 )
                        case Signup_L2b
                        by solve( !KU( ~platform_sec ) @ #vk.15 )
                      qed
                    qed
                  qed
                next
                  case PSE_sgx_increment_MC
                  solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                         ) ▶₀ #j )
                    case E_CreateWaitCertificate_1_case_1
                    solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                     h(<~platform_sec, ~mrenclave, 'seal'>))
                           ) @ #vk.11 )
                      case Signup_L2b
                      solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10 )
                        case E_CreateWaitTimer_2
                        solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                               ) ▶₂ #j.2 )
                          case Signup_L2a
                          solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                           h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                 ) @ #vk.11 )
                            case Signup_L2b
                            solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                 ('1'+valMC)
                                   ) ▶₁ #j )
                              case PSE_sgx_increment_MC
                              by contradiction /* cyclic */
                            qed
                          next
                            case c_senc
                            solve( !KU( ~mcid.1 ) @ #vk.15 )
                              case Signup_L2b
                              solve( !KU( ~sk_user ) @ #vk.17 )
                                case Signup_L2b
                                by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                              qed
                            qed
                          qed
                        qed
                      next
                        case c_sign
                        solve( !KU( ~sk_user ) @ #vk.11 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.14 )
                        qed
                      qed
                    next
                      case c_senc
                      solve( !KU( ~mcid ) @ #vk.14 )
                        case Signup_L2b
                        by solve( !KU( ~platform_sec ) @ #vk.19 )
                      qed
                    qed
                  next
                    case E_CreateWaitCertificate_1_case_2
                    solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2 )
                      case Signup_L2a
                      solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                       h(<~platform_sec, mrenclave.1, 'seal'>))
                             ) @ #vk.11 )
                        case Signup_L2b
                        solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.10 )
                          case E_CreateWaitTimer_2
                          solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                                 ) ▶₂ #j.2 )
                            case Signup_L2a
                            solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                             h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                   ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                      ('1'+valMC)
                                        ) ▶₁ #j )
                            next
                              case c_senc
                              solve( !KU( ~mcid.1 ) @ #vk.15 )
                                case Signup_L2b
                                solve( !KU( ~sk_user ) @ #vk.17 )
                                  case Signup_L2b
                                  by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~sk_user ) @ #vk.11 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.14 )
                          qed
                        qed
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.14 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.20 )
                        qed
                      qed
                    qed
                  next
                    case E_CreateWaitTimer_1
                    solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                                     h(<~platform_sec, ~mrenclave, 'seal'>))
                           ) @ #vk.7 )
                      case Signup_L2b
                      by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                              ('1'+valMC)
                                ) ▶₁ #j )
                    next
                      case c_senc
                      solve( !KU( ~mcid ) @ #vk.10 )
                        case Signup_L2b
                        by solve( !KU( ~platform_sec ) @ #vk.15 )
                      qed
                    qed
                  qed
                qed
              next
                case c_senc
                solve( !KU( ~mcid.1 ) @ #vk.10 )
                  case Signup_L2b
                  solve( !KU( ~sk_user ) @ #vk.12 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                  qed
                qed
              qed
            qed
          next
            case c_sign
            solve( !KU( ~sk_user ) @ #vk.5 )
              case Signup_L2b
              by solve( !KU( ~platform_sec ) @ #vk.8 )
            qed
          qed
        next
          case c_senc
          solve( !KU( ~mcid ) @ #vk.7 )
            case Signup_L2b
            by solve( !KU( ~platform_sec ) @ #vk.12 )
          qed
        qed
      next
        case E_CreateWaitCertificate_1_case_2
        solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2 )
          case Signup_L2a
          solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                           h(<~platform_sec, mrenclave.1, 'seal'>))
                 ) @ #vk.4 )
            case Signup_L2b
            solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
              case E_CreateWaitTimer_2
              solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                     ) ▶₂ #j.2 )
                case Signup_L2a
                solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                 h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                       ) @ #vk.5 )
                  case Signup_L2b
                  solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
                         ) ▶₁ #i )
                    case PSE_CreateMC
                    solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                           ) ▶₀ #j )
                      case E_CreateWaitCertificate_1_case_1
                      solve( !KU( senc(<~mcid, sk_user.2, pk(x)>,
                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                             ) @ #vk.11 )
                        case Signup_L2b
                        solve( !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10 )
                          case E_CreateWaitTimer_2
                          solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                            case Signup_L2a
                            solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                             h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                   ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                      '1'
                                        ) ▶₁ #j )
                            next
                              case c_senc
                              solve( !KU( ~mcid.1 ) @ #vk.15 )
                                case Signup_L2b
                                solve( !KU( ~sk_user ) @ #vk.17 )
                                  case Signup_L2b
                                  by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~sk_user ) @ #vk.11 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.14 )
                          qed
                        qed
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.14 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.19 )
                        qed
                      qed
                    next
                      case E_CreateWaitCertificate_1_case_2
                      solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2 )
                        case Signup_L2a
                        solve( !KU( senc(<~mcid, sk_user.2, pk(x)>,
                                         h(<~platform_sec, mrenclave.1, 'seal'>))
                               ) @ #vk.11 )
                          case Signup_L2b
                          solve( !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10 )
                            case E_CreateWaitTimer_2
                            solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                              case Signup_L2a
                              solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                               h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                     ) @ #vk.11 )
                                case Signup_L2b
                                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
                                       ) ▶₁ #j )
                                  case PSE_CreateMC
                                  by contradiction /* cyclic */
                                qed
                              next
                                case c_senc
                                solve( !KU( ~mcid.1 ) @ #vk.15 )
                                  case Signup_L2b
                                  solve( !KU( ~sk_user ) @ #vk.17 )
                                    case Signup_L2b
                                    by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_sign
                            solve( !KU( ~sk_user ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !KU( ~platform_sec ) @ #vk.14 )
                            qed
                          qed
                        next
                          case c_senc
                          solve( !KU( ~mcid ) @ #vk.14 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.20 )
                          qed
                        qed
                      qed
                    next
                      case E_CreateWaitTimer_1
                      solve( !KU( senc(<~mcid, sk_user.2, pk_user.1>,
                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                             ) @ #vk.7 )
                        case Signup_L2b
                        by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                '1'
                                  ) ▶₁ #j )
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.10 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.15 )
                        qed
                      qed
                    qed
                  next
                    case PSE_sgx_increment_MC
                    solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                           ) ▶₀ #j )
                      case E_CreateWaitCertificate_1_case_1
                      solve( !KU( senc(<~mcid, sk_user.2, pk(x)>,
                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                             ) @ #vk.11 )
                        case Signup_L2b
                        solve( !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10 )
                          case E_CreateWaitTimer_2
                          solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                                 ) ▶₂ #j.2 )
                            case Signup_L2a
                            solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                             h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                   ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                      ('1'+valMC)
                                        ) ▶₁ #j )
                            next
                              case c_senc
                              solve( !KU( ~mcid.1 ) @ #vk.15 )
                                case Signup_L2b
                                solve( !KU( ~sk_user ) @ #vk.17 )
                                  case Signup_L2b
                                  by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_sign
                          solve( !KU( ~sk_user ) @ #vk.11 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.14 )
                          qed
                        qed
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.14 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.19 )
                        qed
                      qed
                    next
                      case E_CreateWaitCertificate_1_case_2
                      solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2 )
                        case Signup_L2a
                        solve( !KU( senc(<~mcid, sk_user.2, pk(x)>,
                                         h(<~platform_sec, mrenclave.1, 'seal'>))
                               ) @ #vk.11 )
                          case Signup_L2b
                          solve( !KU( sign(valMC_ref.1, ~sk_user) ) @ #vk.10 )
                            case E_CreateWaitTimer_2
                            solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                                   ) ▶₂ #j.2 )
                              case Signup_L2a
                              solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                               h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                                     ) @ #vk.11 )
                                case Signup_L2b
                                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                     ('1'+valMC)
                                       ) ▶₁ #j )
                                  case PSE_sgx_increment_MC
                                  by contradiction /* cyclic */
                                qed
                              next
                                case c_senc
                                solve( !KU( ~mcid.1 ) @ #vk.15 )
                                  case Signup_L2b
                                  solve( !KU( ~sk_user ) @ #vk.17 )
                                    case Signup_L2b
                                    by solve( !KU( ~platform_sec.1 ) @ #vk.21 )
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_sign
                            solve( !KU( ~sk_user ) @ #vk.11 )
                              case Signup_L2b
                              by solve( !KU( ~platform_sec ) @ #vk.14 )
                            qed
                          qed
                        next
                          case c_senc
                          solve( !KU( ~mcid ) @ #vk.14 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec ) @ #vk.20 )
                          qed
                        qed
                      qed
                    next
                      case E_CreateWaitTimer_1
                      solve( !KU( senc(<~mcid, sk_user.2, pk_user.1>,
                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                             ) @ #vk.7 )
                        case Signup_L2b
                        by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                ('1'+valMC)
                                  ) ▶₁ #j )
                      next
                        case c_senc
                        solve( !KU( ~mcid ) @ #vk.10 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec ) @ #vk.15 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( ~mcid.1 ) @ #vk.10 )
                    case Signup_L2b
                    solve( !KU( ~sk_user ) @ #vk.12 )
                      case Signup_L2b
                      by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                    qed
                  qed
                qed
              qed
            next
              case c_sign
              solve( !KU( ~sk_user ) @ #vk.5 )
                case Signup_L2b
                by solve( !KU( ~platform_sec ) @ #vk.8 )
              qed
            qed
          next
            case c_senc
            solve( !KU( ~mcid ) @ #vk.7 )
              case Signup_L2b
              by solve( !KU( ~platform_sec ) @ #vk.13 )
            qed
          qed
        qed
      next
        case E_CreateWaitTimer_1
        solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                         h(<~platform_sec, ~mrenclave, 'seal'>))
               ) @ #vk )
          case Signup_L2b
          solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old1, valMC
                 ) ▶₁ #i )
            case PSE_CreateMC
            solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                   ) ▶₀ #j )
              case E_CreateWaitCertificate_1_case_1
              solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.5 )
                case Signup_L2b
                solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                  case E_CreateWaitTimer_2
                  solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                    case Signup_L2a
                    solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                     h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                           ) @ #vk.5 )
                      case Signup_L2b
                      by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                              '1'
                                ) ▶₁ #j )
                    next
                      case c_senc
                      solve( !KU( ~mcid.1 ) @ #vk.10 )
                        case Signup_L2b
                        solve( !KU( ~sk_user ) @ #vk.12 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_sign
                  solve( !KU( ~sk_user ) @ #vk.5 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec ) @ #vk.8 )
                  qed
                qed
              next
                case c_senc
                solve( !KU( ~mcid ) @ #vk.8 )
                  case Signup_L2b
                  by solve( !KU( ~platform_sec ) @ #vk.13 )
                qed
              qed
            next
              case E_CreateWaitCertificate_1_case_2
              solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j.2 )
                case Signup_L2a
                solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                 h(<~platform_sec, mrenclave.1, 'seal'>))
                       ) @ #vk.5 )
                  case Signup_L2b
                  solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                    case E_CreateWaitTimer_2
                    solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label ) ▶₂ #j.2 )
                      case Signup_L2a
                      solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                       h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                             ) @ #vk.5 )
                        case Signup_L2b
                        by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                '1'
                                  ) ▶₁ #j )
                      next
                        case c_senc
                        solve( !KU( ~mcid.1 ) @ #vk.10 )
                          case Signup_L2b
                          solve( !KU( ~sk_user ) @ #vk.12 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~sk_user ) @ #vk.5 )
                      case Signup_L2b
                      by solve( !KU( ~platform_sec ) @ #vk.8 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( ~mcid ) @ #vk.8 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec ) @ #vk.14 )
                  qed
                qed
              qed
            next
              case E_CreateWaitTimer_1
              solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.1 )
                case Signup_L2b
                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2, '1'
                       ) ▶₁ #j )
                  case PSE_CreateMC
                  by contradiction /* cyclic */
                qed
              next
                case c_senc
                solve( !KU( ~mcid ) @ #vk.4 )
                  case Signup_L2b
                  by solve( !KU( ~platform_sec ) @ #vk.9 )
                qed
              qed
            qed
          next
            case PSE_sgx_increment_MC
            solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, label
                   ) ▶₀ #j )
              case E_CreateWaitCertificate_1_case_1
              solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.5 )
                case Signup_L2b
                solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                  case E_CreateWaitTimer_2
                  solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                         ) ▶₂ #j.2 )
                    case Signup_L2a
                    solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                     h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                           ) @ #vk.5 )
                      case Signup_L2b
                      by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                              ('1'+valMC)
                                ) ▶₁ #j )
                    next
                      case c_senc
                      solve( !KU( ~mcid.1 ) @ #vk.10 )
                        case Signup_L2b
                        solve( !KU( ~sk_user ) @ #vk.12 )
                          case Signup_L2b
                          by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                        qed
                      qed
                    qed
                  qed
                next
                  case c_sign
                  solve( !KU( ~sk_user ) @ #vk.5 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec ) @ #vk.8 )
                  qed
                qed
              next
                case c_senc
                solve( !KU( ~mcid ) @ #vk.8 )
                  case Signup_L2b
                  by solve( !KU( ~platform_sec ) @ #vk.13 )
                qed
              qed
            next
              case E_CreateWaitCertificate_1_case_2
              solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label.1 ) ▶₂ #j.2 )
                case Signup_L2a
                solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                 h(<~platform_sec, mrenclave.1, 'seal'>))
                       ) @ #vk.5 )
                  case Signup_L2b
                  solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                    case E_CreateWaitTimer_2
                    solve( Sgx_create_MC( <~platform_sec.1, pk(~sk_ISV.1)>, label.1
                           ) ▶₂ #j.2 )
                      case Signup_L2a
                      solve( !KU( senc(<~mcid.1, ~sk_user, pk_user>,
                                       h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                             ) @ #vk.5 )
                        case Signup_L2b
                        by solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                                ('1'+valMC)
                                  ) ▶₁ #j )
                      next
                        case c_senc
                        solve( !KU( ~mcid.1 ) @ #vk.10 )
                          case Signup_L2b
                          solve( !KU( ~sk_user ) @ #vk.12 )
                            case Signup_L2b
                            by solve( !KU( ~platform_sec.1 ) @ #vk.16 )
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_sign
                    solve( !KU( ~sk_user ) @ #vk.5 )
                      case Signup_L2b
                      by solve( !KU( ~platform_sec ) @ #vk.8 )
                    qed
                  qed
                next
                  case c_senc
                  solve( !KU( ~mcid ) @ #vk.8 )
                    case Signup_L2b
                    by solve( !KU( ~platform_sec ) @ #vk.14 )
                  qed
                qed
              qed
            next
              case E_CreateWaitTimer_1
              solve( !KU( senc(<~mcid, sk_user.1, pk_user>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.1 )
                case Signup_L2b
                solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old2,
                                     ('1'+valMC)
                       ) ▶₁ #j )
                  case PSE_sgx_increment_MC
                  by contradiction /* cyclic */
                qed
              next
                case c_senc
                solve( !KU( ~mcid ) @ #vk.4 )
                  case Signup_L2b
                  by solve( !KU( ~platform_sec ) @ #vk.9 )
                qed
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( ~mcid ) @ #vk.3 )
            case Signup_L2b
            by solve( !KU( ~platform_sec ) @ #vk.8 )
          qed
        qed
      qed
    qed
  qed
qed

lemma honest_run_plain:
  exists-trace
  "∃ sk_ISV pk_ISV #isv_L1 platform sk_user mrenclave #csd1 mcid initMC
     ptr1 MC_owner_policy #cmc1 #csd2 p_id pk_user #csd3 #cwt1 ptr2 valMC_ref
     #imc1 #cwt2 #cwc1 #cwc2 ptr3 sequenceID_2 #imc2.
    ((((((((((((((((((ISV_L1( sk_ISV, pk_ISV ) @ #isv_L1) ∧
                     (Signup_L2a( sk_ISV, pk_ISV, platform, sk_user, mrenclave ) @ #csd1)) ∧
                    (initMC = '1')) ∧
                   (MC_owner_policy = <platform, pk_ISV>)) ∧
                  (PSE_CreateMC( MC_owner_policy, mcid, ptr1, initMC ) @ #cmc1)) ∧
                 (Signup_L2b( sk_ISV, pk_ISV, platform, mrenclave, sk_user, pk_user, mcid,
                              initMC
                  ) @ #csd2)) ∧
                (Signup_3( sk_ISV, pk_ISV, platform, mrenclave, p_id, sk_user, pk_user,
                           mcid, initMC
                 ) @ #csd3)) ∧
               (E_CreateWaitTimer_1( pk_ISV, platform, mrenclave, p_id, sk_user,
                                     pk_user, mcid
                ) @ #cwt1)) ∧
              (valMC_ref = ('1'+initMC))) ∧
             (¬(ptr1 = ptr2))) ∧
            (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr1, ptr2, valMC_ref
             ) @ #imc1)) ∧
           (E_CreateWaitTimer_2( pk_ISV, platform, p_id, sk_user, pk_user, mcid,
                                 valMC_ref
            ) @ #cwt2)) ∧
          (E_CreateWaitCertificate_1( pk_ISV, platform, mrenclave, p_id, sk_user,
                                      pk_user, mcid, valMC_ref
           ) @ #cwc1)) ∧
         (sequenceID_2 = ('1'+'1'+initMC))) ∧
        (¬(ptr2 = ptr3))) ∧
       (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr2, ptr3, sequenceID_2
        ) @ #imc2)) ∧
      (E_CreateWaitCertificate_2( pk_ISV, platform, mrenclave, p_id, sk_user,
                                  pk_user, mcid, sequenceID_2
       ) @ #cwc2)) ∧
     (∀ node_i node_j #i #j.
       ((Node( node_i ) @ #i) ∧ (Node( node_j ) @ #j)) ⇒ (#i = #j))) ∧
    (∀ platform_x p_id_i p_id_j #i #j.
      ((Process( platform_x, p_id_i ) @ #i) ∧
       (Process( platform_x, p_id_j ) @ #j)) ⇒
      (#i = #j))"
/*
guarded formula characterizing all satisfying traces:
"∃ sk_ISV pk_ISV #isv_L1 platform sk_user mrenclave #csd1 mcid initMC
   ptr1 MC_owner_policy #cmc1 #csd2 p_id pk_user #csd3 #cwt1 ptr2 valMC_ref
   #imc1 #cwt2 #cwc1 #cwc2 ptr3 sequenceID_2 #imc2.
  (ISV_L1( sk_ISV, pk_ISV ) @ #isv_L1) ∧
  (Signup_L2a( sk_ISV, pk_ISV, platform, sk_user, mrenclave ) @ #csd1) ∧
  (initMC = '1') ∧
  (MC_owner_policy = <platform, pk_ISV>) ∧
  (PSE_CreateMC( MC_owner_policy, mcid, ptr1, initMC ) @ #cmc1) ∧
  (Signup_L2b( sk_ISV, pk_ISV, platform, mrenclave, sk_user, pk_user, mcid,
               initMC
   ) @ #csd2) ∧
  (Signup_3( sk_ISV, pk_ISV, platform, mrenclave, p_id, sk_user, pk_user,
             mcid, initMC
   ) @ #csd3) ∧
  (E_CreateWaitTimer_1( pk_ISV, platform, mrenclave, p_id, sk_user,
                        pk_user, mcid
   ) @ #cwt1) ∧
  (valMC_ref = ('1'+initMC)) ∧
  (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr1, ptr2, valMC_ref
   ) @ #imc1) ∧
  (E_CreateWaitTimer_2( pk_ISV, platform, p_id, sk_user, pk_user, mcid,
                        valMC_ref
   ) @ #cwt2) ∧
  (E_CreateWaitCertificate_1( pk_ISV, platform, mrenclave, p_id, sk_user,
                              pk_user, mcid, valMC_ref
   ) @ #cwc1) ∧
  (sequenceID_2 = ('1'+'1'+initMC)) ∧
  (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr2, ptr3, sequenceID_2
   ) @ #imc2) ∧
  (E_CreateWaitCertificate_2( pk_ISV, platform, mrenclave, p_id, sk_user,
                              pk_user, mcid, sequenceID_2
   ) @ #cwc2)
 ∧
  (¬(ptr1 = ptr2)) ∧
  (¬(ptr2 = ptr3)) ∧
  (∀ node_i node_j #i #j.
    (Node( node_i ) @ #i) ∧ (Node( node_j ) @ #j) ⇒ #i = #j) ∧
  (∀ platform_x p_id_i p_id_j #i #j.
    (Process( platform_x, p_id_i ) @ #i) ∧
    (Process( platform_x, p_id_j ) @ #j)
   ⇒
    #i = #j)"
*/
simplify
solve( !ISV_E_Singup1( ~sk_ISV, pk(~sk_ISV) ) ▶₀ #csd1 )
  case ISV_L1
  solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #cmc1 )
    case Signup_L2a
    solve( Sgx_create_MC_done( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                               ~mc_session.1, '1'
           ) ▶₀ #csd2 )
      case PSE_CreateMC
      solve( Signup_Mem_12( ~sk_ISV, pk(~sk_ISV), ~platform_sec, ~mrenclave,
                            ~sk_user, ~mc_session
             ) ▶₁ #csd2 )
        case Signup_L2a
        solve( !Signup_Mem_23( ~sk_ISV, pk(~sk_ISV), ~platform_sec, ~mrenclave,
                               ~sk_user, pk(~sk_user), ~mcid, '1'
               ) ▶₁ #csd3 )
          case Signup_L2b
          solve( Start_process_cwt( pk(~sk_ISV), ~platform_sec, ~mrenclave, ~p_id
                 ) ▶₀ #cwt1 )
            case Signup_3
            solve( PSE_sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid, ~ptr,
                                         ptr2, ('1'+'1')
                   ) @ #imc1 )
              case PSE_sgx_increment_MC
              solve( E_CreateWaitTimer_2( pk(~sk_ISV), ~platform_sec, ~p_id, ~sk_user,
                                          pk(~sk_user), ~mcid, ('1'+'1')
                     ) @ #cwt2 )
                case E_CreateWaitTimer_2
                solve( Sgx_increment_MC_done( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                                              ~mc_session.2, ('1'+'1')
                       ) ▶₀ #cwt2 )
                  case PSE_sgx_increment_MC
                  solve( EPC_CWT( pk(~sk_ISV), ~platform_sec, ~p_id, ~sk_user,
                                  pk(~sk_user), seal_key, ~mcid, ~mc_session.2
                         ) ▶₁ #cwt2 )
                    case E_CreateWaitTimer_1
                    solve( E_CreateWaitCertificate_1( pk(~sk_ISV), ~platform_sec, ~mrenclave,
                                                      ~p_id, ~sk_user, pk(~sk_user), ~mcid, ('1'+'1')
                           ) @ #cwc1 )
                      case E_CreateWaitCertificate_1
                      solve( Start_process_cwc( pk(~sk_ISV), ~platform_sec, ~mrenclave, ~p_id
                             ) ▶₀ #cwc1 )
                        case E_CreateWaitCertificate_2
                        solve( Sgx_create_MC( <~platform_sec, pk(~sk_ISV)>, label ) ▶₂ #j )
                          case Signup_L2a
                          solve( PSE_sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                                                       ~ptr_new, ptr3, ('1'+'1'+'1')
                                 ) @ #imc2 )
                            case PSE_sgx_increment_MC
                            solve( E_CreateWaitCertificate_2( pk(~sk_ISV), ~platform_sec, ~mrenclave,
                                                              ~p_id, ~sk_user, pk(~sk_user), ~mcid,
                                                              ('1'+'1'+'1')
                                   ) @ #cwc2 )
                              case E_CreateWaitCertificate_2
                              solve( Sgx_increment_MC_done( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                                                            ~mc_session.2, ('1'+'1'+'1')
                                     ) ▶₁ #cwc2 )
                                case PSE_sgx_increment_MC
                                solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                                                         ~mc_session.3
                                       ) ▶₀ #imc1 )
                                  case E_CreateWaitTimer_1
                                  solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ~ptr, '1'
                                         ) ▶₁ #imc1 )
                                    case PSE_CreateMC
                                    solve( EPC_CWC_12( pk(~sk_ISV), ~platform_sec, ~mrenclave, ~p_id,
                                                       sk_user.1, pk_user, ~mcid, ~mc_session.4, valMC_ref
                                           ) ▶₀ #vr )
                                      case E_CreateWaitCertificate_1_case_1
                                      solve( !KU( senc(<~mcid, sk_user.1, pk(x)>,
                                                       h(<~platform_sec, ~mrenclave, 'seal'>))
                                             ) @ #vk.10 )
                                        case Signup_L2b
                                        solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.9 )
                                          case E_CreateWaitTimer_2
                                          solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                                                                   ~mc_session.2
                                                 ) ▶₀ #imc2 )
                                            case E_CreateWaitCertificate_1
                                            solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                                                                 ~ptr_new, ('1'+'1')
                                                   ) ▶₁ #imc2 )
                                              case PSE_sgx_increment_MC
                                              SOLVED // trace found
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma cert_for_each_node_sanity_plain:
  exists-trace
  "∃ platform1 platform2 platform3 valMC_ref #t1 #t2 #t3.
    ((((PoETCertificate( platform1, valMC_ref ) @ #t1) ∧
       (PoETCertificate( platform2, valMC_ref ) @ #t2)) ∧
      (PoETCertificate( platform3, valMC_ref ) @ #t3)) ∧
     (¬(platform1 = platform2))) ∧
    (¬(platform2 = platform3))"
/*
guarded formula characterizing all satisfying traces:
"∃ platform1 platform2 platform3 valMC_ref #t1 #t2 #t3.
  (PoETCertificate( platform1, valMC_ref ) @ #t1) ∧
  (PoETCertificate( platform2, valMC_ref ) @ #t2) ∧
  (PoETCertificate( platform3, valMC_ref ) @ #t3)
 ∧
  (¬(platform1 = platform2)) ∧ (¬(platform2 = platform3))"
*/
simplify
solve( Sgx_increment_MC_done( <platform1, pk_ISV>, mcid, ~mc_session,
                              ('1'+valMC_ref)
       ) ▶₁ #t1 )
  case PSE_sgx_increment_MC
  solve( Sgx_increment_MC_done( <platform2, pk_ISV.1>, mcid.1,
                                ~mc_session.1, ('1'+valMC_ref)
         ) ▶₁ #t2 )
    case PSE_sgx_increment_MC
    solve( Sgx_increment_MC_done( <platform3, pk_ISV.2>, mcid.2,
                                  ~mc_session.2, ('1'+valMC_ref)
           ) ▶₁ #t3 )
      case PSE_sgx_increment_MC
      solve( Sgx_create_MC( <platform1, pk_ISV>, label ) ▶₂ #j )
        case Signup_L2a
        solve( Sgx_create_MC( <platform2, pk_ISV>, label ) ▶₂ #j.1 )
          case Signup_L2a
          solve( Sgx_create_MC( <platform3, pk_ISV>, label ) ▶₂ #j.2 )
            case Signup_L2a
            solve( EPC_CWC_12( pk(~sk_ISV), ~platform_sec, mrenclave, p_id, sk_user,
                               pk_user, ~mcid, ~mc_session.1, valMC_ref
                   ) ▶₀ #t1 )
              case E_CreateWaitCertificate_1_case_1
              solve( !KU( senc(<~mcid, sk_user, pk(x)>,
                               h(<~platform_sec, ~mrenclave, 'seal'>))
                     ) @ #vk.4 )
                case Signup_L2b
                solve( !KU( sign(valMC_ref, ~sk_user) ) @ #vk.4 )
                  case E_CreateWaitTimer_2
                  solve( Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3 )
                    case Signup_L2a
                    solve( !KU( senc(<~mcid.3, ~sk_user, pk_user.2>,
                                     h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
                           ) @ #vk.5 )
                      case Signup_L2b
                      solve( EPC_CWC_12( pk(~sk_ISV.1), ~platform_sec.1, mrenclave.1, p_id.1,
                                         sk_user.1, pk_user, ~mcid.1, ~mc_session.2, ('1'+valMC)
                             ) ▶₀ #t2 )
                        case E_CreateWaitCertificate_1_case_1
                        solve( !KU( senc(<~mcid.1, sk_user.1, pk(x)>,
                                         h(<~platform_sec.1, ~mrenclave.1, 'seal'>))
                               ) @ #vk.10 )
                          case Signup_L2b
                          solve( !KU( sign(('1'+valMC), ~sk_user.1) ) @ #vk.10 )
                            case E_CreateWaitTimer_2
                            solve( Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label ) ▶₂ #j.3 )
                              case Signup_L2a
                              solve( !KU( senc(<~mcid.3, ~sk_user.1, pk_user.1>,
                                               h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
                                     ) @ #vk.11 )
                                case Signup_L2b
                                solve( EPC_CWC_12( pk(~sk_ISV.2), ~platform_sec.2, mrenclave.2, p_id.2,
                                                   sk_user.2, pk_user, ~mcid.2, ~mc_session.3, ('1'+valMC)
                                       ) ▶₀ #t3 )
                                  case E_CreateWaitCertificate_1_case_1
                                  solve( !KU( senc(<~mcid.2, sk_user.2, pk(x)>,
                                                   h(<~platform_sec.2, ~mrenclave.2, 'seal'>))
                                         ) @ #vk.14 )
                                    case Signup_L2b
                                    solve( !KU( sign(('1'+valMC), ~sk_user.2) ) @ #vk.14 )
                                      case E_CreateWaitTimer_2
                                      solve( Sgx_create_MC( <~platform_sec.3, pk(~sk_ISV.3)>, label
                                             ) ▶₂ #j.3 )
                                        case Signup_L2a
                                        solve( !KU( senc(<~mcid.3, ~sk_user.2, pk_user>,
                                                         h(<~platform_sec.3, ~mrenclave.3, 'seal'>))
                                               ) @ #vk.15 )
                                          case Signup_L2b
                                          solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>, ~mcid,
                                                                   ~mc_session.1
                                                 ) ▶₀ #vr )
                                            case E_CreateWaitCertificate_1
                                            solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>, ~mcid, ptr_old,
                                                                 ('1'+valMC)
                                                   ) ▶₁ #vr )
                                              case PSE_sgx_increment_MC
                                              solve( Sgx_increment_MC( <~platform_sec.1, pk(~sk_ISV.1)>,
                                                                       ~mcid.1, ~mc_session.2
                                                     ) ▶₀ #vr.1 )
                                                case E_CreateWaitCertificate_1
                                                solve( !Priv_mem_ME( <~platform_sec.1, pk(~sk_ISV.1)>,
                                                                     ~mcid.1, ptr_old, ('1'+valMC)
                                                       ) ▶₁ #vr.1 )
                                                  case PSE_sgx_increment_MC
                                                  solve( Sgx_increment_MC( <~platform_sec.2, pk(~sk_ISV.2)>,
                                                                           ~mcid.2, ~mc_session.3
                                                         ) ▶₀ #vr.2 )
                                                    case E_CreateWaitCertificate_1
                                                    solve( !Priv_mem_ME( <~platform_sec.2, pk(~sk_ISV.2)>,
                                                                         ~mcid.2, ptr_old, ('1'+valMC)
                                                           ) ▶₁ #vr.2 )
                                                      case PSE_sgx_increment_MC
                                                      solve( Sgx_increment_MC( <~platform_sec, pk(~sk_ISV)>,
                                                                               ~mcid, ~mc_session.6
                                                             ) ▶₀ #vr.15 )
                                                        case E_CreateWaitTimer_1
                                                        solve( !Priv_mem_ME( <~platform_sec, pk(~sk_ISV)>,
                                                                             ~mcid, ptr_old, valMC
                                                               ) ▶₁ #vr.15 )
                                                          case PSE_CreateMC
                                                          solve( Sgx_increment_MC( <~platform_sec.1, 
                                                                                    pk(~sk_ISV.1)>,
                                                                                   ~mcid.1, ~mc_session.7
                                                                 ) ▶₀ #vr.24 )
                                                            case E_CreateWaitTimer_1
                                                            solve( !Priv_mem_ME( <~platform_sec.1, 
                                                                                  pk(~sk_ISV.1)>,
                                                                                 ~mcid.1, ptr_old, '1'
                                                                   ) ▶₁ #vr.24 )
                                                              case PSE_CreateMC
                                                              solve( Sgx_increment_MC( <~platform_sec.2, 
                                                                                        pk(~sk_ISV.2)>,
                                                                                       ~mcid.2, ~mc_session.8
                                                                     ) ▶₀ #vr.33 )
                                                                case E_CreateWaitTimer_1
                                                                solve( !Priv_mem_ME( <~platform_sec.2, 
                                                                                      pk(~sk_ISV.2)>,
                                                                                     ~mcid.2, ptr_old, '1'
                                                                       ) ▶₁ #vr.33 )
                                                                  case PSE_CreateMC
                                                                  SOLVED // trace found
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma unique_cert_per_node_same_valMC_ref_plain:
  all-traces
  "∀ platform valMC_ref #t1 #t2.
    ((PoETCertificate( platform, valMC_ref ) @ #t1) ∧
     (PoETCertificate( platform, valMC_ref ) @ #t2)) ⇒
    (#t1 = #t2)"
/*
guarded formula characterizing all counter-examples:
"∃ platform valMC_ref #t1 #t2.
  (PoETCertificate( platform, valMC_ref ) @ #t1) ∧
  (PoETCertificate( platform, valMC_ref ) @ #t2)
 ∧
  ¬(#t1 = #t2)"
*/
simplify
solve( (#t1 < #t2)  ∥ (#t2 < #t1) )
  case case_1
  solve( Sgx_increment_MC_done( <platform, pk_ISV>, mcid, ~mc_session,
                                ('1'+valMC_ref)
         ) ▶₁ #t1 )
    case PSE_sgx_increment_MC
    solve( Sgx_increment_MC_done( <platform, pk_ISV.1>, mcid.1,
                                  ~mc_session.1, ('1'+valMC_ref)
           ) ▶₁ #t2 )
      case PSE_sgx_increment_MC
      solve( Sgx_create_MC( <platform, pk_ISV>, label ) ▶₂ #j )
        case Signup_L2a
        solve( Sgx_create_MC( <~platform_sec, pk_ISV>, label ) ▶₂ #j.1 )
          case Signup_L2a
          by contradiction /* cyclic */
        qed
      qed
    qed
  qed
next
  case case_2
  solve( Sgx_increment_MC_done( <platform, pk_ISV>, mcid, ~mc_session,
                                ('1'+valMC_ref)
         ) ▶₁ #t1 )
    case PSE_sgx_increment_MC
    solve( Sgx_increment_MC_done( <platform, pk_ISV.1>, mcid.1,
                                  ~mc_session.1, ('1'+valMC_ref)
           ) ▶₁ #t2 )
      case PSE_sgx_increment_MC
      solve( Sgx_create_MC( <platform, pk_ISV>, label ) ▶₂ #j )
        case Signup_L2a
        solve( Sgx_create_MC( <~platform_sec, pk_ISV>, label ) ▶₂ #j.1 )
          case Signup_L2a
          by contradiction /* cyclic */
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: saw_safe.spthy

  createMC_for_every_incMC_ind (all-traces): verified (19 steps)
  MC_value_never_equals_ind (all-traces): verified (438 steps)
  honest_run_plain (exists-trace): verified (25 steps)
  cert_for_each_node_sanity_plain (exists-trace): verified (35 steps)
  unique_cert_per_node_same_valMC_ref_plain (all-traces): verified (12 steps)

==============================================================================
