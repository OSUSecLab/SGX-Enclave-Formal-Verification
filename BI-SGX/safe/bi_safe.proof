
~/Documents/sgx_formal_verification/artifact_submit/code/BI-SGX/safe
❯ tamarin-prover bi_safe.spthy --prove
maude tool: 'maude'
 checking version: 3.0. OK.
 checking installation: OK.

  solved goal nr. 0 (directly):
    E_r_data_reply_ex( ra_r_key_x, index_req_x1.1, sealed_e_return_x1.2
    ) @ #E_r_data_reply_ex_x1.3
  solved goal nr. 0 (directly):
    RCHR_data_rcv( ra_r_key, index_req1.1 ) @ #RCHR_data_rcv1.2
  solved goal nr. 0 (directly):
    RCHR_data_rcv( ra_r_key, index_req.1 ) @ #RCHR_data_rcv.2
  solved goal nr. 0 (directly): DO_Setup( oname ) @ #do_setup.1
  solved goal nr. 0 (directly):
    PSE_sgx_increment_MC( MC_owner_policy, mcid.1, ptr_old1.2,
                          ptr_new1.3, valMC.6
    ) @ #i.7
  solved goal nr. 0 (directly): DO_Setup( oname ) @ #do_setup.1
  solved goal nr. 0 (directly):
    PSE_sgx_increment_MC( MC_owner_policy, mcid.1, ptr_old.2,
                          ptr_new.3, valMC.4
    ) @ #i.5
  solved goal nr. 0 (directly):
    RCHR_data_rcv( ra_r_key, index_req.1 ) @ #RCHR_data_rcv.2
  solved goal nr. 0 (directly):
    RCHR_data_rcv( ra_r_key_x, index_req_x.1 ) @ #RCHR_data_rcv_x.2
  solved goal nr. 0 (directly): DO_Setup( oname ) @ #do_setup.1
  solved goal nr. 0 (directly): !DB_index( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !L12( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly): !DB_mem( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !L23( t.1, t.2, t.3, t.4, t.5 ) ▶₀ #i
  solved goal nr. 0 (directly): !Indexes( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly): !OMem( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly):
    !Priv_mem_ME( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly):
    EPC_E_o( t.1, t.2, t.3, t.4, t.5, t.6, t.7, t.8, t.9 ) ▶₀ #i
  solved goal nr. 0 (directly):
    EPC_E_r( t.1, t.2, t.3, t.4, t.5, t.6 ) ▶₀ #i
  solved goal nr. 0 (directly): L22( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly): RA_r_login( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly): RA_o_login( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly): Mem_RCHR( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly):
    Sgx_create_MC_done( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly): Start_thread_db_upload( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly): Start_thread_db_data_req( t.1 ) ▶₀ #i
  solved goal nr. 0 (directly):
    Sgx_increment_MC( t.1, t.2, t.3 ) ▶₀ #i
  solved goal nr. 0 (directly):
    Sgx_increment_MC_done( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( ~t.1 ) @ #i
  solved goal nr. 0 (directly):
    Start_thread_e_data_req( t.1, t.2, t.3, t.4 ) ▶₀ #i
  solved goal nr. 0 (directly):
    Start_thread_e_upload( t.1, t.2, t.3, t.4, t.5 ) ▶₀ #i
  solved goal nr. 0 (directly): Sgx_create_MC( t.1, t.2 ) ▶₀ #i
  solved goal nr. 0 (directly): !KU( fst(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( senc(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( h(t.1) ) @ #i
  solved goal nr. 0 (directly): !KU( sdec(t.1, t.2) ) @ #i
  solved goal nr. 0 (directly): !KU( snd(t.1) ) @ #i
  solved goal nr. 1 (directly):
    DO_upload( ra_o_key.2, data.3, oname, cipher_upload_req.4,
               gcm_tag_upload_req.5
    ) @ #do_upload.6
  solved goal nr. 2 (directly): !OMem( oname.3 ) ▶₂ #vr.2
  solved goal nr. 1 (directly):
    DO_upload( ra_o_key.2, data.3, oname, cipher_upload_req.4,
               gcm_tag_upload_req.5
    ) @ #do_upload.6
  solved goal nr. 2 (directly):
    L1_platform( platform.7 ) @ #L1_platform.8
  solved goal nr. 2 (directly):
    L1_platform( platform.7 ) @ #L1_platform.8
  solved goal nr. 3 (directly):
    L2_mrsigner_mrenclave( platform.7, mrsigner.10, mrenclave.9
    ) @ #L2_mrsigner_mrenclave.11
  solved goal nr. 3 (directly):
    L2_mrsigner_mrenclave( platform.7, mrsigner.10, mrenclave.9
    ) @ #L2_mrsigner_mrenclave.11
  solved goal nr. 4 (directly):
    PSE_CreateMC( <platform.7, mrenclave.9>, mcid.12, ptrMC1.14, '1'
    ) @ #cmc.15
  solved goal nr. 5 (directly):
    L2_MC( platform.7, mrsigner.10, mrenclave.9, mcid.12, '1'
    ) @ #L2_MC.16
  solved goal nr. 2 (directly):
    Start_thread_db_upload( ~p_id.4 ) ▶₁ #vr.3
  solved goal nr. 2 (directly):
    Sgx_increment_MC( t.1, t.2, t.3 ) ▶₀ #vr.5
  solved goal nr. 1 (directly):
    RCHR_data_rcv( ra_r_key, index_req2.3 ) @ #RCHR_data_rcv2.4
  solved goal nr. 6 (directly):
    L3_process( platform.7, mrsigner.10, mrenclave.9, p_id.17, mcid.12,
                '1'
    ) @ #L3_process.18
  solved goal nr. 4 (directly): !OMem( oname.10 ) ▶₂ #vr.9
  solved goal nr. 8 (directly):
    !L23( platform_sec.11, mrsigner.11, mrenclave.11, mcid.11, valMC.11
    ) ▶₀ #vr.10
  solved goal nr. 8 (directly):
    Start_thread_e_upload( platform_sec.9, mrsigner.9, mrenclave.9,
                           ~p_id.9, t.2
    ) ▶₁ #vr.8
  solved goal nr. 1 (directly):
    E_r_data_reply_ex( ra_r_key_x, index_req_x2.4, sealed_e_return_x2.5
    ) @ #E_r_data_reply_ex_x2.6
  solved goal nr. 4 (directly): !OMem( oname.7 ) ▶₂ #vr.6
  solved goal nr. 10 (directly):
    Sgx_create_MC_done( <platform_sec.11, ~mrenclave.14>,
                        ~mc_session.14, mcid.11, valMC.11
    ) ▶₀ #vr.13
  solved goal nr. 7 (directly):
    E_o_decrypt( platform.7, mrsigner.10, mrenclave.9, p_id.17,
                 ra_o_key.2, data.3, oname, cipher_upload_req.4,
                 gcm_tag_upload_req.5, mcid.12
    ) @ #e_o_decrypt.19
  solved goal nr. 9 (directly): RA_o_login( ~ra_o_key.9 ) ▶₂ #vr.8
  solved goal nr. 11 (directly):
    !L23( platform_sec.9, mrsigner.9, mrenclave.9, t.2, valMC.16
    ) ▶₀ #vr.15
  solved goal nr. 11 (directly):
    L22( platform_sec.11, ~mrsigner.14, ~mrenclave.14, ~mc_session.14
    ) ▶₁ #vr.13
  solved goal nr. 13 (directly): !OMem( oname.19 ) ▶₂ #vr.18
  solved goal nr. 13 (directly):
    Sgx_create_MC( <platform_sec.11, ~mrenclave.14>, ~mc_session.14
    ) ▶₂ #vr.15
  solved goal nr. 4 (directly): !OMem( oname.10 ) ▶₂ #vr.9
  solved goal nr. 4 (directly): !OMem( oname.7 ) ▶₂ #vr.6
  solved goal nr. 15 (directly):
    Sgx_create_MC_done( <platform_sec.9, ~mrenclave.23>,
                        ~mc_session.23, t.2, valMC.16
    ) ▶₀ #vr.22
  solved goal nr. 10 (directly):
    DB_setup( ptrIndex1.26, '1' ) @ #db_setup.27
  solved goal nr. 16 (directly):
    L22( platform_sec.9, ~mrsigner.23, ~mrenclave.23, ~mc_session.23
    ) ▶₁ #vr.22
  solved goal nr. 15 (directly): !L12( platform_sec.11 ) ▶₂ #vr.19
  solved goal nr. 19 (directly):
    Sgx_create_MC( <platform_sec.9, ~mrenclave.23>, ~mc_session.23
    ) ▶₂ #vr.27
  solved goal nr. 13 (directly):
    E_r_data_req( platform.7, mrsigner.10, mrenclave.9, p_id.17,
                  ra_r_key.30, index_req.31, cipher_data_req.32, gcm_tag_data_req.33
    ) @ #E_r_data_req.35
  solved goal nr. 4 (directly): !OMem( oname.10 ) ▶₂ #vr.9
  solved goal nr. 1 (directly):
    DO_upload( ra_o_key1.2, data1.3, oname, cipher_upload_req1.4,
               gcm_tag_upload_req1.5
    ) @ #do_upload1.6
  solved goal nr. 2 (directly):
    !L23( platform_sec.3, mrsigner.3, mrenclave.3, mcid.3, valMC.3
    ) ▶₀ #vr.2
  solved goal nr. 2 (directly):
    !L23( platform_sec.3, mrsigner.3, mrenclave.3, mcid.3, valMC.3
    ) ▶₀ #vr.2
  solved goal nr. 2 (directly): !L12( t.1 ) ▶₂ #vr.5
  solved goal nr. 2 (directly):
    DO_upload( ra_o_key2.7, data2.8, oname, cipher_upload_req2.9,
               gcm_tag_upload_req2.10
    ) @ #do_upload2.11
  solved goal nr. 3 (directly):
    L1_platform( platform.12 ) @ #L1_platform.13
  solved goal nr. 2 (directly):
    Start_thread_db_upload( ~p_id.4 ) ▶₁ #vr.3
  solved goal nr. 5 (directly): RA_r_login( ~ra_r_key.8 ) ▶₁ #vr.7
  solved goal nr. 4 (directly):
    L2_mrsigner_mrenclave( platform.12, mrsigner.15, mrenclave.14
    ) @ #L2_mrsigner_mrenclave.16
  solved goal nr. 5 (directly):
    PSE_CreateMC( <platform.12, mrenclave.14>, mcid.17, ptrMC1.19, '1'
    ) @ #cmc.20
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <platform_sec.3, ~mrenclave.6>, ~mc_session.6,
                        mcid.3, valMC.3
    ) ▶₀ #vr.5
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <platform_sec.3, ~mrenclave.6>, ~mc_session.6,
                        mcid.3, valMC.3
    ) ▶₀ #vr.5
  solved goal nr. 6 (directly):
    L2_MC( platform.12, mrsigner.15, mrenclave.14, mcid.17, '1'
    ) @ #L2_MC.21
  solved goal nr. 9 (directly):
    !L23( platform_sec.11, mrsigner.11, mrenclave.11, mcid.11, valMC.11
    ) ▶₀ #vr.10
  solved goal nr. 5 (directly):
    L22( platform_sec.3, ~mrsigner.6, ~mrenclave.6, ~mc_session.6
    ) ▶₁ #vr.5
  solved goal nr. 7 (directly):
    L3_process( platform.12, mrsigner.15, mrenclave.14, p_id1.22,
                mcid.17, '1'
    ) @ #L3_process1.23
  solved goal nr. 6 (directly):
    Start_thread_e_data_req( t.1, t.2, t.3, ~p_id.8 ) ▶₂ #vr.7
  solved goal nr. 5 (directly):
    L22( platform_sec.3, ~mrsigner.6, ~mrenclave.6, ~mc_session.6
    ) ▶₁ #vr.5
  solved goal nr. 7 (directly):
    Sgx_create_MC( <platform_sec.3, ~mrenclave.6>, ~mc_session.6
    ) ▶₂ #vr.7
  solved goal nr. 11 (directly):
    Sgx_create_MC_done( <platform_sec.11, ~mrenclave.14>,
                        ~mc_session.14, mcid.11, valMC.11
    ) ▶₀ #vr.13
  solved goal nr. 8 (directly):
    L3_process( platform.12, mrsigner.15, mrenclave.14, p_id2.24,
                mcid.17, '1'
    ) @ #L3_process2.25
  solved goal nr. 8 (directly): !Indexes( index_req.14 ) ▶₀ #vr.13
  solved goal nr. 5 (directly):
    Start_thread_e_upload( platform_sec.5, mrsigner.5, mrenclave.5,
                           ~p_id.5, t.2
    ) ▶₁ #vr.4
  solved goal nr. 4 (directly): !OMem( oname.10 ) ▶₂ #vr.9
  solved goal nr. 7 (directly):
    Sgx_create_MC( <platform_sec.3, ~mrenclave.6>, ~mc_session.6
    ) ▶₂ #vr.7
  solved goal nr. 9 (directly):
    E_o_decrypt( platform.12, mrsigner.15, mrenclave.14, p_id1.22,
                 ra_o_key1.2, data1.3, oname, cipher_upload_req1.4,
                 gcm_tag_upload_req1.5, mcid.17
    ) @ #e_o_decrypt1.26
  solved goal nr. 1 (directly):
    RCHR_data_rcv( ra_r_key_y.3, index_req_y.4 ) @ #RCHR_data_rcv_y.5
  solved goal nr. 12 (directly):
    L22( platform_sec.11, ~mrsigner.14, ~mrenclave.14, ~mc_session.14
    ) ▶₁ #vr.13
  solved goal nr. 9 (directly): !L12( platform_sec.3 ) ▶₂ #vr.11
  solved goal nr. 10 (directly):
    !L23( t.1, t.2, t.3, mcid.17, valMC.17 ) ▶₀ #vr.16
  solved goal nr. 9 (directly): !L12( platform_sec.3 ) ▶₂ #vr.11
  solved goal nr. 6 (directly): RA_o_login( ~ra_o_key.5 ) ▶₂ #vr.4
  solved goal nr. 2 (directly):
    E_r_data_reply_ex( ra_r_key_x, index_req_x.7, sealed_e_return_x.8
    ) @ #E_r_data_reply_ex_x.9
  solved goal nr. 13 (directly):
    Sgx_create_MC_done( <t.1, ~mrenclave.23>, ~mc_session.23, mcid.17,
                        valMC.17
    ) ▶₀ #vr.22
  solved goal nr. 8 (directly):
    !L23( platform_sec.5, mrsigner.5, mrenclave.5, t.2, valMC.12
    ) ▶₀ #vr.11
  solved goal nr. 12 (directly):
    E_o_decrypt( platform.12, mrsigner.15, mrenclave.14, p_id2.24,
                 ra_o_key2.7, data2.8, oname, cipher_upload_req2.9,
                 gcm_tag_upload_req2.10, mcid.17
    ) @ #e_o_decrypt2.32
  solved goal nr. 14 (directly):
    L22( t.1, ~mrsigner.23, ~mrenclave.23, ~mc_session.23 ) ▶₁ #vr.22
  solved goal nr. 3 (directly):
    E_r_data_reply_ex( ra_r_key_y.3, index_req_x.11,
                       sealed_e_return_x.12
    ) @ #E_r_data_reply_ex_x.13
  solved goal nr. 10 (directly): !OMem( oname.15 ) ▶₂ #vr.14
  solved goal nr. 14 (directly):
    Sgx_create_MC( <platform_sec.11, ~mrenclave.14>, ~mc_session.14
    ) ▶₂ #vr.15
  solved goal nr. 15 (directly):
    DB_setup( ptrIndex1.39, '1' ) @ #db_setup.40
  solved goal nr. 16 (directly):
    Sgx_create_MC( <t.1, ~mrenclave.23>, ~mc_session.23 ) ▶₂ #vr.24
  solved goal nr. 12 (directly):
    Sgx_create_MC_done( <platform_sec.5, ~mrenclave.19>,
                        ~mc_session.19, t.2, valMC.12
    ) ▶₀ #vr.18
  solved goal nr. 13 (directly):
    L22( platform_sec.5, ~mrsigner.19, ~mrenclave.19, ~mc_session.19
    ) ▶₁ #vr.18
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, mrenclave.10>, mcid.10,
                           ~mc_session.10, valMC.10
    ) ▶₀ #vr.9
  solved goal nr. 28 (directly):
    E_r_data_reply_ex( ~ra_r_key.14, index_req_x.39,
                       sealed_e_return_x.40
    ) @ #E_r_data_reply_ex_x.41
  solved goal nr. 16 (directly): !L12( platform_sec.11 ) ▶₂ #vr.19
  solved goal nr. 18 (directly): !L12( t.1 ) ▶₂ #vr.28
  solved goal nr. 16 (directly):
    Sgx_create_MC( <platform_sec.5, ~mrenclave.19>, ~mc_session.19
    ) ▶₂ #vr.23
  solved goal nr. 4 (directly):
    PSE_CreateMC( <platform.7, mrenclave.9>, mcid.12, ptrMC1.14, '1'
    ) @ #cmc.15
  solved goal nr. 2 (directly):
    Sgx_create_MC( t.1, label.6 ) ▶₂ #vr.5
  solved goal nr. 2 (directly): Sgx_create_MC( t.1, t.2 ) ▶₂ #vr.5
  solved goal nr. 5 (directly):
    Start_thread_e_upload( t.1, t.2, t.3, ~p_id.11, t.9 ) ▶₁ #vr.10
  solved goal nr. 5 (directly):
    L2_MC( platform.7, mrsigner.10, mrenclave.9, mcid.12, '1'
    ) @ #L2_MC.16
  solved goal nr. 29 (directly):
    E_r_data_reply_ex( ~ra_r_key.21, index_req_x.43,
                       sealed_e_return_x.44
    ) @ #E_r_data_reply_ex_x.45
  solved goal nr. 6 (directly):
    L3_process( platform.7, mrsigner.10, mrenclave.9, p_id.17, mcid.12,
                '1'
    ) @ #L3_process.18
  solved goal nr. 4 (directly): !L12( platform_sec.10 ) ▶₂ #vr.9
  solved goal nr. 7 (directly):
    E_o_decrypt( platform.7, mrsigner.10, mrenclave.9, p_id.17,
                 ra_o_key.2, data.3, oname, cipher_upload_req.4,
                 gcm_tag_upload_req.5, mcid.12
    ) @ #e_o_decrypt.19
  solved goal nr. 4 (directly): !L12( platform_sec.10 ) ▶₂ #vr.9
  solved goal nr. 6 (directly): RA_o_login( ~ra_o_key.11 ) ▶₂ #vr.10
  solved goal nr. 10 (directly):
    DB_setup( ptrIndex1.27, '1' ) @ #db_setup.28
  solved goal nr. 2 (directly): !Indexes( t.2 ) ▶₀ #vr.3
  solved goal nr. 8 (directly):
    !L23( t.1, t.2, t.3, t.9, valMC.18 ) ▶₀ #vr.17
  solved goal nr. 13 (directly):
    E_r_data_req( platform.7, mrsigner.10, mrenclave.9, p_id.17,
                  ra_r_key.32, index_req.33, cipher_data_req.34, gcm_tag_data_req.35
    ) @ #E_r_data_req.37
  solved goal nr. 10 (directly): !OMem( oname.21 ) ▶₂ #vr.20
  solved goal nr. 14 (directly):
    DB_retrieve( p_id.17, index_req.33, sealed_e_return.24
    ) @ #db_retrieve.38
  solved goal nr. 4 (directly): !OMem( oname.7 ) ▶₂ #vr.6
  solved goal nr. 2 (directly):
    Sgx_increment_MC( t.1, t.2, label.6 ) ▶₀ #vr.5
  solved goal nr. 2 (directly):
    !L23( t.1, t.2, t.3, mcid.6, valMC.6 ) ▶₀ #vr.5
  solved goal nr. 12 (directly):
    Sgx_create_MC_done( <t.1, ~mrenclave.25>, ~mc_session.25, t.9,
                        valMC.18
    ) ▶₀ #vr.24
  solved goal nr. 2 (directly):
    !L23( t.1, t.2, t.3, t.5, valMC.7 ) ▶₀ #vr.6
  solved goal nr. 8 (directly):
    Start_thread_e_upload( platform_sec.10, mrsigner.10, mrenclave.10,
                           ~p_id.10, t.2
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !OMem( oname.7 ) ▶₂ #vr.6
  solved goal nr. 13 (directly):
    L22( t.1, ~mrsigner.25, ~mrenclave.25, ~mc_session.25 ) ▶₁ #vr.24
  solved goal nr. 15 (directly):
    E_r_data_resp( platform.7, mrsigner.10, mrenclave.9, p_id.17,
                   ra_r_key.32, index_req.33, data.3, sealed_e_return.24,
                   cipher_data_resp.39, gcm_tag_data_resp.40
    ) @ #E_r_data_resp.41
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <t.1, ~mrenclave.9>, ~mc_session.9, mcid.6,
                        valMC.6
    ) ▶₀ #vr.8
  solved goal nr. 9 (directly): RA_o_login( ~ra_o_key.10 ) ▶₂ #vr.9
  solved goal nr. 5 (directly):
    L22( t.1, ~mrsigner.9, ~mrenclave.9, ~mc_session.9 ) ▶₁ #vr.8
  solved goal nr. 16 (directly):
    Sgx_create_MC( <t.1, ~mrenclave.25>, ~mc_session.25 ) ▶₂ #vr.29
  solved goal nr. 2 (directly):
    Sgx_create_MC_done( <t.1, ~mrenclave.7>, ~mc_session.7, t.4, t.5
    ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    Sgx_create_MC_done( <t.1, ~mrenclave.10>, ~mc_session.10, t.5,
                        valMC.7
    ) ▶₀ #vr.9
  solved goal nr. 16 (directly):
    RCHR_data_resp( ra_r_key.32, index_req.33, data.3,
                    cipher_data_resp.39, gcm_tag_data_resp.40
    ) @ #rchr_data_resp.42
  solved goal nr. 11 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, t.2, valMC.17
    ) ▶₀ #vr.16
  solved goal nr. 5 (directly):
    L22( t.1, ~mrsigner.10, ~mrenclave.10, ~mc_session.10 ) ▶₁ #vr.9
  solved goal nr. 7 (directly):
    Sgx_create_MC( <t.1, ~mrenclave.9>, ~mc_session.9 ) ▶₂ #vr.10
  solved goal nr. 2 (directly): !L12( platform_sec.4 ) ▶₂ #vr.3
  solved goal nr. 1 (directly):
    E_r_data_reply_ex( ra_r_key, index_req_x.4, sealed_e_return_x.5
    ) @ #E_r_data_reply_ex_x.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 1 (directly):
    PSE_sgx_increment_MC( MC_owner_policy, mcid.1, ptr_old2.4,
                          ptr_new2.5, valMC.6
    ) @ #j.8
  solved goal nr. 3 (directly):
    L22( t.1, ~mrsigner.7, ~mrenclave.7, ~mc_session.7 ) ▶₁ #vr.6
  solved goal nr. 7 (directly):
    PSE_CreateMC( MC_owner_policy, mcid.1, ptr.9, '1' ) @ #j.10
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~mc_session.7, ~ra_o_key.7, data_rcvd.7, oname_rcvd.7, mcid.7
    ) ▶₁ #vr.6
  solved goal nr. 5 (directly):
    Sgx_create_MC( <t.1, ~mrenclave.7>, ~mc_session.7 ) ▶₂ #vr.8
  solved goal nr. 8 (directly):
    PSE_CreateMC( MC_owner_policy, mcid.1, ptr.11, '1' ) @ #j.12
  solved goal nr. 14 (directly):
    E_r_data_reply_ex( ~ra_r_key.7, index_req_x.20,
                       sealed_e_return_x.21
    ) @ #E_r_data_reply_ex_x.22
  solved goal nr. 21 (directly): !L12( platform_sec.9 ) ▶₂ #vr.31
  simplified formula:
      "((last(#i.7)) ∨ (last(#i.7)) ∨ (#i.7 = #i.7))"
    to
      "⊤"
  solved goal nr. 3 (simplified):
     (last(#i.7))  ∥ (last(#i.7))  ∥ (#i.7 = #i.7)
  solved goal nr. 7 (directly): !L12( t.1 ) ▶₂ #vr.12
  solved goal nr. 15 (directly):
    Sgx_increment_MC( <platform_sec.7, mrenclave.7>, mcid.7,
                      ~mc_session.7
    ) ▶₀ #vr.18
  simplified formula:
      "((last(#j.8)) ∨ (last(#j.8)) ∨ (#j.8 = #j.8))"
    to
      "⊤"
  solved goal nr. 6 (simplified):
     (last(#j.8))  ∥ (last(#j.8))  ∥ (#j.8 = #j.8)
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, mrenclave.10>, mcid.10,
                           ~mc_session.10, valMC.10
    ) ▶₀ #vr.9
  solved goal nr. 14 (directly):
    DB_retrieve( p_id.17, index_req.31, sealed_e_return.23
    ) @ #db_retrieve.36
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~mc_session.10, ~ra_o_key.10, data_rcvd.10, oname_rcvd.10, mcid.10
    ) ▶₁ #vr.9
  solved goal nr. 2 (directly): !Indexes( index_req.3 ) ▶₀ #vr.2
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~mc_session.10, ~ra_o_key.10, data_rcvd.10, oname_rcvd.10, mcid.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !OMem( oname.7 ) ▶₂ #vr.6
  solved goal nr. 17 (directly):
    PSE_CreateMC( <platform.7, mrenclave.9>, mcid.12, ptr.43, '1'
    ) @ #j.44
  solved goal nr. 19 (directly):
    E_r_data_req( platform.12, mrsigner.15, mrenclave.14, p_id2.24,
                  ra_r_key.45, index_req.46, cipher_data_req.47, gcm_tag_data_req.48
    ) @ #E_r_data_req.50
  solved goal nr. 19 (directly):
    PSE_CreateMC( MC_owner_policy, ~mcid.18, ptr.24, '1' ) @ #j.25
  solved goal nr. 20 (directly):
    PSE_CreateMC( MC_owner_policy, ~mcid.18, ptr.26, '1' ) @ #j.27
  solved goal nr. 20 (directly):
    DB_retrieve( p_id2.24, index_req.46, sealed_e_return2.36
    ) @ #db_retrieve.51
  solved goal nr. 7 (directly):
    Sgx_create_MC( <t.1, ~mrenclave.10>, ~mc_session.10 ) ▶₂ #vr.11
  solved goal nr. 4 (directly): !OMem( oname.7 ) ▶₂ #vr.6
  solved goal nr. 21 (directly):
    E_r_data_resp( platform.12, mrsigner.15, mrenclave.14, p_id2.24,
                   ra_r_key.45, index_req.46, data2.8, sealed_e_return2.36,
                   cipher_data_resp.52, gcm_tag_data_resp.53
    ) @ #E_r_data_resp.54
  solved goal nr. 9 (directly): !L12( t.1 ) ▶₂ #vr.15
  solved goal nr. 22 (directly):
    RCHR_data_resp( ra_r_key.45, index_req.46, data2.8,
                    cipher_data_resp.52, gcm_tag_data_resp.53
    ) @ #rchr_data_resp.55
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 9 (directly): !L12( t.1 ) ▶₂ #vr.14
  solved goal nr. 4 (directly): !L12( platform_sec.7 ) ▶₂ #vr.6
  solved goal nr. 23 (directly):
    PSE_CreateMC( <platform.12, mrenclave.14>, mcid.17, ptr.56, '1'
    ) @ #j.57
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~mc_session.7, ~ra_o_key.7, data_rcvd.7, oname_rcvd.7, mcid.7
    ) ▶₁ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 24 (directly):
    PSE_CreateMC( <platform.12, mrenclave.14>, mcid.17, ptr.58, '1'
    ) @ #j.59
  solved goal nr. 15 (directly):
    Sgx_increment_MC( <platform_sec.7, mrenclave.7>, mcid.7,
                      ~mc_session.7
    ) ▶₀ #vr.18
  solved goal nr. 18 (directly): !L12( t.1 ) ▶₂ #vr.33
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~mc_session.7, ~ra_o_key.7, data_rcvd.7, oname_rcvd.7, mcid.7
    ) ▶₁ #vr.6
  solved goal nr. 15 (directly):
    E_r_data_resp( platform.7, mrsigner.10, mrenclave.9, p_id.17,
                   ra_r_key.30, index_req.31, data.3, sealed_e_return.23,
                   cipher_data_resp.37, gcm_tag_data_resp.38
    ) @ #E_r_data_resp.39
  solved goal nr. 15 (directly):
    Sgx_increment_MC( <platform_sec.10, mrenclave.10>, mcid.10,
                      ~mc_session.10
    ) ▶₀ #vr.21
  solved goal nr. 9 (directly):
    Sgx_increment_MC( <platform_sec.10, mrenclave.10>, mcid.10,
                      ~mc_session.10
    ) ▶₀ #vr.14
  solved goal nr. 13 (directly): !OMem( oname.20 ) ▶₂ #vr.19
  solved goal nr. 16 (directly):
    RCHR_data_resp( ra_r_key.30, index_req.31, data.3,
                    cipher_data_resp.37, gcm_tag_data_resp.38
    ) @ #rchr_data_resp.40
  solved goal nr. 15 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.24>,
                        ~mc_session.24, t.2, valMC.17
    ) ▶₀ #vr.23
  solved goal nr. 10 (directly):
    !L23( t.1, t.2, t.3, mcid.17, valMC.17 ) ▶₀ #vr.16
  solved goal nr. 17 (directly):
    PSE_CreateMC( <platform.7, mrenclave.9>, mcid.12, ptr.41, '1'
    ) @ #j.42
  solved goal nr. 14 (directly):
    Sgx_create_MC_done( <t.1, ~mrenclave.22>, ~mc_session.22, mcid.17,
                        valMC.17
    ) ▶₀ #vr.21
  solved goal nr. 16 (directly):
    L22( platform_sec.10, ~mrsigner.24, ~mrenclave.24, ~mc_session.24
    ) ▶₁ #vr.23
  solved goal nr. 15 (directly):
    Start_thread_e_upload( platform_sec.10, mrsigner.10, mrenclave.10,
                           ~p_id.10, mcid.10
    ) ▶₁ #vr.17
  solved goal nr. 21 (directly):
    Start_thread_e_upload( platform_sec.10, mrsigner.10, mrenclave.10,
                           ~p_id.10, mcid.10
    ) ▶₁ #vr.24
  solved goal nr. 15 (directly):
    L22( t.1, ~mrsigner.22, ~mrenclave.22, ~mc_session.22 ) ▶₁ #vr.21
  solved goal nr. 19 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.24>, ~mc_session.24
    ) ▶₂ #vr.28
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 17 (directly):
    Sgx_create_MC( <t.1, ~mrenclave.22>, ~mc_session.22 ) ▶₂ #vr.23
  solved goal nr. 22 (directly): RA_o_login( ~ra_o_key.10 ) ▶₂ #vr.24
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~mc_session.7, ~ra_o_key.7, data_rcvd.7, oname_rcvd.7, mcid.7
    ) ▶₁ #vr.6
  solved goal nr. 30 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.10, valMC.39
    ) ▶₀ #vr.38
  solved goal nr. 15 (directly):
    Sgx_increment_MC( <platform_sec.7, mrenclave.7>, mcid.7,
                      ~mc_session.7
    ) ▶₀ #vr.18
  solved goal nr. 21 (directly): !L12( platform_sec.10 ) ▶₂ #vr.32
  solved goal nr. 19 (directly): !L12( t.1 ) ▶₂ #vr.27
  solved goal nr. 32 (directly): !OMem( oname.42 ) ▶₂ #vr.41
  solved goal nr. 34 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.46>,
                        ~mc_session.46, mcid.10, valMC.39
    ) ▶₀ #vr.45
  solved goal nr. 35 (directly):
    L22( platform_sec.10, ~mrsigner.46, ~mrenclave.46, ~mc_session.46
    ) ▶₁ #vr.45
  solved goal nr. 21 (directly):
    Start_thread_e_upload( platform_sec.7, mrsigner.7, mrenclave.7,
                           ~p_id.7, mcid.7
    ) ▶₁ #vr.21
  solved goal nr. 21 (directly):
    Start_thread_e_upload( platform_sec.7, mrsigner.7, mrenclave.7,
                           ~p_id.7, mcid.7
    ) ▶₁ #vr.21
  solved goal nr. 18 (directly): !L12( platform_sec.5 ) ▶₂ #vr.27
  solved goal nr. 21 (directly):
    Start_thread_e_upload( platform_sec.7, mrsigner.7, mrenclave.7,
                           ~p_id.7, mcid.7
    ) ▶₁ #vr.21
  solved goal nr. 16 (directly): RA_o_login( ~ra_o_key.10 ) ▶₂ #vr.17
  solved goal nr. 22 (directly): RA_o_login( ~ra_o_key.7 ) ▶₂ #vr.21
  solved goal nr. 24 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.10, valMC.32
    ) ▶₀ #vr.31
  solved goal nr. 22 (directly): RA_o_login( ~ra_o_key.7 ) ▶₂ #vr.21
  solved goal nr. 30 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.7, valMC.36
    ) ▶₀ #vr.35
  solved goal nr. 30 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.7, valMC.36
    ) ▶₀ #vr.35
  solved goal nr. 26 (directly): !OMem( oname.35 ) ▶₂ #vr.34
  solved goal nr. 32 (directly): !OMem( oname.39 ) ▶₂ #vr.38
  solved goal nr. 28 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.39>,
                        ~mc_session.39, mcid.10, valMC.32
    ) ▶₀ #vr.38
  solved goal nr. 38 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.46>, ~mc_session.46
    ) ▶₂ #vr.50
  solved goal nr. 32 (directly): !OMem( oname.39 ) ▶₂ #vr.38
  solved goal nr. 34 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.43>,
                        ~mc_session.43, mcid.7, valMC.36
    ) ▶₀ #vr.42
  solved goal nr. 34 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.43>,
                        ~mc_session.43, mcid.7, valMC.36
    ) ▶₀ #vr.42
  solved goal nr. 29 (directly):
    L22( platform_sec.10, ~mrsigner.39, ~mrenclave.39, ~mc_session.39
    ) ▶₁ #vr.38
  solved goal nr. 15 (directly):
    Sgx_increment_MC( <platform_sec.7, mrenclave.7>, mcid.7,
                      ~mc_session.7
    ) ▶₀ #vr.18
  solved goal nr. 35 (directly):
    L22( platform_sec.7, ~mrsigner.43, ~mrenclave.43, ~mc_session.43
    ) ▶₁ #vr.42
  solved goal nr. 22 (directly): RA_o_login( ~ra_o_key.7 ) ▶₂ #vr.21
  solved goal nr. 35 (directly):
    L22( platform_sec.7, ~mrsigner.43, ~mrenclave.43, ~mc_session.43
    ) ▶₁ #vr.42
  solved goal nr. 38 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.43>, ~mc_session.43
    ) ▶₂ #vr.47
  solved goal nr. 40 (directly): !L12( platform_sec.10 ) ▶₂ #vr.54
  solved goal nr. 32 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.39>, ~mc_session.39
    ) ▶₂ #vr.43
  solved goal nr. 30 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.7, valMC.36
    ) ▶₀ #vr.35
  solved goal nr. 38 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.43>, ~mc_session.43
    ) ▶₂ #vr.47
  solved goal nr. 32 (directly): !OMem( oname.39 ) ▶₂ #vr.38
  solved goal nr. 40 (directly): !L12( platform_sec.7 ) ▶₂ #vr.51
  solved goal nr. 21 (directly):
    Start_thread_e_upload( platform_sec.7, mrsigner.7, mrenclave.7,
                           ~p_id.7, mcid.7
    ) ▶₁ #vr.21
  solved goal nr. 34 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.43>,
                        ~mc_session.43, mcid.7, valMC.36
    ) ▶₀ #vr.42
  solved goal nr. 34 (directly): !L12( platform_sec.10 ) ▶₂ #vr.47
  solved goal nr. 40 (directly): !L12( platform_sec.7 ) ▶₂ #vr.51
  solved goal nr. 22 (directly): RA_o_login( ~ra_o_key.7 ) ▶₂ #vr.21
  solved goal nr. 35 (directly):
    L22( platform_sec.7, ~mrsigner.43, ~mrenclave.43, ~mc_session.43
    ) ▶₁ #vr.42
  solved goal nr. 30 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.7, valMC.36
    ) ▶₀ #vr.35
  solved goal nr. 38 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.43>, ~mc_session.43
    ) ▶₂ #vr.47
  solved goal nr. 32 (directly): !OMem( oname.39 ) ▶₂ #vr.38
  solved goal nr. 34 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.43>,
                        ~mc_session.43, mcid.7, valMC.36
    ) ▶₀ #vr.42
  solved goal nr. 40 (directly): !L12( platform_sec.7 ) ▶₂ #vr.51
  solved goal nr. 35 (directly):
    L22( platform_sec.7, ~mrsigner.43, ~mrenclave.43, ~mc_session.43
    ) ▶₁ #vr.42
  solved goal nr. 38 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.43>, ~mc_session.43
    ) ▶₂ #vr.47
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, mrenclave.10>, mcid.10,
                           ~mc_session.10, valMC.10
    ) ▶₀ #vr.9
  solved goal nr. 40 (directly): !L12( platform_sec.7 ) ▶₂ #vr.51
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~mc_session.10, ~ra_o_key.10, data_rcvd.10, oname_rcvd.10, mcid.10
    ) ▶₁ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, mrenclave.10>, mcid.10,
                           ~mc_session.10, valMC.10
    ) ▶₀ #vr.9
  solved goal nr. 17 (directly):
    Sgx_increment_MC( <platform_sec.10, mrenclave.10>, mcid.10,
                      ~mc_session.10
    ) ▶₀ #vr.24
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~mc_session.7, ~ra_o_key.7, data_rcvd.7, oname_rcvd.7, mcid.7
    ) ▶₁ #vr.6
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~mc_session.10, ~ra_o_key.10, data_rcvd.10, oname_rcvd.10, mcid.10
    ) ▶₁ #vr.9
  solved goal nr. 17 (directly):
    Sgx_increment_MC( <platform_sec.7, mrenclave.7>, mcid.7,
                      ~mc_session.7
    ) ▶₀ #vr.21
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~mc_session.7, ~ra_o_key.7, data_rcvd.7, oname_rcvd.7, mcid.7
    ) ▶₁ #vr.6
  solved goal nr. 15 (directly):
    Sgx_increment_MC( <platform_sec.10, mrenclave.10>, mcid.10,
                      ~mc_session.10
    ) ▶₀ #vr.21
  solved goal nr. 23 (directly):
    Start_thread_e_upload( platform_sec.10, mrsigner.10, mrenclave.10,
                           ~p_id.10, mcid.10
    ) ▶₁ #vr.27
  solved goal nr. 17 (directly):
    Sgx_increment_MC( <platform_sec.7, mrenclave.7>, mcid.7,
                      ~mc_session.7
    ) ▶₀ #vr.21
  solved goal nr. 24 (directly): RA_o_login( ~ra_o_key.10 ) ▶₂ #vr.27
  solved goal nr. 32 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.10, valMC.42
    ) ▶₀ #vr.41
  solved goal nr. 23 (directly):
    Start_thread_e_upload( platform_sec.7, mrsigner.7, mrenclave.7,
                           ~p_id.7, mcid.7
    ) ▶₁ #vr.24
  solved goal nr. 21 (directly):
    Start_thread_e_upload( platform_sec.10, mrsigner.10, mrenclave.10,
                           ~p_id.10, mcid.10
    ) ▶₁ #vr.24
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 24 (directly): RA_o_login( ~ra_o_key.7 ) ▶₂ #vr.24
  solved goal nr. 22 (directly): RA_o_login( ~ra_o_key.10 ) ▶₂ #vr.24
  solved goal nr. 34 (directly): !OMem( oname.45 ) ▶₂ #vr.44
  solved goal nr. 23 (directly):
    Start_thread_e_upload( platform_sec.7, mrsigner.7, mrenclave.7,
                           ~p_id.7, mcid.7
    ) ▶₁ #vr.24
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~mc_session.7, ~ra_o_key.7, data_rcvd.7, oname_rcvd.7, mcid.7
    ) ▶₁ #vr.6
  solved goal nr. 32 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.7, valMC.39
    ) ▶₀ #vr.38
  solved goal nr. 30 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.10, valMC.39
    ) ▶₀ #vr.38
  solved goal nr. 36 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.49>,
                        ~mc_session.49, mcid.10, valMC.42
    ) ▶₀ #vr.48
  solved goal nr. 24 (directly): RA_o_login( ~ra_o_key.7 ) ▶₂ #vr.24
  solved goal nr. 17 (directly):
    Sgx_increment_MC( <platform_sec.7, mrenclave.7>, mcid.7,
                      ~mc_session.7
    ) ▶₀ #vr.21
  solved goal nr. 34 (directly): !OMem( oname.42 ) ▶₂ #vr.41
  solved goal nr. 32 (directly): !OMem( oname.42 ) ▶₂ #vr.41
  solved goal nr. 37 (directly):
    L22( platform_sec.10, ~mrsigner.49, ~mrenclave.49, ~mc_session.49
    ) ▶₁ #vr.48
  solved goal nr. 32 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.7, valMC.39
    ) ▶₀ #vr.38
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 36 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.46>,
                        ~mc_session.46, mcid.7, valMC.39
    ) ▶₀ #vr.45
  solved goal nr. 34 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.46>,
                        ~mc_session.46, mcid.10, valMC.39
    ) ▶₀ #vr.45
  solved goal nr. 40 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.49>, ~mc_session.49
    ) ▶₂ #vr.53
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~mc_session.7, ~ra_o_key.7, data_rcvd.7, oname_rcvd.7, mcid.7
    ) ▶₁ #vr.6
  solved goal nr. 34 (directly): !OMem( oname.42 ) ▶₂ #vr.41
  solved goal nr. 37 (directly):
    L22( platform_sec.7, ~mrsigner.46, ~mrenclave.46, ~mc_session.46
    ) ▶₁ #vr.45
  solved goal nr. 35 (directly):
    L22( platform_sec.10, ~mrsigner.46, ~mrenclave.46, ~mc_session.46
    ) ▶₁ #vr.45
  solved goal nr. 17 (directly):
    Sgx_increment_MC( <platform_sec.7, mrenclave.7>, mcid.7,
                      ~mc_session.7
    ) ▶₀ #vr.21
  solved goal nr. 23 (directly):
    Start_thread_e_upload( platform_sec.7, mrsigner.7, mrenclave.7,
                           ~p_id.7, mcid.7
    ) ▶₁ #vr.24
  solved goal nr. 36 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.46>,
                        ~mc_session.46, mcid.7, valMC.39
    ) ▶₀ #vr.45
  solved goal nr. 40 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.46>, ~mc_session.46
    ) ▶₂ #vr.50
  solved goal nr. 38 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.46>, ~mc_session.46
    ) ▶₂ #vr.50
  solved goal nr. 24 (directly): RA_o_login( ~ra_o_key.7 ) ▶₂ #vr.24
  solved goal nr. 37 (directly):
    L22( platform_sec.7, ~mrsigner.46, ~mrenclave.46, ~mc_session.46
    ) ▶₁ #vr.45
  solved goal nr. 42 (directly): !L12( platform_sec.10 ) ▶₂ #vr.57
  solved goal nr. 23 (directly):
    Start_thread_e_upload( platform_sec.7, mrsigner.7, mrenclave.7,
                           ~p_id.7, mcid.7
    ) ▶₁ #vr.24
  solved goal nr. 32 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.7, valMC.39
    ) ▶₀ #vr.38
  solved goal nr. 40 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.46>, ~mc_session.46
    ) ▶₂ #vr.50
  solved goal nr. 24 (directly): RA_o_login( ~ra_o_key.7 ) ▶₂ #vr.24
  solved goal nr. 34 (directly): !OMem( oname.42 ) ▶₂ #vr.41
  solved goal nr. 32 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.7, valMC.39
    ) ▶₀ #vr.38
  solved goal nr. 40 (directly): !L12( platform_sec.10 ) ▶₂ #vr.54
  solved goal nr. 42 (directly): !L12( platform_sec.7 ) ▶₂ #vr.54
  solved goal nr. 36 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.46>,
                        ~mc_session.46, mcid.7, valMC.39
    ) ▶₀ #vr.45
  solved goal nr. 34 (directly): !OMem( oname.42 ) ▶₂ #vr.41
  solved goal nr. 42 (directly): !L12( platform_sec.7 ) ▶₂ #vr.54
  solved goal nr. 37 (directly):
    L22( platform_sec.7, ~mrsigner.46, ~mrenclave.46, ~mc_session.46
    ) ▶₁ #vr.45
  solved goal nr. 36 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.46>,
                        ~mc_session.46, mcid.7, valMC.39
    ) ▶₀ #vr.45
  solved goal nr. 40 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.46>, ~mc_session.46
    ) ▶₂ #vr.50
  solved goal nr. 37 (directly):
    L22( platform_sec.7, ~mrsigner.46, ~mrenclave.46, ~mc_session.46
    ) ▶₁ #vr.45
  solved goal nr. 40 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.46>, ~mc_session.46
    ) ▶₂ #vr.50
  solved goal nr. 42 (directly): !L12( platform_sec.7 ) ▶₂ #vr.54
  solved goal nr. 42 (directly): !L12( platform_sec.7 ) ▶₂ #vr.54
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, mrenclave.10>, mcid.10,
                           ~mc_session.10, valMC.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, mrenclave.10>, mcid.10,
                           ~mc_session.10, valMC.10
    ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 5 (directly):
    EPC_E_o( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~mc_session.10, ~ra_o_key.10, data_rcvd.10, oname_rcvd.10, mcid.10
    ) ▶₁ #vr.9
  solved goal nr. 17 (directly):
    Sgx_increment_MC( <platform_sec.10, mrenclave.10>, mcid.10,
                      ~mc_session.10
    ) ▶₀ #vr.24
  solved goal nr. 4 (directly): !Indexes( index_req.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 4 (directly): !Indexes( index_req.7 ) ▶₀ #vr.6
  solved goal nr. 23 (directly):
    Start_thread_e_upload( platform_sec.10, mrsigner.10, mrenclave.10,
                           ~p_id.10, mcid.10
    ) ▶₁ #vr.27
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.7, mrenclave.7>, mcid.7,
                           ~mc_session.7, valMC.7
    ) ▶₀ #vr.6
  solved goal nr. 24 (directly): RA_o_login( ~ra_o_key.10 ) ▶₂ #vr.27
  solved goal nr. 4 (directly): !Indexes( index_req.7 ) ▶₀ #vr.6
  solved goal nr. 32 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.10, valMC.42
    ) ▶₀ #vr.41
  solved goal nr. 7 (directly): RA_r_login( ~ra_r_key.10 ) ▶₁ #vr.9
  solved goal nr. 4 (directly): !Indexes( index_req.7 ) ▶₀ #vr.6
  solved goal nr. 34 (directly): !OMem( oname.45 ) ▶₂ #vr.44
  solved goal nr. 7 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.6
  solved goal nr. 8 (directly):
    Start_thread_e_data_req( platform_sec.10, mrsigner.10,
                             mrenclave.10, ~p_id.10
    ) ▶₂ #vr.9
  solved goal nr. 36 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.49>,
                        ~mc_session.49, mcid.10, valMC.42
    ) ▶₀ #vr.48
  solved goal nr. 8 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.6
  solved goal nr. 4 (directly): !Indexes( index_req.7 ) ▶₀ #vr.6
  solved goal nr. 4 (directly): !Indexes( index_req.7 ) ▶₀ #vr.6
  solved goal nr. 12 (directly): !Indexes( index_req.19 ) ▶₀ #vr.18
  solved goal nr. 12 (directly): !Indexes( index_req.16 ) ▶₀ #vr.15
  solved goal nr. 37 (directly):
    L22( platform_sec.10, ~mrsigner.49, ~mrenclave.49, ~mc_session.49
    ) ▶₁ #vr.48
  solved goal nr. 14 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.19, valMC.19
    ) ▶₀ #vr.18
  solved goal nr. 14 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.22, valMC.22
    ) ▶₀ #vr.21
  solved goal nr. 17 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.25>,
                        ~mc_session.25, mcid.19, valMC.19
    ) ▶₀ #vr.24
  solved goal nr. 17 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.28>,
                        ~mc_session.28, mcid.22, valMC.22
    ) ▶₀ #vr.27
  solved goal nr. 40 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.49>, ~mc_session.49
    ) ▶₂ #vr.53
  solved goal nr. 7 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.6
  solved goal nr. 18 (directly):
    L22( platform_sec.7, ~mrsigner.25, ~mrenclave.25, ~mc_session.25
    ) ▶₁ #vr.24
  solved goal nr. 18 (directly):
    L22( platform_sec.10, ~mrsigner.28, ~mrenclave.28, ~mc_session.28
    ) ▶₁ #vr.27
  solved goal nr. 20 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.25>, ~mc_session.25
    ) ▶₂ #vr.26
  solved goal nr. 8 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.6
  solved goal nr. 20 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.28>, ~mc_session.28
    ) ▶₂ #vr.29
  solved goal nr. 7 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.6
  solved goal nr. 7 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.6
  solved goal nr. 12 (directly): !Indexes( index_req.16 ) ▶₀ #vr.15
  solved goal nr. 42 (directly): !L12( platform_sec.10 ) ▶₂ #vr.57
  solved goal nr. 8 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.6
  solved goal nr. 22 (directly): !L12( platform_sec.7 ) ▶₂ #vr.30
  solved goal nr. 8 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.6
  solved goal nr. 14 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.19, valMC.19
    ) ▶₀ #vr.18
  solved goal nr. 12 (directly): !Indexes( index_req.16 ) ▶₀ #vr.15
  solved goal nr. 22 (directly): !L12( platform_sec.10 ) ▶₂ #vr.33
  solved goal nr. 12 (directly): !Indexes( index_req.16 ) ▶₀ #vr.15
  solved goal nr. 17 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.25>,
                        ~mc_session.25, mcid.19, valMC.19
    ) ▶₀ #vr.24
  solved goal nr. 14 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.19, valMC.19
    ) ▶₀ #vr.18
  solved goal nr. 14 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.19, valMC.19
    ) ▶₀ #vr.18
  solved goal nr. 18 (directly):
    L22( platform_sec.7, ~mrsigner.25, ~mrenclave.25, ~mc_session.25
    ) ▶₁ #vr.24
  solved goal nr. 17 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.25>,
                        ~mc_session.25, mcid.19, valMC.19
    ) ▶₀ #vr.24
  solved goal nr. 17 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.25>,
                        ~mc_session.25, mcid.19, valMC.19
    ) ▶₀ #vr.24
  solved goal nr. 18 (directly):
    L22( platform_sec.7, ~mrsigner.25, ~mrenclave.25, ~mc_session.25
    ) ▶₁ #vr.24
  solved goal nr. 18 (directly):
    L22( platform_sec.7, ~mrsigner.25, ~mrenclave.25, ~mc_session.25
    ) ▶₁ #vr.24
  solved goal nr. 20 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.25>, ~mc_session.25
    ) ▶₂ #vr.26
  solved goal nr. 14 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.19, valMC.19
    ) ▶₀ #vr.18
  solved goal nr. 20 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.25>, ~mc_session.25
    ) ▶₂ #vr.26
  solved goal nr. 18 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.24>,
                        ~mc_session.24, mcid.19, valMC.19
    ) ▶₀ #vr.23
  solved goal nr. 19 (directly):
    L22( platform_sec.7, ~mrsigner.24, ~mrenclave.24, ~mc_session.24
    ) ▶₁ #vr.23
  solved goal nr. 22 (directly): !L12( platform_sec.7 ) ▶₂ #vr.30
  solved goal nr. 20 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.25>, ~mc_session.25
    ) ▶₂ #vr.26
  solved goal nr. 21 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.24>, ~mc_session.24
    ) ▶₂ #vr.25
  solved goal nr. 22 (directly): !L12( platform_sec.7 ) ▶₂ #vr.30
  solved goal nr. 22 (directly): !L12( platform_sec.7 ) ▶₂ #vr.30
  solved goal nr. 23 (directly): !L12( platform_sec.7 ) ▶₂ #vr.29
  solved goal nr. 14 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.19, valMC.19
    ) ▶₀ #vr.18
  solved goal nr. 14 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.22, valMC.22
    ) ▶₀ #vr.21
  solved goal nr. 4 (directly):
    Sgx_increment_MC_done( <platform_sec.10, mrenclave.10>, mcid.10,
                           ~mc_session.10, valMC.10
    ) ▶₀ #vr.9
  solved goal nr. 18 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.24>,
                        ~mc_session.24, mcid.19, valMC.19
    ) ▶₀ #vr.23
  solved goal nr. 18 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.27>,
                        ~mc_session.27, mcid.22, valMC.22
    ) ▶₀ #vr.26
  solved goal nr. 19 (directly):
    L22( platform_sec.7, ~mrsigner.24, ~mrenclave.24, ~mc_session.24
    ) ▶₁ #vr.23
  solved goal nr. 21 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.24>, ~mc_session.24
    ) ▶₂ #vr.25
  solved goal nr. 14 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.19, valMC.19
    ) ▶₀ #vr.18
  solved goal nr. 18 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.24>,
                        ~mc_session.24, mcid.19, valMC.19
    ) ▶₀ #vr.23
  solved goal nr. 19 (directly):
    L22( platform_sec.10, ~mrsigner.27, ~mrenclave.27, ~mc_session.27
    ) ▶₁ #vr.26
  solved goal nr. 23 (directly): !L12( platform_sec.7 ) ▶₂ #vr.29
  solved goal nr. 14 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.19, valMC.19
    ) ▶₀ #vr.18
  solved goal nr. 19 (directly):
    L22( platform_sec.7, ~mrsigner.24, ~mrenclave.24, ~mc_session.24
    ) ▶₁ #vr.23
  solved goal nr. 4 (directly): !Indexes( index_req.10 ) ▶₀ #vr.9
  solved goal nr. 18 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.24>,
                        ~mc_session.24, mcid.19, valMC.19
    ) ▶₀ #vr.23
  solved goal nr. 21 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.24>, ~mc_session.24
    ) ▶₂ #vr.25
  solved goal nr. 21 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.27>, ~mc_session.27
    ) ▶₂ #vr.28
  solved goal nr. 7 (directly):
    !DB_mem( index_req.7, sealed_cipher.7 ) ▶₁ #vr.6
  solved goal nr. 19 (directly):
    L22( platform_sec.7, ~mrsigner.24, ~mrenclave.24, ~mc_session.24
    ) ▶₁ #vr.23
  solved goal nr. 23 (directly): !L12( platform_sec.7 ) ▶₂ #vr.29
  solved goal nr. 21 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.24>, ~mc_session.24
    ) ▶₂ #vr.25
  solved goal nr. 4 (directly): !Indexes( index_req.10 ) ▶₀ #vr.9
  solved goal nr. 4 (directly): !Indexes( index_req.10 ) ▶₀ #vr.9
  solved goal nr. 23 (directly): !L12( platform_sec.10 ) ▶₂ #vr.32
  solved goal nr. 23 (directly): !L12( platform_sec.7 ) ▶₂ #vr.29
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~ra_r_key.7, index_req.7
    ) ▶₁ #vr.6
  solved goal nr. 7 (directly):
    !DB_mem( index_req.7, sealed_cipher.7 ) ▶₁ #vr.6
  solved goal nr. 22 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.25
  solved goal nr. 7 (directly): RA_r_login( ~ra_r_key.10 ) ▶₁ #vr.9
  solved goal nr. 23 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.25
  solved goal nr. 8 (directly):
    Start_thread_e_data_req( platform_sec.10, mrsigner.10,
                             mrenclave.10, ~p_id.10
    ) ▶₂ #vr.9
  solved goal nr. 7 (directly):
    !DB_mem( index_req.7, sealed_cipher.7 ) ▶₁ #vr.6
  solved goal nr. 25 (directly): !Indexes( index_req.32 ) ▶₀ #vr.31
  solved goal nr. 12 (directly): !Indexes( index_req.19 ) ▶₀ #vr.18
  solved goal nr. 14 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.22, valMC.22
    ) ▶₀ #vr.21
  solved goal nr. 27 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.35, valMC.35
    ) ▶₀ #vr.34
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~ra_r_key.7, index_req.7
    ) ▶₁ #vr.6
  solved goal nr. 7 (directly):
    !DB_mem( index_req.10, sealed_cipher.10 ) ▶₁ #vr.9
  solved goal nr. 30 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.41>,
                        ~mc_session.41, mcid.35, valMC.35
    ) ▶₀ #vr.40
  solved goal nr. 22 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.25
  solved goal nr. 17 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.28>,
                        ~mc_session.28, mcid.22, valMC.22
    ) ▶₀ #vr.27
  solved goal nr. 31 (directly):
    L22( platform_sec.7, ~mrsigner.41, ~mrenclave.41, ~mc_session.41
    ) ▶₁ #vr.40
  solved goal nr. 18 (directly):
    L22( platform_sec.10, ~mrsigner.28, ~mrenclave.28, ~mc_session.28
    ) ▶₁ #vr.27
  solved goal nr. 23 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.25
  solved goal nr. 33 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.41>, ~mc_session.41
    ) ▶₂ #vr.42
  solved goal nr. 20 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.28>, ~mc_session.28
    ) ▶₂ #vr.29
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~ra_r_key.7, index_req.7
    ) ▶₁ #vr.6
  solved goal nr. 7 (directly):
    !DB_mem( index_req.7, sealed_cipher.7 ) ▶₁ #vr.6
  solved goal nr. 25 (directly): !Indexes( index_req.32 ) ▶₀ #vr.31
  solved goal nr. 22 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.25
  solved goal nr. 27 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.35, valMC.35
    ) ▶₀ #vr.34
  solved goal nr. 22 (directly): !L12( platform_sec.10 ) ▶₂ #vr.33
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~ra_r_key.10, index_req.10
    ) ▶₁ #vr.9
  solved goal nr. 35 (directly): !L12( platform_sec.7 ) ▶₂ #vr.46
  solved goal nr. 30 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.41>,
                        ~mc_session.41, mcid.35, valMC.35
    ) ▶₀ #vr.40
  solved goal nr. 23 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.25
  solved goal nr. 22 (directly): RA_r_login( ~ra_r_key.10 ) ▶₁ #vr.28
  solved goal nr. 31 (directly):
    L22( platform_sec.7, ~mrsigner.41, ~mrenclave.41, ~mc_session.41
    ) ▶₁ #vr.40
  solved goal nr. 33 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.41>, ~mc_session.41
    ) ▶₂ #vr.42
  solved goal nr. 25 (directly): !Indexes( index_req.32 ) ▶₀ #vr.31
  solved goal nr. 23 (directly):
    Start_thread_e_data_req( platform_sec.10, mrsigner.10,
                             mrenclave.10, ~p_id.10
    ) ▶₂ #vr.28
  solved goal nr. 27 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.35, valMC.35
    ) ▶₀ #vr.34
  solved goal nr. 25 (directly): !Indexes( index_req.35 ) ▶₀ #vr.34
  solved goal nr. 35 (directly): !L12( platform_sec.7 ) ▶₂ #vr.46
  solved goal nr. 30 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.41>,
                        ~mc_session.41, mcid.35, valMC.35
    ) ▶₀ #vr.40
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~ra_r_key.7, index_req.7
    ) ▶₁ #vr.6
  solved goal nr. 27 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.38, valMC.38
    ) ▶₀ #vr.37
  solved goal nr. 14 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.22, valMC.22
    ) ▶₀ #vr.21
  solved goal nr. 31 (directly):
    L22( platform_sec.7, ~mrsigner.41, ~mrenclave.41, ~mc_session.41
    ) ▶₁ #vr.40
  solved goal nr. 27 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.35, valMC.35
    ) ▶₀ #vr.34
  solved goal nr. 30 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.44>,
                        ~mc_session.44, mcid.38, valMC.38
    ) ▶₀ #vr.43
  solved goal nr. 18 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.27>,
                        ~mc_session.27, mcid.22, valMC.22
    ) ▶₀ #vr.26
  solved goal nr. 19 (directly):
    L22( platform_sec.10, ~mrsigner.27, ~mrenclave.27, ~mc_session.27
    ) ▶₁ #vr.26
  solved goal nr. 33 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.41>, ~mc_session.41
    ) ▶₂ #vr.42
  solved goal nr. 31 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.40>,
                        ~mc_session.40, mcid.35, valMC.35
    ) ▶₀ #vr.39
  solved goal nr. 22 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.25
  solved goal nr. 31 (directly):
    L22( platform_sec.10, ~mrsigner.44, ~mrenclave.44, ~mc_session.44
    ) ▶₁ #vr.43
  solved goal nr. 21 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.27>, ~mc_session.27
    ) ▶₂ #vr.28
  solved goal nr. 32 (directly):
    L22( platform_sec.7, ~mrsigner.40, ~mrenclave.40, ~mc_session.40
    ) ▶₁ #vr.39
  solved goal nr. 27 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.35, valMC.35
    ) ▶₀ #vr.34
  solved goal nr. 33 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.44>, ~mc_session.44
    ) ▶₂ #vr.45
  solved goal nr. 23 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.25
  solved goal nr. 34 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.40>, ~mc_session.40
    ) ▶₂ #vr.41
  solved goal nr. 31 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.40>,
                        ~mc_session.40, mcid.35, valMC.35
    ) ▶₀ #vr.39
  solved goal nr. 35 (directly): !L12( platform_sec.7 ) ▶₂ #vr.46
  solved goal nr. 25 (directly): !Indexes( index_req.32 ) ▶₀ #vr.31
  solved goal nr. 23 (directly): !L12( platform_sec.10 ) ▶₂ #vr.32
  solved goal nr. 32 (directly):
    L22( platform_sec.7, ~mrsigner.40, ~mrenclave.40, ~mc_session.40
    ) ▶₁ #vr.39
  solved goal nr. 35 (directly): !L12( platform_sec.10 ) ▶₂ #vr.49
  solved goal nr. 27 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.35, valMC.35
    ) ▶₀ #vr.34
  solved goal nr. 34 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.40>, ~mc_session.40
    ) ▶₂ #vr.41
  solved goal nr. 36 (directly): !L12( platform_sec.7 ) ▶₂ #vr.45
  solved goal nr. 30 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.41>,
                        ~mc_session.41, mcid.35, valMC.35
    ) ▶₀ #vr.40
  solved goal nr. 31 (directly):
    L22( platform_sec.7, ~mrsigner.41, ~mrenclave.41, ~mc_session.41
    ) ▶₁ #vr.40
  solved goal nr. 36 (directly): !L12( platform_sec.7 ) ▶₂ #vr.45
  solved goal nr. 33 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.41>, ~mc_session.41
    ) ▶₂ #vr.42
  solved goal nr. 27 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.35, valMC.35
    ) ▶₀ #vr.34
  solved goal nr. 31 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.40>,
                        ~mc_session.40, mcid.35, valMC.35
    ) ▶₀ #vr.39
  solved goal nr. 7 (directly):
    !DB_mem( index_req.10, sealed_cipher.10 ) ▶₁ #vr.9
  solved goal nr. 35 (directly): !L12( platform_sec.7 ) ▶₂ #vr.46
  solved goal nr. 27 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.38, valMC.38
    ) ▶₀ #vr.37
  solved goal nr. 32 (directly):
    L22( platform_sec.7, ~mrsigner.40, ~mrenclave.40, ~mc_session.40
    ) ▶₁ #vr.39
  solved goal nr. 34 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.40>, ~mc_session.40
    ) ▶₂ #vr.41
  solved goal nr. 31 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.43>,
                        ~mc_session.43, mcid.38, valMC.38
    ) ▶₀ #vr.42
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.7, mrsigner.7, mrenclave.7, ~p_id.7,
             ~ra_r_key.7, index_req.7
    ) ▶₁ #vr.6
  solved goal nr. 32 (directly):
    L22( platform_sec.10, ~mrsigner.43, ~mrenclave.43, ~mc_session.43
    ) ▶₁ #vr.42
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~ra_r_key.10, index_req.10
    ) ▶₁ #vr.9
  solved goal nr. 36 (directly): !L12( platform_sec.7 ) ▶₂ #vr.45
  solved goal nr. 34 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.43>, ~mc_session.43
    ) ▶₂ #vr.44
  solved goal nr. 20 (directly): RA_r_login( ~ra_r_key.7 ) ▶₁ #vr.22
  solved goal nr. 16 (directly): RA_r_login( ~ra_r_key.10 ) ▶₁ #vr.21
  solved goal nr. 21 (directly):
    Start_thread_e_data_req( platform_sec.7, mrsigner.7, mrenclave.7,
                             ~p_id.7
    ) ▶₂ #vr.22
  solved goal nr. 17 (directly):
    Start_thread_e_data_req( platform_sec.10, mrsigner.10,
                             mrenclave.10, ~p_id.10
    ) ▶₂ #vr.21
  solved goal nr. 36 (directly): !L12( platform_sec.10 ) ▶₂ #vr.48
  solved goal nr. 19 (directly): !Indexes( index_req.28 ) ▶₀ #vr.27
  solved goal nr. 23 (directly): !Indexes( index_req.29 ) ▶₀ #vr.28
  solved goal nr. 27 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.35, valMC.35
    ) ▶₀ #vr.34
  solved goal nr. 21 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.31, valMC.31
    ) ▶₀ #vr.30
  solved goal nr. 25 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.32, valMC.32
    ) ▶₀ #vr.31
  solved goal nr. 31 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.40>,
                        ~mc_session.40, mcid.35, valMC.35
    ) ▶₀ #vr.39
  solved goal nr. 24 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.37>,
                        ~mc_session.37, mcid.31, valMC.31
    ) ▶₀ #vr.36
  solved goal nr. 28 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.38>,
                        ~mc_session.38, mcid.32, valMC.32
    ) ▶₀ #vr.37
  solved goal nr. 32 (directly):
    L22( platform_sec.7, ~mrsigner.40, ~mrenclave.40, ~mc_session.40
    ) ▶₁ #vr.39
  solved goal nr. 25 (directly):
    L22( platform_sec.10, ~mrsigner.37, ~mrenclave.37, ~mc_session.37
    ) ▶₁ #vr.36
  solved goal nr. 29 (directly):
    L22( platform_sec.7, ~mrsigner.38, ~mrenclave.38, ~mc_session.38
    ) ▶₁ #vr.37
  solved goal nr. 31 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.38>, ~mc_session.38
    ) ▶₂ #vr.39
  solved goal nr. 34 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.40>, ~mc_session.40
    ) ▶₂ #vr.41
  solved goal nr. 27 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.37>, ~mc_session.37
    ) ▶₂ #vr.38
  solved goal nr. 33 (directly): !L12( platform_sec.7 ) ▶₂ #vr.43
  solved goal nr. 29 (directly): !L12( platform_sec.10 ) ▶₂ #vr.42
  solved goal nr. 36 (directly): !L12( platform_sec.7 ) ▶₂ #vr.45
  solved goal nr. 25 (directly):
    !L23( platform_sec.7, mrsigner.7, mrenclave.7, mcid.32, valMC.32
    ) ▶₀ #vr.31
  solved goal nr. 29 (directly):
    Sgx_create_MC_done( <platform_sec.7, ~mrenclave.37>,
                        ~mc_session.37, mcid.32, valMC.32
    ) ▶₀ #vr.36
  solved goal nr. 21 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.31, valMC.31
    ) ▶₀ #vr.30
  solved goal nr. 30 (directly):
    L22( platform_sec.7, ~mrsigner.37, ~mrenclave.37, ~mc_session.37
    ) ▶₁ #vr.36
  solved goal nr. 25 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.36>,
                        ~mc_session.36, mcid.31, valMC.31
    ) ▶₀ #vr.35
  solved goal nr. 32 (directly):
    Sgx_create_MC( <platform_sec.7, ~mrenclave.37>, ~mc_session.37
    ) ▶₂ #vr.38
  solved goal nr. 26 (directly):
    L22( platform_sec.10, ~mrsigner.36, ~mrenclave.36, ~mc_session.36
    ) ▶₁ #vr.35
  solved goal nr. 34 (directly): !L12( platform_sec.7 ) ▶₂ #vr.42
  solved goal nr. 28 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.36>, ~mc_session.36
    ) ▶₂ #vr.37
  solved goal nr. 30 (directly): !L12( platform_sec.10 ) ▶₂ #vr.41
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~ra_r_key.10, index_req.10
    ) ▶₁ #vr.9
  solved goal nr. 22 (directly): RA_r_login( ~ra_r_key.10 ) ▶₁ #vr.28
  solved goal nr. 23 (directly):
    Start_thread_e_data_req( platform_sec.10, mrsigner.10,
                             mrenclave.10, ~p_id.10
    ) ▶₂ #vr.28
  solved goal nr. 25 (directly): !Indexes( index_req.35 ) ▶₀ #vr.34
  solved goal nr. 27 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.38, valMC.38
    ) ▶₀ #vr.37
  solved goal nr. 30 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.44>,
                        ~mc_session.44, mcid.38, valMC.38
    ) ▶₀ #vr.43
  solved goal nr. 31 (directly):
    L22( platform_sec.10, ~mrsigner.44, ~mrenclave.44, ~mc_session.44
    ) ▶₁ #vr.43
  solved goal nr. 33 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.44>, ~mc_session.44
    ) ▶₂ #vr.45
  solved goal nr. 35 (directly): !L12( platform_sec.10 ) ▶₂ #vr.49
  solved goal nr. 27 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.38, valMC.38
    ) ▶₀ #vr.37
  solved goal nr. 31 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.43>,
                        ~mc_session.43, mcid.38, valMC.38
    ) ▶₀ #vr.42
  solved goal nr. 32 (directly):
    L22( platform_sec.10, ~mrsigner.43, ~mrenclave.43, ~mc_session.43
    ) ▶₁ #vr.42
  solved goal nr. 34 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.43>, ~mc_session.43
    ) ▶₂ #vr.44
  solved goal nr. 36 (directly): !L12( platform_sec.10 ) ▶₂ #vr.48
  solved goal nr. 7 (directly):
    EPC_E_r( platform_sec.10, mrsigner.10, mrenclave.10, ~p_id.10,
             ~ra_r_key.10, index_req.10
    ) ▶₁ #vr.9
  solved goal nr. 16 (directly): RA_r_login( ~ra_r_key.10 ) ▶₁ #vr.21
  solved goal nr. 17 (directly):
    Start_thread_e_data_req( platform_sec.10, mrsigner.10,
                             mrenclave.10, ~p_id.10
    ) ▶₂ #vr.21
  solved goal nr. 19 (directly): !Indexes( index_req.28 ) ▶₀ #vr.27
  solved goal nr. 21 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.31, valMC.31
    ) ▶₀ #vr.30
  solved goal nr. 24 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.37>,
                        ~mc_session.37, mcid.31, valMC.31
    ) ▶₀ #vr.36
  solved goal nr. 25 (directly):
    L22( platform_sec.10, ~mrsigner.37, ~mrenclave.37, ~mc_session.37
    ) ▶₁ #vr.36
  solved goal nr. 27 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.37>, ~mc_session.37
    ) ▶₂ #vr.38
  solved goal nr. 29 (directly): !L12( platform_sec.10 ) ▶₂ #vr.42
  solved goal nr. 21 (directly):
    !L23( platform_sec.10, mrsigner.10, mrenclave.10, mcid.31, valMC.31
    ) ▶₀ #vr.30
  solved goal nr. 25 (directly):
    Sgx_create_MC_done( <platform_sec.10, ~mrenclave.36>,
                        ~mc_session.36, mcid.31, valMC.31
    ) ▶₀ #vr.35
  solved goal nr. 26 (directly):
    L22( platform_sec.10, ~mrsigner.36, ~mrenclave.36, ~mc_session.36
    ) ▶₁ #vr.35
  solved goal nr. 28 (directly):
    Sgx_create_MC( <platform_sec.10, ~mrenclave.36>, ~mc_session.36
    ) ▶₂ #vr.37
  solved goal nr. 30 (directly): !L12( platform_sec.10 ) ▶₂ #vr.41
  solved goal nr. 0 (directly):
     (∃ x m #i.
       (AUTO_IN_1_1_E_o_decrypt( m, x ) @ #i)
      ∧
       (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
       (∀ #j. (AUTO_OUT_0_1_DO_upload( m ) @ #j) ⇒ ¬(#j < #i)))  ∥
     (∃ x m #i.
       (AUTO_IN_2_1_E_o_decrypt( m, x ) @ #i)
      ∧
       (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
       (∀ #j. (AUTO_OUT_0_1_DO_upload( m ) @ #j) ⇒ ¬(#j < #i)))  ∥
     (∃ x m #i.
       (AUTO_IN_3_1_E_r_data_req( m, x ) @ #i)
      ∧
       (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
       (∀ #j. (AUTO_OUT_0_1_RCHR_data_req( m ) @ #j) ⇒ ¬(#j < #i)))  ∥
     (∃ x m #i.
       (AUTO_IN_5_1_E_r_data_resp( m, x ) @ #i)
      ∧
       (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
       (∀ #j. (AUTO_OUT_0_1_E_o_upload( m ) @ #j) ⇒ ¬(#j < #i)))
  solved goal nr. 1 (directly):
    AUTO_IN_1_1_E_o_decrypt( m.1, x ) @ #i.2
  solved goal nr. 1 (directly):
    AUTO_IN_2_1_E_o_decrypt( m.1, x ) @ #i.2
  solved goal nr. 1 (directly):
    AUTO_IN_3_1_E_r_data_req( m.1, x ) @ #i.2
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_rcvd.10 ) @ #j) ∧ #j < #vr.24)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.10>,
                                     ~ra_o_key.10)
        ) @ #j)
      ∧
       #j < #vr.24)
  solved goal nr. 1 (directly):
    AUTO_IN_5_1_E_r_data_resp( m.1, x ) @ #i.2
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( oname_rcvd.10 ) @ #j) ∧ #j < #vr.24)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.10>,
                                     ~ra_o_key.10)
        ) @ #j)
      ∧
       #j < #vr.24)
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, data_rcvd.10
                                 >,
                                 ~ra_o_key.10)
    ) @ #j.71
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_rcvd.7 ) @ #j) ∧ #j < #vr.21)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.21)
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_rcvd.7 ) @ #j) ∧ #j < #vr.21)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.21)
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( oname_rcvd.7 ) @ #j) ∧ #j < #vr.21)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.21)
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.68
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( oname_rcvd.7 ) @ #j) ∧ #j < #vr.21)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.21)
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, data_rcvd.10
                                 >,
                                 ~ra_o_key.10)
    ) @ #j.70
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.68
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.67
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.67
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_rcvd.10 ) @ #j) ∧ #j < #vr.27)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.10>,
                                     ~ra_o_key.10)
        ) @ #j)
      ∧
       #j < #vr.27)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, data_rcvd.10
                                 >,
                                 ~ra_o_key.10)
    ) @ #j.70
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_rcvd.7 ) @ #j) ∧ #j < #vr.24)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.24)
  solved goal nr. 26 (directly):
     (∃ #j. (!KU( index_req.10 ) @ #j) ∧ #j < #vr.9)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                         ~ra_r_key.10)
        ) @ #j)
      ∧
       #j < #vr.9)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.67
  solved goal nr. 8 (directly):
     (last(#i))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', x>, ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  solved goal nr. 8 (directly):
     (last(#i))  ∥
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, x>, ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  solved goal nr. 7 (directly):
     (last(#i))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, x, index_req>,
                                      h(<platform_sec, mrsigner, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  solved goal nr. 27 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                     ~ra_r_key.10)
    ) @ #j.70
  simplified formula:
      "((last(#i)) ∨
        (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, x>, ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #i)))"
    to
      "⊤"
  simplified formula:
      "((#last.4 < #j.3) ∨ (#j.3 < #last.4))"
    to
      "#j.3 < #last.4"
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_rcvd.7 ) @ #j) ∧ #j < #vr.24)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.24)
  solved goal nr. 10 (simplified):
     (#last.4 < #j.3)  ∥ (#j.3 < #last.4)
  solved goal nr. 9 (simplified):
     (last(#i))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, x>, ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 8 (directly):
     (last(#i))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', x, data_rcvd>, ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  simplified formula:
      "((#last.4 < #j.3) ∨ (#j.3 < #last.4))"
    to
      "#j.3 < #last.4"
  solved goal nr. 11 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  solved goal nr. 9 (simplified):
     (#last.4 < #j.3)  ∥ (#j.3 < #last.4)
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 10 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  simplified formula:
      "((#last.4 < #j.3) ∨ (#j.3 < #last.4))"
    to
      "#j.3 < #last.4"
  solved goal nr. 11 (simplified):
     (#last.4 < #j.3)  ∥ (#j.3 < #last.4)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.67
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_rcvd.10 ) @ #j) ∧ #j < #vr.24)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.10>,
                                     ~ra_o_key.10)
        ) @ #j)
      ∧
       #j < #vr.24)
  simplified formula:
      "((last(#i)) ∨
        (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', x, data_rcvd>, ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #i)))"
    to
      "⊤"
  solved goal nr. 27 (directly):
     (∃ #j. (!KU( index_req.10 ) @ #j) ∧ #j < #vr.9)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                         ~ra_r_key.10)
        ) @ #j)
      ∧
       #j < #vr.9)
  solved goal nr. 9 (simplified):
     (last(#i))  ∥
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', x, data_rcvd>, ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  solved goal nr. 26 (directly):
     (∃ #j. (!KU( index_req.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                         ~ra_r_key.7)
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 28 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                     ~ra_r_key.10)
    ) @ #j.70
  solved goal nr. 27 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                     ~ra_r_key.7)
    ) @ #j.67
  simplified formula:
      "((#last.4 < #j.3) ∨ (#j.3 < #last.4))"
    to
      "#j.3 < #last.4"
  solved goal nr. 11 (simplified):
     (#last.4 < #j.3)  ∥ (#j.3 < #last.4)
  solved goal nr. 10 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, x>, ~ra_o_key)
    ) @ #j.3
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 12 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  solved goal nr. 26 (directly):
     (∃ #j. (!KU( index_req.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                         ~ra_r_key.7)
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 9 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', x>, ~ra_r_key)
    ) @ #j.3
  solved goal nr. 27 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                     ~ra_r_key.7)
    ) @ #j.67
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_rcvd.7 ) @ #j) ∧ #j < #vr.21)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.21)
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( oname_rcvd.10 ) @ #j) ∧ #j < #vr.24)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.10>,
                                     ~ra_o_key.10)
        ) @ #j)
      ∧
       #j < #vr.24)
  simplified formula:
      "((#last.4 < #j.3) ∨ (#j.3 < #last.4))"
    to
      "#j.3 < #last.4"
  solved goal nr. 10 (simplified):
     (#last.4 < #j.3)  ∥ (#j.3 < #last.4)
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_rcvd.7 ) @ #j) ∧ #j < #vr.21)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.21)
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 13 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, data_rcvd.10
                                 >,
                                 ~ra_o_key.10)
    ) @ #j.71
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( oname_rcvd.7 ) @ #j) ∧ #j < #vr.21)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.21)
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( data_sealed.10 ) @ #j) ∧ #j < #vr.9)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.10, data_sealed.10, 
                                       index_req.10>,
                                      h(<~platform_sec.60, ~mrsigner.44, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.9)
  solved goal nr. 27 (directly):
     (∃ #j. (!KU( index_req.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                         ~ra_r_key.7)
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.68
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.10, data_sealed.10, 
                                   index_req.10>,
                                  h(<~platform_sec.60, ~mrsigner.44, 'seal'>))
    ) @ #j.70
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( oname_rcvd.7 ) @ #j) ∧ #j < #vr.21)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.21)
  solved goal nr. 28 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                     ~ra_r_key.7)
    ) @ #j.67
  solved goal nr. 27 (directly):
     (∃ #j. (!KU( index_req.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                         ~ra_r_key.7)
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 8 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, x, index_req>,
                                  h(<platform_sec, mrsigner, 'seal'>))
    ) @ #j.3
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.68
  solved goal nr. 28 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                     ~ra_r_key.7)
    ) @ #j.67
  simplified formula:
      "((#last.4 < #j.3) ∨ (#j.3 < #last.4))"
    to
      "#j.3 < #last.4"
  solved goal nr. 9 (simplified):
     (#last.4 < #j.3)  ∥ (#j.3 < #last.4)
  solved goal nr. 43 (directly):
    Sgx_increment_MC_done( <~platform_sec.60, mrenclave.71>, mcid.71,
                           ~mc_session.71, index_req.10
    ) ▶₀ #j.70
  solved goal nr. 10 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', x, data_rcvd>, ~ra_o_key)
    ) @ #j.3
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 13 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  simplified formula:
      "((#last.4 < #j.3) ∨ (#j.3 < #last.4))"
    to
      "#j.3 < #last.4"
  solved goal nr. 11 (simplified):
     (#last.4 < #j.3)  ∥ (#j.3 < #last.4)
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, data_rcvd.10
                                 >,
                                 ~ra_o_key.10)
    ) @ #j.70
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 14 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  simplified formula:
      "((#last.4 < #j.3) ∨ (#j.3 < #last.4))"
    to
      "#j.3 < #last.4"
  solved goal nr. 11 (simplified):
     (#last.4 < #j.3)  ∥ (#j.3 < #last.4)
  solved goal nr. 44 (directly):
    EPC_E_o( ~platform_sec.60, ~mrsigner.44, mrenclave.71, ~p_id.71,
             ~mc_session.71, ~ra_o_key.71, data_sealed.10, oname_sealed.10,
             mcid.71
    ) ▶₁ #j.70
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 14 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  solved goal nr. 46 (directly):
    Sgx_increment_MC( <~platform_sec.60, mrenclave.71>, mcid.71,
                      ~mc_session.71
    ) ▶₀ #vr.72
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                       index_req.7>,
                                      h(<~platform_sec.57, ~mrsigner.41, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                   index_req.7>,
                                  h(<~platform_sec.57, ~mrsigner.41, 'seal'>))
    ) @ #j.67
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.67
  solved goal nr. 43 (directly):
    Sgx_increment_MC_done( <~platform_sec.57, mrenclave.68>, mcid.68,
                           ~mc_session.68, index_req.7
    ) ▶₀ #j.67
  solved goal nr. 52 (directly):
    Start_thread_e_upload( ~platform_sec.60, ~mrsigner.44,
                           mrenclave.71, ~p_id.71, mcid.71
    ) ▶₁ #vr.75
  solved goal nr. 44 (directly):
    EPC_E_o( ~platform_sec.57, ~mrsigner.41, mrenclave.68, ~p_id.68,
             ~mc_session.68, ~ra_o_key.68, data_sealed.7, oname_sealed.7,
             mcid.68
    ) ▶₁ #j.67
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_rcvd.10 ) @ #j) ∧ #j < #vr.27)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.10>,
                                     ~ra_o_key.10)
        ) @ #j)
      ∧
       #j < #vr.27)
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                       index_req.7>,
                                      h(<~platform_sec.57, ~mrsigner.41, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 53 (directly): RA_o_login( ~ra_o_key.71 ) ▶₂ #vr.75
  solved goal nr. 6 (precomputed):
    Start_thread_e_upload( platform_sec, mrsigner, mrenclave, ~p_id,
                           mcid
    ) ▶₁ #i
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, data_rcvd.10
                                 >,
                                 ~ra_o_key.10)
    ) @ #j.70
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                   index_req.7>,
                                  h(<~platform_sec.57, ~mrsigner.41, 'seal'>))
    ) @ #j.67
  solved goal nr. 6 (precomputed):
    Start_thread_e_upload( platform_sec, mrsigner, mrenclave, ~p_id,
                           mcid
    ) ▶₁ #i
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.67
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_rcvd.7 ) @ #j) ∧ #j < #vr.24)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.24)
  solved goal nr. 46 (directly):
    Sgx_increment_MC( <~platform_sec.57, mrenclave.68>, mcid.68,
                      ~mc_session.68
    ) ▶₀ #vr.69
  solved goal nr. 65 (directly):
    !L23( ~platform_sec.60, ~mrsigner.44, mrenclave.71, mcid.71,
          valMC.90
    ) ▶₀ #vr.89
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.67
  solved goal nr. 43 (directly):
    Sgx_increment_MC_done( <~platform_sec.57, mrenclave.68>, mcid.68,
                           ~mc_session.68, index_req.7
    ) ▶₀ #j.67
  solved goal nr. 67 (directly): !OMem( oname.93 ) ▶₂ #vr.92
  solved goal nr. 44 (directly):
    EPC_E_o( ~platform_sec.57, ~mrsigner.41, mrenclave.68, ~p_id.68,
             ~mc_session.68, ~ra_o_key.68, data_sealed.7, oname_sealed.7,
             mcid.68
    ) ▶₁ #j.67
  solved goal nr. 69 (directly):
    Sgx_create_MC_done( <~platform_sec.60, ~mrenclave.97>,
                        ~mc_session.97, mcid.71, valMC.90
    ) ▶₀ #vr.96
  solved goal nr. 26 (directly):
     (∃ #j. (!KU( index_req.10 ) @ #j) ∧ #j < #vr.9)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                         ~ra_r_key.10)
        ) @ #j)
      ∧
       #j < #vr.9)
  solved goal nr. 52 (directly):
    Start_thread_e_upload( ~platform_sec.57, ~mrsigner.41,
                           mrenclave.68, ~p_id.68, mcid.68
    ) ▶₁ #vr.72
  solved goal nr. 27 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                     ~ra_r_key.10)
    ) @ #j.70
  solved goal nr. 70 (directly):
    L22( ~platform_sec.60, ~mrsigner.44, ~mrenclave.97, ~mc_session.97
    ) ▶₁ #vr.96
  solved goal nr. 46 (directly):
    Sgx_increment_MC( <~platform_sec.57, mrenclave.68>, mcid.68,
                      ~mc_session.68
    ) ▶₀ #vr.69
  solved goal nr. 7 (precomputed): RA_o_login( ~ra_o_key ) ▶₂ #i
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_rcvd.7 ) @ #j) ∧ #j < #vr.24)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7
                                     >,
                                     ~ra_o_key.7)
        ) @ #j)
      ∧
       #j < #vr.24)
  solved goal nr. 26 (directly):
     (∃ #j. (!KU( index_req.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                         ~ra_r_key.7)
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.7, data_rcvd.7>,
                                 ~ra_o_key.7)
    ) @ #j.67
  solved goal nr. 53 (directly): RA_o_login( ~ra_o_key.68 ) ▶₂ #vr.72
  solved goal nr. 27 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                     ~ra_r_key.7)
    ) @ #j.67
  solved goal nr. 65 (directly):
    !L23( ~platform_sec.57, ~mrsigner.41, mrenclave.68, mcid.68,
          valMC.87
    ) ▶₀ #vr.86
  solved goal nr. 27 (directly):
     (∃ #j. (!KU( index_req.10 ) @ #j) ∧ #j < #vr.9)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                         ~ra_r_key.10)
        ) @ #j)
      ∧
       #j < #vr.9)
  solved goal nr. 28 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                     ~ra_r_key.10)
    ) @ #j.70
  solved goal nr. 67 (directly): !OMem( oname.90 ) ▶₂ #vr.89
  solved goal nr. 52 (directly):
    Start_thread_e_upload( ~platform_sec.57, ~mrsigner.41,
                           mrenclave.68, ~p_id.68, mcid.68
    ) ▶₁ #vr.72
  solved goal nr. 27 (directly):
     (∃ #j. (!KU( index_req.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                         ~ra_r_key.7)
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 28 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                     ~ra_r_key.7)
    ) @ #j.67
  solved goal nr. 69 (directly):
    Sgx_create_MC_done( <~platform_sec.57, ~mrenclave.94>,
                        ~mc_session.94, mcid.68, valMC.87
    ) ▶₀ #vr.93
  solved goal nr. 55 (directly):
     (∃ #j. (!KU( data_sealed.10 ) @ #j) ∧ #j < #vr.75)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.10, 
                                      data_sealed.10>,
                                     ~ra_o_key.71)
        ) @ #j)
      ∧
       #j < #vr.75)
  solved goal nr. 53 (directly): RA_o_login( ~ra_o_key.68 ) ▶₂ #vr.72
  solved goal nr. 26 (directly):
     (∃ #j. (!KU( index_req.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                         ~ra_r_key.7)
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 27 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                     ~ra_r_key.7)
    ) @ #j.67
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.10, 
                                  data_sealed.10>,
                                 ~ra_o_key.71)
    ) @ #j.110
  solved goal nr. 65 (directly):
    !L23( ~platform_sec.57, ~mrsigner.41, mrenclave.68, mcid.68,
          valMC.87
    ) ▶₀ #vr.86
  solved goal nr. 70 (directly):
    L22( ~platform_sec.57, ~mrsigner.41, ~mrenclave.94, ~mc_session.94
    ) ▶₁ #vr.93
  solved goal nr. 4 (precomputed):
    !KU( senc(<'upload', x, data_rcvd>, ~ra_o_key) ) @ #vk.1
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( data_sealed.10 ) @ #j) ∧ #j < #vr.9)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.10, data_sealed.10, 
                                       index_req.10>,
                                      h(<~platform_sec.60, ~mrsigner.44, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.9)
  solved goal nr. 67 (directly): !OMem( oname.90 ) ▶₂ #vr.89
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.10, data_sealed.10, 
                                   index_req.10>,
                                  h(<~platform_sec.60, ~mrsigner.44, 'seal'>))
    ) @ #j.70
  solved goal nr. 69 (directly):
    Sgx_create_MC_done( <~platform_sec.57, ~mrenclave.94>,
                        ~mc_session.94, mcid.68, valMC.87
    ) ▶₀ #vr.93
  solved goal nr. 43 (directly):
    Sgx_increment_MC_done( <~platform_sec.60, mrenclave.71>, mcid.71,
                           ~mc_session.71, index_req.10
    ) ▶₀ #j.70
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                       index_req.7>,
                                      h(<~platform_sec.57, ~mrsigner.41, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 27 (directly):
     (∃ #j. (!KU( index_req.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                         ~ra_r_key.7)
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 28 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.7>,
                                     ~ra_r_key.7)
    ) @ #j.67
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                   index_req.7>,
                                  h(<~platform_sec.57, ~mrsigner.41, 'seal'>))
    ) @ #j.67
  solved goal nr. 70 (directly):
    L22( ~platform_sec.57, ~mrsigner.41, ~mrenclave.94, ~mc_session.94
    ) ▶₁ #vr.93
  solved goal nr. 44 (directly):
    EPC_E_o( ~platform_sec.60, ~mrsigner.44, mrenclave.71, ~p_id.71,
             ~mc_session.71, ~ra_o_key.71, data_sealed.10, oname_sealed.10,
             mcid.71
    ) ▶₁ #j.70
  solved goal nr. 43 (directly):
    Sgx_increment_MC_done( <~platform_sec.57, mrenclave.68>, mcid.68,
                           ~mc_session.68, index_req.7
    ) ▶₀ #j.67
  solved goal nr. 55 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.72)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                      data_sealed.7>,
                                     ~ra_o_key.68)
        ) @ #j)
      ∧
       #j < #vr.72)
  solved goal nr. 46 (directly):
    Sgx_increment_MC( <~platform_sec.60, mrenclave.71>, mcid.71,
                      ~mc_session.71
    ) ▶₀ #vr.72
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                  data_sealed.7>,
                                 ~ra_o_key.68)
    ) @ #j.107
  solved goal nr. 44 (directly):
    EPC_E_o( ~platform_sec.57, ~mrsigner.41, mrenclave.68, ~p_id.68,
             ~mc_session.68, ~ra_o_key.68, data_sealed.7, oname_sealed.7,
             mcid.68
    ) ▶₁ #j.67
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                       index_req.7>,
                                      h(<~platform_sec.57, ~mrsigner.41, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                   index_req.7>,
                                  h(<~platform_sec.57, ~mrsigner.41, 'seal'>))
    ) @ #j.67
  solved goal nr. 46 (directly):
    Sgx_increment_MC( <~platform_sec.57, mrenclave.68>, mcid.68,
                      ~mc_session.68
    ) ▶₀ #vr.69
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( data_sealed.10 ) @ #j) ∧ #j < #vr.9)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.10, data_sealed.10, 
                                       index_req.10>,
                                      h(<~platform_sec.59, ~mrsigner.43, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.9)
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.10, data_sealed.10, 
                                   index_req.10>,
                                  h(<~platform_sec.59, ~mrsigner.43, 'seal'>))
    ) @ #j.70
  solved goal nr. 43 (directly):
    Sgx_increment_MC_done( <~platform_sec.57, mrenclave.68>, mcid.68,
                           ~mc_session.68, index_req.7
    ) ▶₀ #j.67
  solved goal nr. 55 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.72)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                      data_sealed.7>,
                                     ~ra_o_key.68)
        ) @ #j)
      ∧
       #j < #vr.72)
  solved goal nr. 52 (directly):
    Start_thread_e_upload( ~platform_sec.60, ~mrsigner.44,
                           mrenclave.71, ~p_id.71, mcid.71
    ) ▶₁ #vr.75
  solved goal nr. 44 (directly):
    Sgx_increment_MC_done( <~platform_sec.59, mrenclave.71>, mcid.71,
                           ~mc_session.71, index_req.10
    ) ▶₀ #j.70
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                  data_sealed.7>,
                                 ~ra_o_key.68)
    ) @ #j.107
  solved goal nr. 44 (directly):
    EPC_E_o( ~platform_sec.57, ~mrsigner.41, mrenclave.68, ~p_id.68,
             ~mc_session.68, ~ra_o_key.68, data_sealed.7, oname_sealed.7,
             mcid.68
    ) ▶₁ #j.67
  solved goal nr. 53 (directly): RA_o_login( ~ra_o_key.71 ) ▶₂ #vr.75
  solved goal nr. 45 (directly):
    EPC_E_o( ~platform_sec.59, ~mrsigner.43, mrenclave.71, ~p_id.71,
             ~mc_session.71, ~ra_o_key.71, data_sealed.10, oname_sealed.10,
             mcid.71
    ) ▶₁ #j.70
  solved goal nr. 52 (directly):
    Start_thread_e_upload( ~platform_sec.57, ~mrsigner.41,
                           mrenclave.68, ~p_id.68, mcid.68
    ) ▶₁ #vr.72
  solved goal nr. 65 (directly):
    !L23( ~platform_sec.60, ~mrsigner.44, mrenclave.71, mcid.71,
          valMC.90
    ) ▶₀ #vr.89
  solved goal nr. 46 (directly):
    Sgx_increment_MC( <~platform_sec.57, mrenclave.68>, mcid.68,
                      ~mc_session.68
    ) ▶₀ #vr.69
  solved goal nr. 47 (directly):
    Sgx_increment_MC( <~platform_sec.59, mrenclave.71>, mcid.71,
                      ~mc_session.71
    ) ▶₀ #vr.72
  solved goal nr. 53 (directly): RA_o_login( ~ra_o_key.68 ) ▶₂ #vr.72
  solved goal nr. 67 (directly): !OMem( oname.93 ) ▶₂ #vr.92
  solved goal nr. 65 (directly):
    !L23( ~platform_sec.57, ~mrsigner.41, mrenclave.68, mcid.68,
          valMC.87
    ) ▶₀ #vr.86
  solved goal nr. 69 (directly):
    Sgx_create_MC_done( <~platform_sec.60, ~mrenclave.97>,
                        ~mc_session.97, mcid.71, valMC.90
    ) ▶₀ #vr.96
  solved goal nr. 53 (directly):
    Start_thread_e_upload( ~platform_sec.59, ~mrsigner.43,
                           mrenclave.71, ~p_id.71, mcid.71
    ) ▶₁ #vr.75
  simplified formula:
      "((#vk.16 = #i) ∨ (#i < #vk.16))"
    to
      "⊥"
  solved goal nr. 25 (simplified): (#vk.16 = #i)  ∥ (#i < #vk.16)
  solved goal nr. 67 (directly): !OMem( oname.90 ) ▶₂ #vr.89
  solved goal nr. 70 (directly):
    L22( ~platform_sec.60, ~mrsigner.44, ~mrenclave.97, ~mc_session.97
    ) ▶₁ #vr.96
  solved goal nr. 54 (directly): RA_o_login( ~ra_o_key.71 ) ▶₂ #vr.75
  solved goal nr. 52 (directly):
    Start_thread_e_upload( ~platform_sec.57, ~mrsigner.41,
                           mrenclave.68, ~p_id.68, mcid.68
    ) ▶₁ #vr.72
  solved goal nr. 66 (directly):
    !L23( ~platform_sec.59, ~mrsigner.43, mrenclave.71, mcid.71,
          valMC.90
    ) ▶₀ #vr.89
  simplified formula:
      "((#vr.15 = #i) ∨ (#i < #vr.15))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#vr.15 = #i)  ∥ (#i < #vr.15)
  solved goal nr. 69 (directly):
    Sgx_create_MC_done( <~platform_sec.57, ~mrenclave.94>,
                        ~mc_session.94, mcid.68, valMC.87
    ) ▶₀ #vr.93
  solved goal nr. 53 (directly): RA_o_login( ~ra_o_key.68 ) ▶₂ #vr.72
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                       index_req.7>,
                                      h(<~platform_sec.56, ~mrsigner.40, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 68 (directly): !OMem( oname.93 ) ▶₂ #vr.92
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                   index_req.7>,
                                  h(<~platform_sec.56, ~mrsigner.40, 'seal'>))
    ) @ #j.67
  solved goal nr. 70 (directly):
    L22( ~platform_sec.57, ~mrsigner.41, ~mrenclave.94, ~mc_session.94
    ) ▶₁ #vr.93
  solved goal nr. 65 (directly):
    !L23( ~platform_sec.57, ~mrsigner.41, mrenclave.68, mcid.68,
          valMC.87
    ) ▶₀ #vr.86
  solved goal nr. 70 (directly):
    Sgx_create_MC_done( <~platform_sec.59, ~mrenclave.97>,
                        ~mc_session.97, mcid.71, valMC.90
    ) ▶₀ #vr.96
  solved goal nr. 44 (directly):
    Sgx_increment_MC_done( <~platform_sec.56, mrenclave.68>, mcid.68,
                           ~mc_session.68, index_req.7
    ) ▶₀ #j.67
  solved goal nr. 67 (directly): !OMem( oname.90 ) ▶₂ #vr.89
  solved goal nr. 71 (directly):
    L22( ~platform_sec.59, ~mrsigner.43, ~mrenclave.97, ~mc_session.97
    ) ▶₁ #vr.96
  solved goal nr. 55 (directly):
     (∃ #j. (!KU( data_sealed.10 ) @ #j) ∧ #j < #vr.75)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.10, 
                                      data_sealed.10>,
                                     ~ra_o_key.71)
        ) @ #j)
      ∧
       #j < #vr.75)
  solved goal nr. 69 (directly):
    Sgx_create_MC_done( <~platform_sec.57, ~mrenclave.94>,
                        ~mc_session.94, mcid.68, valMC.87
    ) ▶₀ #vr.93
  solved goal nr. 45 (directly):
    EPC_E_o( ~platform_sec.56, ~mrsigner.40, mrenclave.68, ~p_id.68,
             ~mc_session.68, ~ra_o_key.68, data_sealed.7, oname_sealed.7,
             mcid.68
    ) ▶₁ #j.67
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                       index_req.7>,
                                      h(<~platform_sec.56, ~mrsigner.40, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.10, 
                                  data_sealed.10>,
                                 ~ra_o_key.71)
    ) @ #j.110
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                   index_req.7>,
                                  h(<~platform_sec.56, ~mrsigner.40, 'seal'>))
    ) @ #j.67
  solved goal nr. 70 (directly):
    L22( ~platform_sec.57, ~mrsigner.41, ~mrenclave.94, ~mc_session.94
    ) ▶₁ #vr.93
  solved goal nr. 47 (directly):
    Sgx_increment_MC( <~platform_sec.56, mrenclave.68>, mcid.68,
                      ~mc_session.68
    ) ▶₀ #vr.69
  solved goal nr. 44 (directly):
    Sgx_increment_MC_done( <~platform_sec.56, mrenclave.68>, mcid.68,
                           ~mc_session.68, index_req.7
    ) ▶₀ #j.67
  solved goal nr. 56 (directly):
     (∃ #j. (!KU( data_sealed.10 ) @ #j) ∧ #j < #vr.75)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.10, 
                                      data_sealed.10>,
                                     ~ra_o_key.71)
        ) @ #j)
      ∧
       #j < #vr.75)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.10, 
                                  data_sealed.10>,
                                 ~ra_o_key.71)
    ) @ #j.110
  solved goal nr. 55 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.72)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                      data_sealed.7>,
                                     ~ra_o_key.68)
        ) @ #j)
      ∧
       #j < #vr.72)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                  data_sealed.7>,
                                 ~ra_o_key.68)
    ) @ #j.107
  solved goal nr. 45 (directly):
    EPC_E_o( ~platform_sec.56, ~mrsigner.40, mrenclave.68, ~p_id.68,
             ~mc_session.68, ~ra_o_key.68, data_sealed.7, oname_sealed.7,
             mcid.68
    ) ▶₁ #j.67
  solved goal nr. 53 (directly):
    Start_thread_e_upload( ~platform_sec.56, ~mrsigner.40,
                           mrenclave.68, ~p_id.68, mcid.68
    ) ▶₁ #vr.72
  solved goal nr. 47 (directly):
    Sgx_increment_MC( <~platform_sec.56, mrenclave.68>, mcid.68,
                      ~mc_session.68
    ) ▶₀ #vr.69
  solved goal nr. 55 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.72)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                      data_sealed.7>,
                                     ~ra_o_key.68)
        ) @ #j)
      ∧
       #j < #vr.72)
  solved goal nr. 54 (directly): RA_o_login( ~ra_o_key.68 ) ▶₂ #vr.72
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                  data_sealed.7>,
                                 ~ra_o_key.68)
    ) @ #j.107
  solved goal nr. 36 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 37 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 66 (directly):
    !L23( ~platform_sec.56, ~mrsigner.40, mrenclave.68, mcid.68,
          valMC.87
    ) ▶₀ #vr.86
  solved goal nr. 53 (directly):
    Start_thread_e_upload( ~platform_sec.56, ~mrsigner.40,
                           mrenclave.68, ~p_id.68, mcid.68
    ) ▶₁ #vr.72
  solved goal nr. 68 (directly): !OMem( oname.90 ) ▶₂ #vr.89
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( data_sealed.10 ) @ #j) ∧ #j < #vr.9)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.10, data_sealed.10, 
                                       index_req.10>,
                                      h(<~platform_sec.59, ~mrsigner.43, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.9)
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.10, data_sealed.10, 
                                   index_req.10>,
                                  h(<~platform_sec.59, ~mrsigner.43, 'seal'>))
    ) @ #j.70
  solved goal nr. 54 (directly): RA_o_login( ~ra_o_key.68 ) ▶₂ #vr.72
  solved goal nr. 70 (directly):
    Sgx_create_MC_done( <~platform_sec.56, ~mrenclave.94>,
                        ~mc_session.94, mcid.68, valMC.87
    ) ▶₀ #vr.93
  solved goal nr. 44 (directly):
    Sgx_increment_MC_done( <~platform_sec.59, mrenclave.71>, mcid.71,
                           ~mc_session.71, index_req.10
    ) ▶₀ #j.70
  solved goal nr. 66 (directly):
    !L23( ~platform_sec.56, ~mrsigner.40, mrenclave.68, mcid.68,
          valMC.87
    ) ▶₀ #vr.86
  solved goal nr. 71 (directly):
    L22( ~platform_sec.56, ~mrsigner.40, ~mrenclave.94, ~mc_session.94
    ) ▶₁ #vr.93
  solved goal nr. 45 (directly):
    EPC_E_o( ~platform_sec.59, ~mrsigner.43, mrenclave.71, ~p_id.71,
             ~mc_session.71, ~ra_o_key.71, data_sealed.10, oname_sealed.10,
             mcid.71
    ) ▶₁ #j.70
  solved goal nr. 68 (directly): !OMem( oname.90 ) ▶₂ #vr.89
  solved goal nr. 47 (directly):
    Sgx_increment_MC( <~platform_sec.59, mrenclave.71>, mcid.71,
                      ~mc_session.71
    ) ▶₀ #vr.72
  solved goal nr. 70 (directly):
    Sgx_create_MC_done( <~platform_sec.56, ~mrenclave.94>,
                        ~mc_session.94, mcid.68, valMC.87
    ) ▶₀ #vr.93
  solved goal nr. 71 (directly):
    L22( ~platform_sec.56, ~mrsigner.40, ~mrenclave.94, ~mc_session.94
    ) ▶₁ #vr.93
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                       index_req.7>,
                                      h(<~platform_sec.56, ~mrsigner.40, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                   index_req.7>,
                                  h(<~platform_sec.56, ~mrsigner.40, 'seal'>))
    ) @ #j.67
  solved goal nr. 53 (directly):
    Start_thread_e_upload( ~platform_sec.59, ~mrsigner.43,
                           mrenclave.71, ~p_id.71, mcid.71
    ) ▶₁ #vr.75
  solved goal nr. 56 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.72)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                      data_sealed.7>,
                                     ~ra_o_key.68)
        ) @ #j)
      ∧
       #j < #vr.72)
  solved goal nr. 44 (directly):
    Sgx_increment_MC_done( <~platform_sec.56, mrenclave.68>, mcid.68,
                           ~mc_session.68, index_req.7
    ) ▶₀ #j.67
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.6)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                       index_req.7>,
                                      h(<~platform_sec.56, ~mrsigner.40, 'seal'>))
        ) @ #j)
      ∧
       #j < #vr.6)
  solved goal nr. 54 (directly): RA_o_login( ~ra_o_key.71 ) ▶₂ #vr.75
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.7, data_sealed.7, 
                                   index_req.7>,
                                  h(<~platform_sec.56, ~mrsigner.40, 'seal'>))
    ) @ #j.67
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                  data_sealed.7>,
                                 ~ra_o_key.68)
    ) @ #j.107
  solved goal nr. 66 (directly):
    !L23( ~platform_sec.59, ~mrsigner.43, mrenclave.71, mcid.71,
          valMC.90
    ) ▶₀ #vr.89
  solved goal nr. 44 (directly):
    Sgx_increment_MC_done( <~platform_sec.56, mrenclave.68>, mcid.68,
                           ~mc_session.68, index_req.7
    ) ▶₀ #j.67
  solved goal nr. 45 (directly):
    EPC_E_o( ~platform_sec.56, ~mrsigner.40, mrenclave.68, ~p_id.68,
             ~mc_session.68, ~ra_o_key.68, data_sealed.7, oname_sealed.7,
             mcid.68
    ) ▶₁ #j.67
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 36 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 68 (directly): !OMem( oname.93 ) ▶₂ #vr.92
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 37 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 45 (directly):
    EPC_E_o( ~platform_sec.56, ~mrsigner.40, mrenclave.68, ~p_id.68,
             ~mc_session.68, ~ra_o_key.68, data_sealed.7, oname_sealed.7,
             mcid.68
    ) ▶₁ #j.67
  solved goal nr. 56 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.72)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                      data_sealed.7>,
                                     ~ra_o_key.68)
        ) @ #j)
      ∧
       #j < #vr.72)
  solved goal nr. 70 (directly):
    Sgx_create_MC_done( <~platform_sec.59, ~mrenclave.97>,
                        ~mc_session.97, mcid.71, valMC.90
    ) ▶₀ #vr.96
  solved goal nr. 47 (directly):
    Sgx_increment_MC( <~platform_sec.56, mrenclave.68>, mcid.68,
                      ~mc_session.68
    ) ▶₀ #vr.69
  solved goal nr. 47 (directly):
    Sgx_increment_MC( <~platform_sec.56, mrenclave.68>, mcid.68,
                      ~mc_session.68
    ) ▶₀ #vr.69
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                  data_sealed.7>,
                                 ~ra_o_key.68)
    ) @ #j.107
  solved goal nr. 71 (directly):
    L22( ~platform_sec.59, ~mrsigner.43, ~mrenclave.97, ~mc_session.97
    ) ▶₁ #vr.96
  solved goal nr. 53 (directly):
    Start_thread_e_upload( ~platform_sec.56, ~mrsigner.40,
                           mrenclave.68, ~p_id.68, mcid.68
    ) ▶₁ #vr.72
  solved goal nr. 53 (directly):
    Start_thread_e_upload( ~platform_sec.56, ~mrsigner.40,
                           mrenclave.68, ~p_id.68, mcid.68
    ) ▶₁ #vr.72
  solved goal nr. 54 (directly): RA_o_login( ~ra_o_key.68 ) ▶₂ #vr.72
  solved goal nr. 66 (directly):
    !L23( ~platform_sec.56, ~mrsigner.40, mrenclave.68, mcid.68,
          valMC.87
    ) ▶₀ #vr.86
  solved goal nr. 54 (directly): RA_o_login( ~ra_o_key.68 ) ▶₂ #vr.72
  solved goal nr. 56 (directly):
     (∃ #j. (!KU( data_sealed.10 ) @ #j) ∧ #j < #vr.75)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.10, 
                                      data_sealed.10>,
                                     ~ra_o_key.71)
        ) @ #j)
      ∧
       #j < #vr.75)
  solved goal nr. 68 (directly): !OMem( oname.90 ) ▶₂ #vr.89
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.10, 
                                  data_sealed.10>,
                                 ~ra_o_key.71)
    ) @ #j.110
  solved goal nr. 66 (directly):
    !L23( ~platform_sec.56, ~mrsigner.40, mrenclave.68, mcid.68,
          valMC.87
    ) ▶₀ #vr.86
  solved goal nr. 70 (directly):
    Sgx_create_MC_done( <~platform_sec.56, ~mrenclave.94>,
                        ~mc_session.94, mcid.68, valMC.87
    ) ▶₀ #vr.93
  solved goal nr. 68 (directly): !OMem( oname.90 ) ▶₂ #vr.89
  solved goal nr. 71 (directly):
    L22( ~platform_sec.56, ~mrsigner.40, ~mrenclave.94, ~mc_session.94
    ) ▶₁ #vr.93
  solved goal nr. 70 (directly):
    Sgx_create_MC_done( <~platform_sec.56, ~mrenclave.94>,
                        ~mc_session.94, mcid.68, valMC.87
    ) ▶₀ #vr.93
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  solved goal nr. 31 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                         ~ra_r_key.15)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 71 (directly):
    L22( ~platform_sec.56, ~mrsigner.40, ~mrenclave.94, ~mc_session.94
    ) ▶₁ #vr.93
  solved goal nr. 56 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.72)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                      data_sealed.7>,
                                     ~ra_o_key.68)
        ) @ #j)
      ∧
       #j < #vr.72)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                  data_sealed.7>,
                                 ~ra_o_key.68)
    ) @ #j.107
  solved goal nr. 56 (directly):
     (∃ #j. (!KU( data_sealed.7 ) @ #j) ∧ #j < #vr.72)  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                      data_sealed.7>,
                                     ~ra_o_key.68)
        ) @ #j)
      ∧
       #j < #vr.72)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.7, 
                                  data_sealed.7>,
                                 ~ra_o_key.68)
    ) @ #j.107
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  solved goal nr. 32 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                         ~ra_r_key.15)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((last(#vr.15)) ∨
        (∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
    to
      "((∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
  solved goal nr. 37 (simplified):
     (last(#vr.15))  ∥
     (∃ #j.
       (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                       index_req.17>,
                                      h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.15))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 36 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.15)) ∨
        (∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
    to
      "((∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
  solved goal nr. 38 (simplified):
     (last(#vr.15))  ∥
     (∃ #j.
       (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                       index_req.17>,
                                      h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.15))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 37 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 2 (directly): (#i < #j)  ∥ (#j < #i)
  solved goal nr. 1 (directly):
     (last(#i))  ∥
     (∃ ptr #j.
       (PSE_CreateMC( MC_owner_policy, mcid, ptr, '1' ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  simplified formula:
      "((last(#i)) ∨ (last(#j)) ∨ (#j = #i))"
    to
      "last(#j)"
  solved goal nr. 5 (simplified):
     (last(#i))  ∥ (last(#j))  ∥ (#j = #i)
  simplified formula:
      "((last(#j)) ∨ (last(#i)) ∨ (#i = #j))"
    to
      "last(#j)"
  solved goal nr. 4 (simplified):
     (last(#j))  ∥ (last(#i))  ∥ (#i = #j)
  solved goal nr. 6 (directly):
    PSE_CreateMC( MC_owner_policy, mcid, ptr.1, '1' ) @ #j.2
  simplified formula:
      "((#last.3 < #j.2) ∨ (#j.2 < #last.3))"
    to
      "#j.2 < #last.3"
  solved goal nr. 7 (simplified):
     (#last.3 < #j.2)  ∥ (#j.2 < #last.3)
  simplified formula:
      "((#j.2 = #i) ∨ (#i < #j.2))"
    to
      "⊥"
  solved goal nr. 10 (simplified): (#j.2 = #i)  ∥ (#i < #j.2)
  simplified formula:
      "((last(#i)) ∨ (last(#j)) ∨ (#j = #i))"
    to
      "last(#i)"
  solved goal nr. 5 (simplified):
     (last(#i))  ∥ (last(#j))  ∥ (#j = #i)
  simplified formula:
      "((last(#j)) ∨ (last(#i)) ∨ (#i = #j))"
    to
      "last(#i)"
  solved goal nr. 4 (simplified):
     (last(#j))  ∥ (last(#i))  ∥ (#i = #j)
  solved goal nr. 3 (precomputed):
    Sgx_increment_MC( MC_owner_policy, mcid, label ) ▶₀ #i
  simplified formula:
      "((#vr.24 = #i) ∨ (#i < #vr.24))"
    to
      "⊥"
  solved goal nr. 18 (simplified): (#vr.24 = #i)  ∥ (#i < #vr.24)
  solved goal nr. 10 (precomputed):
    Sgx_increment_MC( MC_owner_policy, ~mcid, label ) ▶₀ #i
  solved goal nr. 33 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 32 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 35 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 34 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 34 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.21
  solved goal nr. 33 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.22
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.1)
    ) @ #j.25
  solved goal nr. 35 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 34 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.23
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.22
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.1)
    ) @ #j.25
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 2 (directly):
     (#RCHR_data_rcv1 < #RCHR_data_rcv2)  ∥
     (#RCHR_data_rcv2 < #RCHR_data_rcv1)
  solved goal nr. 10 (precomputed):
    Sgx_increment_MC( MC_owner_policy, ~mcid, label ) ▶₀ #i
  solved goal nr. 2 (directly):
     (#E_r_data_reply_ex_x1 < #E_r_data_reply_ex_x2)  ∥
     (#E_r_data_reply_ex_x2 < #E_r_data_reply_ex_x1)
  solved goal nr. 20 (precomputed): !OMem( ~oname ) ▶₂ #do_upload
  solved goal nr. 20 (precomputed): !OMem( ~oname ) ▶₂ #do_upload
  solved goal nr. 27 (precomputed): !OMem( ~oname ) ▶₂ #do_upload1
  solved goal nr. 2 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req ) ▶₀ #RCHR_data_rcv
  solved goal nr. 3 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req ) ▶₀ #RCHR_data_rcv
  solved goal nr. 5 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req_x ) ▶₀ #RCHR_data_rcv_x
  solved goal nr. 4 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req1 ) ▶₀ #RCHR_data_rcv1
  solved goal nr. 13 (precomputed):
    EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
             index_req_x
    ) ▶₁ #E_r_data_reply_ex_x
  solved goal nr. 4 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req1 ) ▶₀ #RCHR_data_rcv1
  solved goal nr. 7 (precomputed):
    EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
             index_req_x1
    ) ▶₁ #E_r_data_reply_ex_x1
  solved goal nr. 13 (precomputed):
    EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
             index_req_x
    ) ▶₁ #E_r_data_reply_ex_x
  solved goal nr. 7 (precomputed):
    EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
             index_req_x1
    ) ▶₁ #E_r_data_reply_ex_x1
  solved goal nr. 11 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req2 ) ▶₀ #RCHR_data_rcv2
  solved goal nr. 9 (directly):
     (last(#i))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, x>, ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #i))
  solved goal nr. 12 (precomputed):
    Mem_RCHR( ~ra_r_key.1, index_req_y ) ▶₀ #RCHR_data_rcv_y
  simplified formula:
      "((#last < #j.3) ∨ (#j.3 < #last))"
    to
      "#j.3 < #last"
  solved goal nr. 13 (simplified): (#last < #j.3)  ∥ (#j.3 < #last)
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 14 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  solved goal nr. 11 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req2 ) ▶₀ #RCHR_data_rcv2
  solved goal nr. 7 (precomputed): RA_o_login( ~ra_o_key ) ▶₂ #i
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 12 (precomputed):
    Mem_RCHR( ~ra_r_key.1, index_req_y ) ▶₀ #RCHR_data_rcv_y
  solved goal nr. 12 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, x>, ~ra_o_key)
    ) @ #j.3
  simplified formula:
      "((#last < #j.3) ∨ (#j.3 < #last))"
    to
      "#j.3 < #last"
  solved goal nr. 13 (simplified): (#last < #j.3)  ∥ (#j.3 < #last)
  solved goal nr. 6 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.3
  solved goal nr. 6 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.3
  simplified formula:
      "((#j.3 = #i) ∨ (#i < #j.3))"
    to
      "⊥"
  solved goal nr. 16 (simplified): (#j.3 = #i)  ∥ (#i < #j.3)
  solved goal nr. 12 (precomputed):
    EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
             ~ra_r_key, index_req_x2
    ) ▶₁ #E_r_data_reply_ex_x2
  solved goal nr. 12 (precomputed):
    EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
             ~ra_r_key, index_req_x2
    ) ▶₁ #E_r_data_reply_ex_x2
  solved goal nr. 4 (precomputed):
    !KU( senc(<'upload', oname_rcvd, x>, ~ra_o_key) ) @ #vk.1
  solved goal nr. 7 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.3
  solved goal nr. 23 (precomputed):
    !L12( ~platform_sec ) ▶₂ #L2_mrsigner_mrenclave
  solved goal nr. 11 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req2 ) ▶₀ #RCHR_data_rcv2
  solved goal nr. 11 (precomputed):
    Mem_RCHR( ~ra_r_key, index_req2 ) ▶₀ #RCHR_data_rcv2
  solved goal nr. 23 (precomputed):
    !L12( ~platform_sec ) ▶₂ #L2_mrsigner_mrenclave
  simplified formula:
      "((#vk.17 = #i) ∨ (#i < #vk.17))"
    to
      "⊥"
  solved goal nr. 25 (simplified): (#vk.17 = #i)  ∥ (#i < #vk.17)
  simplified formula:
      "((#vr.15 = #i) ∨ (#i < #vr.15))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#vr.15 = #i)  ∥ (#i < #vr.15)
  solved goal nr. 12 (precomputed): !KU( ~ra_r_key ) @ #vk.6
  solved goal nr. 12 (precomputed):
    EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
             ~ra_r_key, index_req_x2
    ) ▶₁ #E_r_data_reply_ex_x2
  solved goal nr. 12 (precomputed):
    EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
             ~ra_r_key, index_req_x2
    ) ▶₁ #E_r_data_reply_ex_x2
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 36 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 37 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label ) ▶₀ #j
  solved goal nr. 22 (precomputed):
    EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
             index_req_x
    ) ▶₁ #E_r_data_reply_ex_x
  solved goal nr. 25 (precomputed):
    Sgx_create_MC( <~platform_sec, ~mrenclave>, label ) ▶₂ #cmc
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 36 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 37 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 25 (precomputed):
    Sgx_create_MC( <~platform_sec, ~mrenclave>, label ) ▶₂ #cmc
  solved goal nr. 7 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.3
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  solved goal nr. 31 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                         ~ra_r_key.15)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 27 (precomputed):
    Sgx_create_MC_done( <~platform_sec, ~mrenclave>, ~mc_session,
                        ~mcid, '1'
    ) ▶₀ #L2_MC
  solved goal nr. 29 (precomputed): !OMem( ~oname ) ▶₂ #do_upload2
  solved goal nr. 27 (precomputed):
    Sgx_create_MC_done( <~platform_sec, ~mrenclave>, ~mc_session,
                        ~mcid, '1'
    ) ▶₀ #L2_MC
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  solved goal nr. 32 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                         ~ra_r_key.15)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 22 (precomputed):
    EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
             index_req_x
    ) ▶₁ #E_r_data_reply_ex_x
  solved goal nr. 22 (precomputed):
    EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
             index_req_x
    ) ▶₁ #E_r_data_reply_ex_x
  solved goal nr. 13 (precomputed): !KU( ~ra_r_key ) @ #vk.6
  solved goal nr. 26 (precomputed):
    !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key) ) @ #vk.1
  simplified formula:
      "((last(#vr.15)) ∨
        (∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
    to
      "((∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
  solved goal nr. 37 (simplified):
     (last(#vr.15))  ∥
     (∃ #j.
       (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                       index_req.17>,
                                      h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.15))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 36 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 28 (precomputed):
    L22( ~platform_sec, ~mrsigner, ~mrenclave, ~mc_session ) ▶₁ #L2_MC
  solved goal nr. 28 (precomputed):
    L22( ~platform_sec, ~mrsigner, ~mrenclave, ~mc_session ) ▶₁ #L2_MC
  solved goal nr. 39 (precomputed): !KU( ~ra_r_key ) @ #vk.12
  solved goal nr. 36 (precomputed): !KU( ~ra_r_key ) @ #vk.12
  solved goal nr. 12 (precomputed):
    !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.7
  solved goal nr. 12 (precomputed):
    !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.7
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  simplified formula:
      "((last(#vr.15)) ∨
        (∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
    to
      "((∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
  solved goal nr. 38 (simplified):
     (last(#vr.15))  ∥
     (∃ #j.
       (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                       index_req.17>,
                                      h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.15))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 37 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 66 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave.15>, ~mcid.16, ptr.52, '1'
    ) @ #j.53
  solved goal nr. 71 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave.14>, ~mcid.15, ptr.51, '1'
    ) @ #j.52
  solved goal nr. 30 (precomputed):
    !L23( ~platform_sec, ~mrsigner, ~mrenclave, ~mcid, '1'
    ) ▶₀ #L3_process
  solved goal nr. 30 (precomputed):
    !L23( ~platform_sec, ~mrsigner, ~mrenclave, ~mcid, '1'
    ) ▶₀ #L3_process
  solved goal nr. 33 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 32 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 35 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 34 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 38 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 34 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.21
  solved goal nr. 38 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 33 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.22
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 34 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 35 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.25
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.25
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 41 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.23
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 41 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.22
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 32 (precomputed):
    !L12( ~platform_sec ) ▶₂ #L2_mrsigner_mrenclave
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.25
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 6 (precomputed):
    Start_thread_e_upload( platform_sec, mrsigner, mrenclave, ~p_id,
                           mcid
    ) ▶₁ #i
  solved goal nr. 43 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 46 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 35 (precomputed):
    Start_thread_e_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                           ~mcid
    ) ▶₁ #e_o_decrypt
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 45 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.23
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 46 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.22
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 35 (precomputed):
    Start_thread_e_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                           ~mcid
    ) ▶₁ #e_o_decrypt
  solved goal nr. 47 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 27 (precomputed):
    EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
             ~ra_r_key.1, index_req_x.1
    ) ▶₁ #E_r_data_reply_ex_x.1
  solved goal nr. 7 (precomputed): RA_o_login( ~ra_o_key ) ▶₂ #i
  solved goal nr. 27 (precomputed):
    EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
             ~ra_r_key.1, index_req_x.1
    ) ▶₁ #E_r_data_reply_ex_x.1
  solved goal nr. 4 (precomputed):
    !KU( senc(<'upload', oname_rcvd, x>, ~ra_o_key) ) @ #vk.1
  solved goal nr. 27 (precomputed):
    EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
             ~ra_r_key.1, index_req_x.1
    ) ▶₁ #E_r_data_reply_ex_x.1
  solved goal nr. 23 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.9
  simplified formula:
      "((#vk.17 = #i) ∨ (#i < #vk.17))"
    to
      "⊥"
  solved goal nr. 27 (simplified): (#vk.17 = #i)  ∥ (#i < #vk.17)
  simplified formula:
      "((#vr.15 = #i) ∨ (#i < #vr.15))"
    to
      "⊥"
  solved goal nr. 23 (simplified): (#vr.15 = #i)  ∥ (#i < #vr.15)
  solved goal nr. 36 (precomputed):
    RA_o_login( ~ra_o_key ) ▶₂ #e_o_decrypt
  solved goal nr. 36 (precomputed):
    RA_o_login( ~ra_o_key ) ▶₂ #e_o_decrypt
  solved goal nr. 23 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.9
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 62 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_y.27, sealed_e_return_y.28
    ) @ #E_r_data_reply_ex_y.29
  solved goal nr. 38 (precomputed):
    !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.1) ) @ #vk.4
  solved goal nr. 51 (precomputed): !KU( ~ra_o_key ) @ #vk.7
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 63 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 38 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 34 (precomputed):
    Sgx_create_MC( <~platform_sec, ~mrenclave>, label ) ▶₂ #cmc
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 39 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 71 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_y.27, sealed_e_return_y.28
    ) @ #E_r_data_reply_ex_y.29
  solved goal nr. 42 (precomputed):
    RA_r_login( ~ra_r_key ) ▶₁ #E_r_data_req
  solved goal nr. 42 (precomputed):
    RA_r_login( ~ra_r_key ) ▶₁ #E_r_data_req
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 72 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 38 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                         data_rcvd.14>,
                                        ~ra_o_key.23)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 39 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_rcvd.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.13, 
                                      data_rcvd.14>,
                                     ~ra_o_key.23)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 9 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.4
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  solved goal nr. 33 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                         ~ra_r_key.15)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 43 (precomputed):
    Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                             ~p_id
    ) ▶₂ #E_r_data_req
  solved goal nr. 36 (precomputed):
    Sgx_create_MC_done( <~platform_sec, ~mrenclave>, ~mc_session,
                        ~mcid, '1'
    ) ▶₀ #L2_MC
  solved goal nr. 43 (precomputed):
    Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                             ~p_id
    ) ▶₂ #E_r_data_req
  solved goal nr. 43 (precomputed):
    Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                             ~p_id
    ) ▶₂ #E_r_data_req
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                            ~ra_r_key.15)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  solved goal nr. 34 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( index_req.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.13>,
                                         ~ra_r_key.15)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 43 (precomputed):
    Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                             ~p_id
    ) ▶₂ #E_r_data_req
  simplified formula:
      "((last(#vr.15)) ∨
        (∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
    to
      "((∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
  solved goal nr. 39 (simplified):
     (last(#vr.15))  ∥
     (∃ #j.
       (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                       index_req.17>,
                                      h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.15))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 38 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 53 (precomputed): !KU( ~ra_o_key.1 ) @ #vk.7
  solved goal nr. 11 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old1, valMC
    ) ▶₁ #i
  solved goal nr. 71 (precomputed): !KU( ~ra_r_key ) @ #vk.15
  solved goal nr. 48 (precomputed):
    !DB_mem( index_req,
             senc(<oname_sealed, ~data, index_req>,
                  h(<~platform_sec, ~mrsigner, 'seal'>))
    ) ▶₁ #db_retrieve
  solved goal nr. 48 (precomputed):
    !DB_mem( index_req,
             senc(<oname_sealed, ~data, index_req>,
                  h(<~platform_sec, ~mrsigner, 'seal'>))
    ) ▶₁ #db_retrieve
  simplified formula:
      "((last(#vr.15)) ∨
        (∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
    to
      "((∃ #j.
          (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                          index_req.17>,
                                         h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.15)))"
  solved goal nr. 40 (simplified):
     (last(#vr.15))  ∥
     (∃ #j.
       (!KU( data_sealed.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.15))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.16, data_sealed.13, 
                                       index_req.17>,
                                      h(<~platform_sec.18, ~mrsigner.19, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.15))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 39 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( index_req.17 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.17>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 6 (precomputed): RA_r_login( ~ra_r_key ) ▶₁ #i
  solved goal nr. 37 (precomputed):
    L22( ~platform_sec, ~mrsigner, ~mrenclave, ~mc_session ) ▶₁ #L2_MC
  solved goal nr. 49 (precomputed):
    Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve
  solved goal nr. 40 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 49 (precomputed):
    Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.25
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 7 (precomputed):
    Start_thread_e_data_req( platform_sec, mrsigner, mrenclave, ~p_id
    ) ▶₂ #i
  solved goal nr. 7 (precomputed):
    Start_thread_e_data_req( platform_sec, mrsigner, mrenclave, ~p_id
    ) ▶₂ #i
  solved goal nr. 4 (precomputed):
    !KU( senc(<'RCHR_data_req', x>, ~ra_r_key) ) @ #vk.1
  solved goal nr. 68 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.58, '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 67 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 54 (precomputed):
    EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
             ('1'+i)
    ) ▶₁ #E_r_data_resp
  solved goal nr. 73 (precomputed): !KU( ~ra_r_key ) @ #vk.21
  solved goal nr. 54 (precomputed):
    EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
             ('1'+i)
    ) ▶₁ #E_r_data_resp
  simplified formula:
      "((#vk.13 = #i) ∨ (#i < #vk.13))"
    to
      "⊥"
  solved goal nr. 22 (simplified): (#vk.13 = #i)  ∥ (#i < #vk.13)
  solved goal nr. 16 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd.1>, ~ra_r_key.1) ) @ #vk.7
  solved goal nr. 39 (precomputed):
    !L23( ~platform_sec, ~mrsigner, ~mrenclave, ~mcid, '1'
    ) ▶₀ #L3_process1
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 35 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 36 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 35 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 36 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 59 (precomputed): !KU( ~ra_r_key ) @ #vk.18
  simplified formula:
      "((#vr = #i) ∨ (#i < #vr))"
    to
      "⊥"
  solved goal nr. 19 (simplified): (#vr = #i)  ∥ (#i < #vr)
  simplified formula:
      "((#vr.11 = #i) ∨ (#i < #vr.11))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#vr.11 = #i)  ∥ (#i < #vr.11)
  solved goal nr. 56 (precomputed):
    Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp
  solved goal nr. 41 (precomputed):
    !L23( ~platform_sec, ~mrsigner, ~mrenclave, ~mcid, '1'
    ) ▶₀ #L3_process2
  solved goal nr. 56 (precomputed):
    Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp
  simplified formula:
      "((#vr.12 = #i) ∨ (#i < #vr.12))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#vr.12 = #i)  ∥ (#i < #vr.12)
  simplified formula:
      "((last(#vr.12)) ∨
        (∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
    to
      "((∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
  solved goal nr. 30 (simplified):
     (last(#vr.12))  ∥
     (∃ #j.
       (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 13 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label ) ▶₀ #j
  simplified formula:
      "((last(#vr.12)) ∨
        (∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
    to
      "((∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
  solved goal nr. 46 (precomputed):
    Start_thread_e_upload( ~platform_sec, ~mrsigner, ~mrenclave,
                           ~p_id.1, ~mcid
    ) ▶₁ #e_o_decrypt1
  solved goal nr. 31 (simplified):
     (last(#vr.12))  ∥
     (∃ #j.
       (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 8 (directly):
    PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ~ptr,
                          ptrMC2, ('1'+'1')
    ) @ #incMC
  solved goal nr. 8 (directly):
    PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ptrMC2,
                          ptrMC3, ('1'+'1'+'1')
    ) @ #incMC
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 21 (precomputed):
    !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.12
  solved goal nr. 36 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                       index_req.15>,
                                      h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((last(#vr.25)) ∨
        (∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
    to
      "((∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
  solved goal nr. 35 (simplified):
     (last(#vr.25))  ∥
     (∃ #j.
       (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                         ~ra_r_key.12)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.25))
  solved goal nr. 89 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.21
  solved goal nr. 24 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.9
  solved goal nr. 48 (precomputed):
    !DB_mem( index_req,
             senc(<oname_sealed, ~data, index_req>,
                  h(<~platform_sec, ~mrsigner, 'seal'>))
    ) ▶₁ #db_retrieve
  solved goal nr. 48 (precomputed):
    !DB_mem( index_req,
             senc(<oname_sealed, ~data, index_req>,
                  h(<~platform_sec, ~mrsigner, 'seal'>))
    ) ▶₁ #db_retrieve
  solved goal nr. 24 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.9
  solved goal nr. 121 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave.26>, ~mcid.27, ptr.63, '1'
    ) @ #j.64
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 37 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                       index_req.15>,
                                      h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((last(#vr.25)) ∨
        (∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
    to
      "((∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
  solved goal nr. 36 (simplified):
     (last(#vr.25))  ∥
     (∃ #j.
       (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                         ~ra_r_key.12)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.25))
  solved goal nr. 47 (precomputed):
    RA_o_login( ~ra_o_key ) ▶₂ #e_o_decrypt1
  solved goal nr. 26 (precomputed):
    !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key) ) @ #vk.1
  solved goal nr. 32 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 49 (precomputed):
    Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve
  solved goal nr. 31 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.19) ∨ (#j.19 < #i))"
    to
      "⊤"
  solved goal nr. 34 (simplified): (#i < #j.19)  ∥ (#j.19 < #i)
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 33 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 37 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 40 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 33 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.19
  solved goal nr. 32 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.20
  solved goal nr. 37 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 37 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 39 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  simplified formula:
      "((#i < #j.19) ∨ (#j.19 < #i))"
    to
      "⊤"
  solved goal nr. 34 (simplified): (#i < #j.19)  ∥ (#j.19 < #i)
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 33 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 40 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 40 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 40 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 39 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  solved goal nr. 41 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 40 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 39 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 40 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.20
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 49 (precomputed):
    Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve
  solved goal nr. 73 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_y.29, sealed_e_return_y.30
    ) @ #E_r_data_reply_ex_y.31
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 74 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 4 (precomputed):
    !KU( senc(<'RCHR_data_req', x>, ~ra_r_key) ) @ #vk.1
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 45 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 44 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.21
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 45 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 54 (precomputed):
    EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
             ('1'+i)
    ) ▶₁ #E_r_data_resp
  solved goal nr. 78 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_y.26, sealed_e_return_y.27
    ) @ #E_r_data_reply_ex_y.28
  simplified formula:
      "((#vk.12 = #i) ∨ (#i < #vk.12))"
    to
      "⊥"
  solved goal nr. 23 (simplified): (#vk.12 = #i)  ∥ (#i < #vk.12)
  solved goal nr. 54 (precomputed):
    EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
             ('1'+i)
    ) ▶₁ #E_r_data_resp
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                         data_rcvd.11>,
                                        ~ra_o_key.20)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                         data_rcvd.11>,
                                        ~ra_o_key.20)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 36 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.11>,
                                     ~ra_o_key.20)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                         data_rcvd.11>,
                                        ~ra_o_key.20)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                         data_rcvd.11>,
                                        ~ra_o_key.20)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 37 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.11>,
                                     ~ra_o_key.20)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 79 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 52 (precomputed):
    Start_thread_e_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                           ~mcid
    ) ▶₁ #e_o_decrypt2
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                         data_rcvd.11>,
                                        ~ra_o_key.20)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                         data_rcvd.11>,
                                        ~ra_o_key.20)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 36 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.11>,
                                     ~ra_o_key.20)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                         data_rcvd.11>,
                                        ~ra_o_key.20)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                         data_rcvd.11>,
                                        ~ra_o_key.20)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 37 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.10, 
                                      data_rcvd.11>,
                                     ~ra_o_key.20)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  solved goal nr. 26 (precomputed):
    !KU( senc(<oname_sealed.1, data_sealed, index_req_x.1>,
              h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #vk.13
  solved goal nr. 38 (precomputed):
    !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.1) ) @ #vk.4
  solved goal nr. 26 (precomputed):
    !KU( senc(<oname_sealed.1, data_sealed, index_req_x>,
              h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #vk.13
  solved goal nr. 51 (precomputed): !KU( ~ra_o_key ) @ #vk.7
  simplified formula:
      "((#vr.10 = #i) ∨ (#i < #vr.10))"
    to
      "⊥"
  solved goal nr. 20 (simplified): (#vr.10 = #i)  ∥ (#i < #vr.10)
  solved goal nr. 56 (precomputed):
    Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp
  solved goal nr. 9 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.4
  solved goal nr. 76 (precomputed): !KU( ~ra_r_key ) @ #vk.15
  simplified formula:
      "((#vr.11 = #i) ∨ (#i < #vr.11))"
    to
      "⊥"
  solved goal nr. 21 (simplified): (#vr.11 = #i)  ∥ (#i < #vr.11)
  solved goal nr. 128 (directly):
    PSE_CreateMC( <~platform_sec.1, ~mrenclave.29>, ~mcid.30, ptr.66,
                  '1'
    ) @ #j.67
  solved goal nr. 56 (precomputed):
    Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp
  solved goal nr. 140 (directly):
    PSE_CreateMC( <~platform_sec.1, ~mrenclave.33>, ~mcid.34, ptr.70,
                  '1'
    ) @ #j.71
  solved goal nr. 53 (precomputed):
    RA_o_login( ~ra_o_key.1 ) ▶₂ #e_o_decrypt2
  simplified formula:
      "((last(#vr.11)) ∨
        (∃ #j.
          (!KU( index_req.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.11)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.11)))"
    to
      "((∃ #j.
          (!KU( index_req.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.11)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.11)))"
  solved goal nr. 31 (simplified):
     (last(#vr.11))  ∥
     (∃ #j.
       (!KU( index_req.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.11))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                         ~ra_r_key.12)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.11))
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  simplified formula:
      "((last(#vr.11)) ∨
        (∃ #j.
          (!KU( index_req.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.11)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.11)))"
    to
      "((∃ #j.
          (!KU( index_req.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.11)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.11)))"
  solved goal nr. 32 (simplified):
     (last(#vr.11))  ∥
     (∃ #j.
       (!KU( index_req.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.11))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.10>,
                                         ~ra_r_key.12)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.11))
  solved goal nr. 8 (directly):
    PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ptrMC2,
                          ptrMC3, ('1'+'1'+'1')
    ) @ #incMC
  simplified formula:
      "((last(#vr.12)) ∨
        (∃ #j.
          (!KU( data_sealed.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.13, data_sealed.10, 
                                          index_req.14>,
                                         h(<~platform_sec.15, ~mrsigner.16, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
    to
      "((∃ #j.
          (!KU( data_sealed.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.13, data_sealed.10, 
                                          index_req.14>,
                                         h(<~platform_sec.15, ~mrsigner.16, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
  solved goal nr. 37 (simplified):
     (last(#vr.12))  ∥
     (∃ #j.
       (!KU( data_sealed.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.13, data_sealed.10, 
                                       index_req.14>,
                                      h(<~platform_sec.15, ~mrsigner.16, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((last(#vr.24)) ∨
        (∃ #j.
          (!KU( index_req.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.14>,
                                            ~ra_r_key.11)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.24)))"
    to
      "((∃ #j.
          (!KU( index_req.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.14>,
                                            ~ra_r_key.11)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.24)))"
  solved goal nr. 36 (simplified):
     (last(#vr.24))  ∥
     (∃ #j.
       (!KU( index_req.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.14>,
                                         ~ra_r_key.11)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.24))
  solved goal nr. 8 (directly):
    PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ~ptr,
                          ptrMC2, ('1'+'1')
    ) @ #incMC
  solved goal nr. 11 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old1, valMC
    ) ▶₁ #i
  solved goal nr. 53 (precomputed): !KU( ~ra_o_key.1 ) @ #vk.7
  simplified formula:
      "((last(#vr.12)) ∨
        (∃ #j.
          (!KU( data_sealed.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.13, data_sealed.10, 
                                          index_req.14>,
                                         h(<~platform_sec.15, ~mrsigner.16, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
    to
      "((∃ #j.
          (!KU( data_sealed.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.13, data_sealed.10, 
                                          index_req.14>,
                                         h(<~platform_sec.15, ~mrsigner.16, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
  solved goal nr. 38 (simplified):
     (last(#vr.12))  ∥
     (∃ #j.
       (!KU( data_sealed.10 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.13, data_sealed.10, 
                                       index_req.14>,
                                      h(<~platform_sec.15, ~mrsigner.16, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((last(#vr.24)) ∨
        (∃ #j.
          (!KU( index_req.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.14>,
                                            ~ra_r_key.11)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.24)))"
    to
      "((∃ #j.
          (!KU( index_req.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.14>,
                                            ~ra_r_key.11)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.24)))"
  solved goal nr. 134 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
    ) ▶₀ #incMC
  solved goal nr. 37 (simplified):
     (last(#vr.24))  ∥
     (∃ #j.
       (!KU( index_req.14 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.14>,
                                         ~ra_r_key.11)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.24))
  solved goal nr. 59 (precomputed):
    RA_r_login( ~ra_r_key ) ▶₁ #E_r_data_req
  solved goal nr. 139 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
    ) ▶₀ #incMC
  solved goal nr. 134 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
    ) ▶₀ #incMC
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 32 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.19) ∨ (#j.19 < #i))"
    to
      "⊤"
  solved goal nr. 34 (simplified): (#i < #j.19)  ∥ (#j.19 < #i)
  solved goal nr. 33 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.19
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.22
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.19) ∨ (#j.19 < #i))"
    to
      "⊤"
  solved goal nr. 34 (simplified): (#i < #j.19)  ∥ (#j.19 < #i)
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 33 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.18) ∨ (#j.18 < #i))"
    to
      "⊤"
  solved goal nr. 35 (simplified): (#i < #j.18)  ∥ (#j.18 < #i)
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.22
  solved goal nr. 34 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.18
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.18) ∨ (#j.18 < #i))"
    to
      "⊤"
  solved goal nr. 35 (simplified): (#i < #j.18)  ∥ (#j.18 < #i)
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.20
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.20
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 16 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd.1>, ~ra_r_key.1) ) @ #vk.7
  solved goal nr. 73 (precomputed): !KU( ~ra_r_key ) @ #vk.21
  solved goal nr. 6 (precomputed):
    EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
             index_req
    ) ▶₁ #i
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 46 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.22
  simplified formula:
      "((last(#vr.3)) ∨
        (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                            ~ra_r_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.3)))"
    to
      "((∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                            ~ra_r_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.3)))"
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 47 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 45 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.20
  solved goal nr. 20 (simplified):
     (last(#vr.3))  ∥
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.3))
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 46 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.20
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  simplified formula:
      "((last(#vr.3)) ∨
        (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                            ~ra_r_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.3)))"
    to
      "((∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                            ~ra_r_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.3)))"
  solved goal nr. 21 (simplified):
     (last(#vr.3))  ∥
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.3))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.3))
  solved goal nr. 9 (directly):
    E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_o_key,
                ~data, ~oname, ~mcid, ('1'+'1'+'1'),
                senc(<oname_sealed, ~data, ('1'+'1')>,
                     h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #e_o_upload
  solved goal nr. 21 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr))
  simplified formula:
      "((#i < #j.11) ∨ (#j.11 < #i))"
    to
      "⊤"
  solved goal nr. 23 (simplified): (#i < #j.11)  ∥ (#j.11 < #i)
  solved goal nr. 9 (directly):
    E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_o_key,
                ~data, ~oname, ~mcid, ('1'+'1'),
                senc(<oname_sealed, ~data, ('1'+'1')>,
                     h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #e_o_upload
  solved goal nr. 22 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.11
  simplified formula:
      "((#i < #j.11) ∨ (#j.11 < #i))"
    to
      "⊤"
  solved goal nr. 23 (simplified): (#i < #j.11)  ∥ (#j.11 < #i)
  solved goal nr. 22 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr))
  simplified formula:
      "((#i < #j.10) ∨ (#j.10 < #i))"
    to
      "⊤"
  solved goal nr. 24 (simplified): (#i < #j.10)  ∥ (#j.10 < #i)
  solved goal nr. 23 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.10
  simplified formula:
      "((#i < #j.10) ∨ (#j.10 < #i))"
    to
      "⊤"
  solved goal nr. 24 (simplified): (#i < #j.10)  ∥ (#j.10 < #i)
  solved goal nr. 64 (precomputed): !KU( ~ra_r_key ) @ #vk.18
  solved goal nr. 139 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
    ) ▶₀ #incMC
  solved goal nr. 60 (precomputed):
    Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                             ~p_id
    ) ▶₂ #E_r_data_req
  solved goal nr. 60 (precomputed):
    Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                             ~p_id
    ) ▶₂ #E_r_data_req
  solved goal nr. 5 (precomputed):
    !KU( senc(<oname_sealed, x, ('1'+'1')>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.2
  solved goal nr. 5 (precomputed):
    !KU( senc(<oname_sealed, x, index_req>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.2
  solved goal nr. 149 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                           ~mc_session.2, ('1'+'1')
    ) ▶₀ #e_o_upload
  solved goal nr. 68 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.58, '1'
    ) @ #j.59
  simplified formula:
      "((last(#vr.20)) ∨ (last(#vr.20)) ∨ (#vr.20 = #vr.20))"
    to
      "⊤"
  solved goal nr. 67 (simplified):
     (last(#vr.20))  ∥ (last(#vr.20))  ∥ (#vr.20 = #vr.20)
  solved goal nr. 165 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.71, '1'
    ) @ #j.72
  simplified formula:
      "((#vk.15 = #i) ∨ (#i < #vk.15))"
    to
      "⊥"
  solved goal nr. 31 (simplified): (#vk.15 = #i)  ∥ (#i < #vk.15)
  simplified formula:
      "((#vk.15 = #i) ∨ (#i < #vk.15))"
    to
      "⊥"
  solved goal nr. 35 (simplified): (#vk.15 = #i)  ∥ (#i < #vk.15)
  simplified formula:
      "((#vr.13 = #i) ∨ (#i < #vr.13))"
    to
      "⊥"
  solved goal nr. 43 (simplified): (#vr.13 = #i)  ∥ (#i < #vr.13)
  simplified formula:
      "((last(#vr.24)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.18)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.24)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.18)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.24)))"
  solved goal nr. 44 (simplified):
     (last(#vr.24))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                     ~ra_o_key.18)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.24))
  solved goal nr. 9 (directly):
    E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_o_key,
                ~data, ~oname, ~mcid, ('1'+'1'+'1'),
                senc(<oname_sealed, ~data, ('1'+i)>,
                     h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #e_o_upload
  simplified formula:
      "((last(#vr.24)) ∨
        (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.18)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.24)))"
    to
      "((∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.18)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.24)))"
  solved goal nr. 45 (simplified):
     (last(#vr.24))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.24))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                     ~ra_o_key.18)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.24))
  simplified formula:
      "((#vr.12 = #i) ∨ (#i < #vr.12))"
    to
      "⊥"
  solved goal nr. 42 (simplified): (#vr.12 = #i)  ∥ (#i < #vr.12)
  simplified formula:
      "((last(#vr.23)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
  solved goal nr. 43 (simplified):
     (last(#vr.23))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                     ~ra_o_key.17)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.23))
  simplified formula:
      "((last(#vr.23)) ∨
        (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
    to
      "((∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
  solved goal nr. 44 (simplified):
     (last(#vr.23))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                     ~ra_o_key.17)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.23))
  solved goal nr. 150 (precomputed):
    EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
             ~mc_session.2, ~ra_o_key, ~data, ~oname, ~mcid
    ) ▶₁ #e_o_upload
  solved goal nr. 154 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                           ~mc_session.2, ('1'+'1'+'1')
    ) ▶₀ #e_o_upload
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 91 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.21
  solved goal nr. 42 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                      data_rcvd.13>,
                                     ~ra_o_key.22)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 43 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                      data_rcvd.13>,
                                     ~ra_o_key.22)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  solved goal nr. 21 (precomputed):
    !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.12
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 44 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                      data_rcvd.13>,
                                     ~ra_o_key.22)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 45 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                      data_rcvd.13>,
                                     ~ra_o_key.22)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  solved goal nr. 65 (precomputed):
    !DB_mem( index_req,
             senc(<oname_sealed, ~data, index_req>,
                  h(<~platform_sec, ~mrsigner, 'seal'>))
    ) ▶₁ #db_retrieve
  solved goal nr. 177 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.70, '1'
    ) @ #j.71
  solved goal nr. 121 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave.26>, ~mcid.27, ptr.63, '1'
    ) @ #j.64
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 42 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                      data_rcvd.13>,
                                     ~ra_o_key.22)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 43 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                      data_rcvd.13>,
                                     ~ra_o_key.22)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 44 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                      data_rcvd.13>,
                                     ~ra_o_key.22)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                         data_rcvd.13>,
                                        ~ra_o_key.22)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 45 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_rcvd.13 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.12, 
                                      data_rcvd.13>,
                                     ~ra_o_key.22)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 11 (directly):
    DB_store( ~p_id, ~ptr.1, '1', ptrIndex2, ('1'+'1'),
              senc(<~oname, ~data, ('1'+'1')>,
                   h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #db_store
  solved goal nr. 65 (precomputed):
    !DB_mem( index_req,
             senc(<oname_sealed, ~data, index_req>,
                  h(<~platform_sec, ~mrsigner, 'seal'>))
    ) ▶₁ #db_retrieve
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 37 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 39 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 155 (precomputed):
    EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
             ~mc_session.2, ~ra_o_key, ~data, ~oname, ~mcid
    ) ▶₁ #e_o_upload
  solved goal nr. 181 (precomputed):
    Start_thread_db_upload( ~p_id ) ▶₁ #db_store
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old2, '1'
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 38 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                            ~ra_r_key.14)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 40 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( index_req.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.12>,
                                         ~ra_r_key.14)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 54 (precomputed):
    !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.2) ) @ #vk.7
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                          index_req.16>,
                                         h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                          index_req.16>,
                                         h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  solved goal nr. 43 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                       index_req.16>,
                                      h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                          index_req.16>,
                                         h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                          index_req.16>,
                                         h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  simplified formula:
      "((last(#vr.26)) ∨
        (∃ #j.
          (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
    to
      "((∃ #j.
          (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
  solved goal nr. 42 (simplified):
     (last(#vr.26))  ∥
     (∃ #j.
       (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.26))
  solved goal nr. 45 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                       index_req.16>,
                                      h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((last(#vr.26)) ∨
        (∃ #j.
          (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
    to
      "((∃ #j.
          (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
  solved goal nr. 44 (simplified):
     (last(#vr.26))  ∥
     (∃ #j.
       (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.26))
  solved goal nr. 26 (precomputed):
    !KU( senc(<oname_sealed.1, data_sealed, index_req_x.1>,
              h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #vk.13
  solved goal nr. 66 (precomputed):
    Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve
  solved goal nr. 11 (directly):
    DB_store( ~p_id, ptrIndex2, ('1'+'1'), ptrIndex3, ('1'+'1'+'1'),
              senc(<~oname, ~data, ('1'+'1'+'1')>,
                   h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #db_store
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                          index_req.16>,
                                         h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                          index_req.16>,
                                         h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  solved goal nr. 44 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                       index_req.16>,
                                      h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((last(#vr.14)) ∨
        (∃ #j.
          (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                          index_req.16>,
                                         h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
    to
      "((∃ #j.
          (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                          index_req.16>,
                                         h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.14)))"
  simplified formula:
      "((last(#vr.26)) ∨
        (∃ #j.
          (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
    to
      "((∃ #j.
          (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
  solved goal nr. 46 (simplified):
     (last(#vr.14))  ∥
     (∃ #j.
       (!KU( data_sealed.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.15, data_sealed.12, 
                                       index_req.16>,
                                      h(<~platform_sec.17, ~mrsigner.18, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 43 (simplified):
     (last(#vr.26))  ∥
     (∃ #j.
       (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.26))
  simplified formula:
      "((last(#vr.26)) ∨
        (∃ #j.
          (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
    to
      "((∃ #j.
          (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
  solved goal nr. 45 (simplified):
     (last(#vr.26))  ∥
     (∃ #j.
       (!KU( index_req.16 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.16>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.26))
  solved goal nr. 26 (precomputed):
    !KU( senc(<oname_sealed.1, data_sealed, index_req_x>,
              h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #vk.13
  solved goal nr. 12 (directly):
    RCHR_data_req( ~ra_r_key, ('1'+'1'),
                   senc(<'RCHR_data_req', ('1'+'1')>, ~ra_r_key),
                   senc(h(senc(<'RCHR_data_req', ('1'+'1')>, ~ra_r_key)), ~ra_r_key)
    ) @ #rchr_data_req_11
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 38 (directly):
     (∃ #j. (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                     ~ra_r_key.1)
    ) @ #j.20
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 40 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 41 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 44 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                       index_req.1>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 39 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                     ~ra_r_key.1)
    ) @ #j.21
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                       index_req.1>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 48 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 40 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.24
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                   index_req.1>,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.22
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                   index_req.1>,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.21
  solved goal nr. 47 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 48 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.24
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  solved goal nr. 193 (precomputed):
    Start_thread_db_upload( ~p_id ) ▶₁ #db_store
  solved goal nr. 128 (directly):
    PSE_CreateMC( <~platform_sec.1, ~mrenclave.29>, ~mcid.30, ptr.66,
                  '1'
    ) @ #j.67
  solved goal nr. 9 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.4
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 140 (directly):
    PSE_CreateMC( <~platform_sec.1, ~mrenclave.33>, ~mcid.34, ptr.70,
                  '1'
    ) @ #j.71
  solved goal nr. 42 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 46 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 46 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.20
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 50 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.21
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 43 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 46 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.24
  solved goal nr. 49 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                   index_req>,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.21
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.24
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  solved goal nr. 50 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                   index_req>,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.22
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.24
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  solved goal nr. 5 (precomputed):
    !KU( senc(<oname_sealed, x, index_req>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.2
  solved goal nr. 5 (precomputed):
    !KU( senc(<oname_sealed, x, ('1'+x.1)>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.2
  solved goal nr. 12 (directly):
    RCHR_data_req( ~ra_r_key, ('1'+'1'+'1'),
                   senc(<'RCHR_data_req', ('1'+'1'+'1')>, ~ra_r_key),
                   senc(h(senc(<'RCHR_data_req', ('1'+'1'+'1')>, ~ra_r_key)),
                        ~ra_r_key)
    ) @ #rchr_data_req_111
  solved goal nr. 100 (precomputed): !DB_index( ptr.2, '1' ) ▶₂ #vr.1
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 51 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  solved goal nr. 50 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.24
  simplified formula:
      "((#i < #j.24) ∨ (#j.24 < #i))"
    to
      "⊤"
  solved goal nr. 51 (simplified): (#i < #j.24)  ∥ (#j.24 < #i)
  simplified formula:
      "((#vk.14 = #i) ∨ (#i < #vk.14))"
    to
      "⊥"
  solved goal nr. 32 (simplified): (#vk.14 = #i)  ∥ (#i < #vk.14)
  solved goal nr. 71 (precomputed):
    EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
             ('1'+i)
    ) ▶₁ #E_r_data_resp
  solved goal nr. 135 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ~ptr, '1'
    ) ▶₁ #incMC
  simplified formula:
      "((#vk.14 = #i) ∨ (#i < #vk.14))"
    to
      "⊥"
  solved goal nr. 36 (simplified): (#vk.14 = #i)  ∥ (#i < #vk.14)
  simplified formula:
      "((#vr.12 = #i) ∨ (#i < #vr.12))"
    to
      "⊥"
  solved goal nr. 44 (simplified): (#vr.12 = #i)  ∥ (#i < #vr.12)
  simplified formula:
      "((#vr.12 = #i) ∨ (#i < #vr.12))"
    to
      "⊥"
  solved goal nr. 43 (simplified): (#vr.12 = #i)  ∥ (#i < #vr.12)
  simplified formula:
      "((last(#vr.23)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
  simplified formula:
      "((last(#vr.23)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
  solved goal nr. 45 (simplified):
     (last(#vr.23))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                     ~ra_o_key.17)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.23))
  solved goal nr. 44 (simplified):
     (last(#vr.23))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                     ~ra_o_key.17)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.23))
  simplified formula:
      "((last(#vr.23)) ∨
        (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
    to
      "((∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
  simplified formula:
      "((last(#vr.23)) ∨
        (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
    to
      "((∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                        ~ra_o_key.17)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.23)))"
  solved goal nr. 46 (simplified):
     (last(#vr.23))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                     ~ra_o_key.17)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.23))
  solved goal nr. 45 (simplified):
     (last(#vr.23))  ∥
     (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.23))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, x>,
                                     ~ra_o_key.17)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.23))
  solved goal nr. 182 (precomputed):
    !DB_index( ~ptr.1, '1' ) ▶₂ #db_store
  solved goal nr. 89 (precomputed): !Indexes( ('1'+'1') ) ▶₀ #vr
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 45 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 46 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 43 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 44 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  solved goal nr. 16 (precomputed):
    !KU( senc(<'RCHR_data_resp', data_rvcd.1>, ~ra_r_key.1) ) @ #vk.7
  solved goal nr. 76 (precomputed): !KU( ~ra_r_key ) @ #vk.21
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 45 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 43 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( oname_rcvd.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  solved goal nr. 46 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                         data_rcvd.12>,
                                        ~ra_o_key.21)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 44 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( data_rcvd.12 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.11, 
                                      data_rcvd.12>,
                                     ~ra_o_key.21)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  solved goal nr. 73 (precomputed): !KU( ~ra_o_key.2 ) @ #vk.10
  solved goal nr. 33 (precomputed):
    !KU( senc(<'upload', ~oname, ~data>, ~ra_o_key) ) @ #vk.1
  solved goal nr. 73 (precomputed):
    Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp
  simplified formula:
      "((last(#vr.12)) ∨
        (∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
    to
      "((∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
  simplified formula:
      "((last(#vr.12)) ∨
        (∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
    to
      "((∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
  solved goal nr. 40 (simplified):
     (last(#vr.12))  ∥
     (∃ #j.
       (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 38 (simplified):
     (last(#vr.12))  ∥
     (∃ #j.
       (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 101 (precomputed):
    !DB_index( ptr.2, ('1'+'1') ) ▶₂ #vr.1
  solved goal nr. 101 (precomputed):
    !DB_index( ptr.2, ('1'+'1') ) ▶₂ #vr.1
  solved goal nr. 90 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.65, '1'
    ) @ #j.66
  simplified formula:
      "((last(#vr.12)) ∨
        (∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
    to
      "((∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
  simplified formula:
      "((last(#vr.12)) ∨
        (∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
    to
      "((∃ #j.
          (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                            ~ra_r_key.13)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.12)))"
  solved goal nr. 39 (simplified):
     (last(#vr.12))  ∥
     (∃ #j.
       (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 41 (simplified):
     (last(#vr.12))  ∥
     (∃ #j.
       (!KU( index_req.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.11>,
                                         ~ra_r_key.13)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((last(#vr.13)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.13))"
    to
      "#vr.27 = #vr.13"
  solved goal nr. 88 (simplified):
     (last(#vr.13))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.13)
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.13)) ∨ (#vr.13 = #vr.27))"
    to
      "#vr.13 = #vr.27"
  solved goal nr. 87 (simplified):
     (last(#vr.27))  ∥ (last(#vr.13))  ∥ (#vr.13 = #vr.27)
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.27))"
    to
      "⊤"
  solved goal nr. 89 (simplified):
     (last(#vr.27))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.27)
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 44 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                       index_req.15>,
                                      h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((last(#vr.25)) ∨
        (∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
    to
      "((∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
  solved goal nr. 43 (simplified):
     (last(#vr.25))  ∥
     (∃ #j.
       (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                         ~ra_r_key.12)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.25))
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 46 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                       index_req.15>,
                                      h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((last(#vr.25)) ∨
        (∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
    to
      "((∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
  solved goal nr. 45 (simplified):
     (last(#vr.25))  ∥
     (∃ #j.
       (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                         ~ra_r_key.12)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.25))
  solved goal nr. 140 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptrMC2, ('1'+'1')
    ) ▶₁ #incMC
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  simplified formula:
      "((last(#vr.13)) ∨
        (∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
    to
      "((∃ #j.
          (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                          index_req.15>,
                                         h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.13)))"
  solved goal nr. 47 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                       index_req.15>,
                                      h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 45 (simplified):
     (last(#vr.13))  ∥
     (∃ #j.
       (!KU( data_sealed.11 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.14, data_sealed.11, 
                                       index_req.15>,
                                      h(<~platform_sec.16, ~mrsigner.17, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((last(#vr.25)) ∨
        (∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
    to
      "((∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
  simplified formula:
      "((last(#vr.25)) ∨
        (∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
    to
      "((∃ #j.
          (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                            ~ra_r_key.12)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.25)))"
  solved goal nr. 46 (simplified):
     (last(#vr.25))  ∥
     (∃ #j.
       (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                         ~ra_r_key.12)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.25))
  solved goal nr. 44 (simplified):
     (last(#vr.25))  ∥
     (∃ #j.
       (!KU( index_req.15 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.25))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.15>,
                                         ~ra_r_key.12)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.25))
  solved goal nr. 202 (precomputed): !KU( ~ra_o_key ) @ #vk.21
  solved goal nr. 34 (precomputed):
    !KU( senc(h(senc(<'upload', ~oname, ~data>, ~ra_o_key)), ~ra_o_key)
    ) @ #vk.2
  solved goal nr. 234 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.76, '1'
    ) @ #j.77
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                       index_req.1>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 48 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 48 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 46 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                       index_req.1>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  simplified formula:
      "((#i < #j.19) ∨ (#j.19 < #i))"
    to
      "⊤"
  solved goal nr. 45 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 42 (simplified): (#i < #j.19)  ∥ (#j.19 < #i)
  solved goal nr. 40 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                     ~ra_r_key.1)
    ) @ #j.20
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                   index_req.1>,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 48 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  solved goal nr. 48 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 41 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                     ~ra_r_key.1)
    ) @ #j.19
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 48 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                   index_req.1>,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.21
  simplified formula:
      "((#i < #j.19) ∨ (#j.19 < #i))"
    to
      "⊤"
  solved goal nr. 42 (simplified): (#i < #j.19)  ∥ (#j.19 < #i)
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 41 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 48 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 21 (precomputed):
    !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.12
  solved goal nr. 94 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.21
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 42 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  simplified formula:
      "((#i < #j.19) ∨ (#j.19 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 50 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 44 (simplified): (#i < #j.19)  ∥ (#j.19 < #i)
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.20
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 43 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.19
  solved goal nr. 49 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 50 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 50 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  simplified formula:
      "((#i < #j.19) ∨ (#j.19 < #i))"
    to
      "⊤"
  solved goal nr. 44 (simplified): (#i < #j.19)  ∥ (#j.19 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 46 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  solved goal nr. 50 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 50 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 49 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                   index_req>,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 49 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  solved goal nr. 50 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 49 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 50 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 50 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 48 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.8))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 51 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 50 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, 
                                   index_req>,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 51 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 40 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+'1')>, ~ra_r_key) ) @ #vk.4
  solved goal nr. 204 (precomputed): !KU( ~ra_o_key ) @ #vk.21
  solved goal nr. 126 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave.25>, ~mcid.26, ptr.62, '1'
    ) @ #j.63
  solved goal nr. 49 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 48 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.14))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 56 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 52 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 39 (directly):
     (∃ #j.
       (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  solved goal nr. 55 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.21
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 56 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 51 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key)
    ) @ #j.23
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 52 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.1)
    ) @ #j.25
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 10 (directly):
    PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ~ptr,
                          ptrMC2, ('1'+'1')
    ) @ #incMC1
  solved goal nr. 167 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
    ) ▶₀ #incMC1
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  solved goal nr. 221 (precomputed):
    !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.1)
    ) @ #vk.24
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 46 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 45 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.23
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 46 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 206 (precomputed): !KU( ~ra_r_key ) @ #vk.21
  solved goal nr. 41 (precomputed):
    !KU( senc(h(senc(<'RCHR_data_req', ('1'+'1')>, ~ra_r_key)),
              ~ra_r_key)
    ) @ #vk.5
  solved goal nr. 46 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 43 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, index_req
    ) ▶₀ #j
  solved goal nr. 46 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 43 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, ('1'+'1')
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 64 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                      data_rcvd.32>,
                                     ~ra_o_key.33)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 65 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                      data_rcvd.32>,
                                     ~ra_o_key.33)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 63 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 64 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  solved goal nr. 11 (directly):
    E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id.1,
                ~ra_o_key, ~data.1, ~oname, ~mcid, ('1'+'1'), sealed_e_return1
    ) @ #e_o_upload1
  solved goal nr. 54 (precomputed):
    !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.2) ) @ #vk.7
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 68 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 182 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                           ~mc_session.3, ('1'+'1')
    ) ▶₀ #e_o_upload1
  solved goal nr. 194 (precomputed):
    !DB_index( ptrIndex2, ('1'+'1') ) ▶₂ #db_store
  solved goal nr. 53 (precomputed):
    !KU( senc(<~oname, ~data, ('1'+'1')>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.11
  solved goal nr. 239 (precomputed): !KU( ~ra_o_key.1 ) @ #vk.27
  solved goal nr. 208 (precomputed): !KU( ~ra_r_key ) @ #vk.21
  solved goal nr. 198 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.76, '1'
    ) @ #j.77
  solved goal nr. 67 (directly):
     (∃ #j.
       (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 224 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave.34>, ~mcid.35, ptr.71, '1'
    ) @ #j.72
  solved goal nr. 73 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 208 (precomputed): !Indexes( '1' ) ▶₀ #vr.7
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 145 (precomputed): !KU( ~ra_r_key ) @ #vk.27
  solved goal nr. 58 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 73 (precomputed): !KU( ~ra_o_key.2 ) @ #vk.10
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 85 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 88 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 84 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 14 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old2,
                  ('1'+valMC)
    ) ▶₁ #j
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 183 (precomputed):
    EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id.1,
             ~mc_session.3, ~ra_o_key, ~data.1, ~oname, ~mcid
    ) ▶₁ #e_o_upload1
  solved goal nr. 211 (precomputed): !KU( ~oname ) @ #vk.23
  solved goal nr. 60 (precomputed):
    !KU( senc(<'RCHR_data_resp', ~data>, ~ra_r_key) ) @ #vk.16
  solved goal nr. 90 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.65, '1'
    ) @ #j.66
  simplified formula:
      "((last(#vr.13)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.13))"
    to
      "#vr.27 = #vr.13"
  solved goal nr. 88 (simplified):
     (last(#vr.13))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.13)
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.13)) ∨ (#vr.13 = #vr.27))"
    to
      "#vr.13 = #vr.27"
  solved goal nr. 87 (simplified):
     (last(#vr.27))  ∥ (last(#vr.13))  ∥ (#vr.13 = #vr.27)
  simplified formula:
      "((last(#vr.27)) ∨ (last(#vr.27)) ∨ (#vr.27 = #vr.27))"
    to
      "⊤"
  solved goal nr. 89 (simplified):
     (last(#vr.27))  ∥ (last(#vr.27))  ∥ (#vr.27 = #vr.27)
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 85 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 84 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 236 (directly):
    PSE_CreateMC( <~platform_sec.35, ~mrenclave.38>, ~mcid.39, ptr.77,
                  '1'
    ) @ #j.78
  solved goal nr. 140 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptrMC2, ('1'+'1')
    ) ▶₁ #incMC
  solved goal nr. 13 (directly):
    PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ~ptr_new,
                          ptrMC3, ('1'+'1'+'1')
    ) @ #incMC2
  solved goal nr. 233 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.77, '1'
    ) @ #j.78
  solved goal nr. 65 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 67 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 214 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
    ) ▶₀ #incMC2
  solved goal nr. 61 (precomputed):
    !KU( senc(h(senc(<'RCHR_data_resp', ~data>, ~ra_r_key)), ~ra_r_key)
    ) @ #vk.17
  solved goal nr. 235 (directly):
    PSE_CreateMC( <~platform_sec.35, ~mrenclave.38>, ~mcid.39, ptr.76,
                  '1'
    ) @ #j.77
  solved goal nr. 66 (directly):
     (∃ #j.
       (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 149 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+'1')>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+valMC)>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 150 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.37, sealed_e_return_t.38
    ) @ #E_r_data_reply_ex_t.39
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 147 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.27
  solved goal nr. 220 (precomputed):
    !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.1)
    ) @ #vk.24
  solved goal nr. 14 (directly):
    E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                ~ra_o_key.1, ~data, ~oname, ~mcid, ('1'+'1'+'1'),
                senc(<oname_sealed, ~data, ('1'+'1')>,
                     h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #e_o_upload2
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 151 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 150 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.37,
                       sealed_e_return_t.38
    ) @ #E_r_data_reply_ex_t.39
  solved goal nr. 235 (directly):
    PSE_CreateMC( <~platform_sec.35, ~mrenclave.38>, ~mcid.39, ptr.77,
                  '1'
    ) @ #j.78
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 151 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 66 (precomputed):
    Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve
  solved goal nr. 247 (directly):
    PSE_CreateMC( <~platform_sec.37, ~mrenclave.39>, ~mcid.51, ptr.96,
                  '1'
    ) @ #j.97
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 248 (directly):
    PSE_CreateMC( <~platform_sec.37, ~mrenclave.39>, ~mcid.52, ptr.95,
                  '1'
    ) @ #j.96
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 84 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 83 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 9 (directly):
    E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_o_key,
                ~data, ~oname, ~mcid, ('1'+'1'),
                senc(<oname_sealed, ~data, ('1'+i)>,
                     h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #e_o_upload
  solved goal nr. 71 (precomputed):
    EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
             ('1'+i)
    ) ▶₁ #E_r_data_resp
  solved goal nr. 238 (precomputed): !KU( ~ra_o_key.1 ) @ #vk.27
  solved goal nr. 194 (precomputed):
    !DB_index( ptrIndex2, ('1'+'1') ) ▶₂ #db_store
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 84 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 83 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 85 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 154 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                           ~mc_session.2, ('1'+'1')
    ) ▶₀ #e_o_upload
  solved goal nr. 174 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.70, '1'
    ) @ #j.71
  solved goal nr. 213 (precomputed): !DB_index( ptr.3, '1' ) ▶₂ #vr.8
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 46 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.22
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 47 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 73 (precomputed):
    Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp
  solved goal nr. 58 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 133 (precomputed): !KU( ~ra_r_key ) @ #vk.30
  solved goal nr. 155 (precomputed):
    EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
             ~mc_session.2, ~ra_o_key, ~data, ~oname, ~mcid
    ) ▶₁ #e_o_upload
  solved goal nr. 224 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old, '1'
    ) ▶₁ #vr.14
  solved goal nr. 44 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, index_req
    ) ▶₀ #j
  solved goal nr. 44 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, ('1'+x.1)
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 65 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 66 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 64 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 65 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 11 (directly):
    DB_store( ~p_id, ~ptr.1, '1', ptrIndex2, ('1'+'1'),
              senc(<~oname, ~data, ('1'+'1')>,
                   h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #db_store
  solved goal nr. 10 (directly):
    PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ~ptr,
                          ptrMC2, ('1'+'1')
    ) @ #incMC1
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 190 (precomputed):
    Start_thread_db_upload( ~p_id ) ▶₁ #db_store
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 243 (precomputed):
    !DB_index( ptr.5, '1' ) ▶₂ #vr.20
  solved goal nr. 172 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
    ) ▶₀ #incMC1
  solved goal nr. 12 (directly):
    RCHR_data_req( ~ra_r_key, ('1'+'1'),
                   senc(<'RCHR_data_req', ('1'+'1')>, ~ra_r_key),
                   senc(h(senc(<'RCHR_data_req', ('1'+'1')>, ~ra_r_key)), ~ra_r_key)
    ) @ #rchr_data_req_11
  solved goal nr. 135 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.30
  solved goal nr. 33 (precomputed):
    !KU( senc(<'upload', ~oname, ~data>, ~ra_o_key) ) @ #vk.3
  solved goal nr. 144 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+'1')>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+x)>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 145 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.31, sealed_e_return_t.32
    ) @ #E_r_data_reply_ex_t.33
  solved goal nr. 68 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 74 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 68 (directly):
     (∃ #j.
       (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 146 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 11 (directly):
    E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id.1,
                ~ra_o_key, ~data.1, ~oname, ~mcid, ('1'+'1'), sealed_e_return1
    ) @ #e_o_upload1
  solved goal nr. 71 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 145 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.31,
                       sealed_e_return_t.32
    ) @ #E_r_data_reply_ex_t.33
  solved goal nr. 89 (precomputed): !Indexes( '1' ) ▶₀ #vr
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 146 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 187 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                           ~mc_session.3, ('1'+'1')
    ) ▶₀ #e_o_upload1
  solved goal nr. 229 (precomputed): !KU( ~ra_r_key ) @ #vk.21
  solved goal nr. 245 (precomputed): !KU( ~ra_r_key ) @ #vk.21
  solved goal nr. 203 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.75, '1'
    ) @ #j.76
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 86 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 85 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 89 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 34 (precomputed):
    !KU( senc(h(senc(<'upload', ~oname, ~data>, ~ra_o_key)), ~ra_o_key)
    ) @ #vk.4
  solved goal nr. 188 (precomputed):
    EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id.1,
             ~mc_session.3, ~ra_o_key, ~data.1, ~oname, ~mcid
    ) ▶₁ #e_o_upload1
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 256 (precomputed): !KU( ~ra_o_key ) @ #vk.29
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 86 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 85 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 46 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 46 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 68 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 13 (directly):
    PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ~ptr_new,
                          ptrMC3, ('1'+'1'+'1')
    ) @ #incMC2
  solved goal nr. 219 (precomputed):
    Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
    ) ▶₀ #incMC2
  solved goal nr. 40 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+'1'+'1')>, ~ra_r_key) ) @ #vk.6
  solved goal nr. 258 (precomputed): !KU( ~ra_o_key ) @ #vk.29
  solved goal nr. 67 (directly):
     (∃ #j.
       (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 133 (precomputed): !KU( ~ra_r_key ) @ #vk.30
  solved goal nr. 58 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 14 (directly):
    E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                ~ra_o_key.1, ~data, ~oname, ~mcid, ('1'+'1'+'1'),
                senc(<oname_sealed, ~data, ('1'+i)>,
                     h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #e_o_upload2
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 234 (precomputed):
    Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                           ~mc_session.3, ('1'+'1'+'1')
    ) ▶₀ #e_o_upload2
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 85 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 84 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 257 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.76, '1'
    ) @ #j.77
  solved goal nr. 41 (precomputed):
    !KU( senc(h(senc(<'RCHR_data_req', ('1'+'1'+'1')>, ~ra_r_key)),
              ~ra_r_key)
    ) @ #vk.7
  solved goal nr. 260 (precomputed): !KU( ~ra_r_key ) @ #vk.29
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 85 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 84 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 86 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 235 (precomputed):
    EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
             ~mc_session.3, ~ra_o_key.1, ~data, ~oname, ~mcid
    ) ▶₁ #e_o_upload2
  solved goal nr. 138 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.32
  solved goal nr. 140 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+'1')>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+valMC)>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 141 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.30, sealed_e_return_t.31
    ) @ #E_r_data_reply_ex_t.32
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 142 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 141 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.30,
                       sealed_e_return_t.31
    ) @ #E_r_data_reply_ex_t.32
  solved goal nr. 43 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, ('1'+'1')
    ) ▶₀ #j
  solved goal nr. 43 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, index_req
    ) ▶₀ #j
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 142 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 16 (directly):
    DB_store( ~p_id.1, ~ptr.1, '1', ptrIndex2, ('1'+'1'),
              senc(<~oname, ~data, ('1'+'1'+'1')>,
                   h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #db_store1
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 63 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 64 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                      data_rcvd.32>,
                                     ~ra_o_key.33)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 64 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 65 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                      data_rcvd.32>,
                                     ~ra_o_key.33)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  solved goal nr. 53 (precomputed):
    !KU( senc(<~oname, ~data, ('1'+'1'+'1')>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.13
  solved goal nr. 66 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 263 (precomputed): !KU( ~ra_r_key ) @ #vk.29
  solved goal nr. 68 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 273 (precomputed):
    Start_thread_db_upload( ~p_id.1 ) ▶₁ #db_store1
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 280 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave.60>, ~mcid.61, ptr.97, '1'
    ) @ #j.98
  solved goal nr. 121 (precomputed): !KU( ~ra_r_key ) @ #vk.33
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 58 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 17 (directly):
    DB_store( ~p_id, ~ptr_new, ('1'+'1'), ptrIndex3, ('1'+'1'+'1'),
              senc(<~oname, ~data, ('1'+'1'+'1')>,
                   h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #db_store2
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 286 (precomputed):
    Start_thread_db_upload( ~p_id ) ▶₁ #db_store2
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 88 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 85 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 84 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 126 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.34
  solved goal nr. 267 (precomputed): !KU( ~oname ) @ #vk.31
  solved goal nr. 135 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+'1')>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+x)>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 136 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.34, sealed_e_return_t.35
    ) @ #E_r_data_reply_ex_t.36
  solved goal nr. 60 (precomputed):
    !KU( senc(<'RCHR_data_resp', ~data>, ~ra_r_key) ) @ #vk.18
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 137 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 18 (directly):
    RCHR_data_req( ~ra_r_key, ('1'+'1'+'1'),
                   senc(<'RCHR_data_req', ('1'+'1'+'1')>, ~ra_r_key),
                   senc(h(senc(<'RCHR_data_req', ('1'+'1'+'1')>, ~ra_r_key)),
                        ~ra_r_key)
    ) @ #rchr_data_req_111
  solved goal nr. 136 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.34,
                       sealed_e_return_t.35
    ) @ #E_r_data_reply_ex_t.36
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 137 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 85 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 84 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 293 (directly):
    PSE_CreateMC( <~platform_sec.61, ~mrenclave.64>, ~mcid.65, ptr.103,
                  '1'
    ) @ #j.104
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 65 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 67 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 122 (precomputed): !Indexes( ('1'+'1') ) ▶₀ #vr
  solved goal nr. 46 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 46 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 72 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 292 (directly):
    PSE_CreateMC( <~platform_sec.61, ~mrenclave.64>, ~mcid.65, ptr.102,
                  '1'
    ) @ #j.103
  solved goal nr. 285 (precomputed): !KU( ~ra_r_key ) @ #vk.29
  solved goal nr. 61 (precomputed):
    !KU( senc(h(senc(<'RCHR_data_resp', ~data>, ~ra_r_key)), ~ra_r_key)
    ) @ #vk.19
  solved goal nr. 134 (precomputed):
    !DB_index( ptr.2, ('1'+'1') ) ▶₂ #vr.1
  solved goal nr. 134 (precomputed):
    !DB_index( ptr.2, ('1'+'1') ) ▶₂ #vr.1
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 173 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ~ptr, '1'
    ) ▶₁ #incMC1
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 84 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 83 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 292 (directly):
    PSE_CreateMC( <~platform_sec.61, ~mrenclave.64>, ~mcid.65, ptr.103,
                  '1'
    ) @ #j.104
  solved goal nr. 304 (directly):
    PSE_CreateMC( <~platform_sec.63, ~mrenclave.65>, ~mcid.77, ptr.122,
                  '1'
    ) @ #j.123
  solved goal nr. 145 (precomputed): !KU( ~ra_r_key ) @ #vk.27
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 60 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC.1)>, ~ra_r_key.1) ) @ #vk.18
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 85 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 84 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 83 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 305 (directly):
    PSE_CreateMC( <~platform_sec.63, ~mrenclave.65>, ~mcid.78, ptr.121,
                  '1'
    ) @ #j.122
  solved goal nr. 220 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ~ptr_new.2,
                  ('1'+'1')
    ) ▶₁ #incMC2
  solved goal nr. 330 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.83, '1'
    ) @ #j.84
  solved goal nr. 44 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, ('1'+x.1)
    ) ▶₀ #j
  solved goal nr. 44 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, index_req
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 65 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 66 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 64 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 65 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  solved goal nr. 221 (precomputed):
    !KU( senc(h(senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.1)),
              ~ra_o_key.1)
    ) @ #vk.26
  solved goal nr. 303 (precomputed): !KU( ~ra_r_key ) @ #vk.29
  solved goal nr. 67 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 274 (precomputed):
    !DB_index( ~ptr.1, '1' ) ▶₂ #db_store1
  solved goal nr. 149 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+valMC)>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+'1')>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 150 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.37, sealed_e_return_t.38
    ) @ #E_r_data_reply_ex_t.39
  solved goal nr. 149 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.27
  solved goal nr. 68 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 68 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 74 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 287 (precomputed):
    !DB_index( ~ptr_new, ('1'+'1') ) ▶₂ #db_store2
  solved goal nr. 71 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 151 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 150 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.37,
                       sealed_e_return_t.38
    ) @ #E_r_data_reply_ex_t.39
  solved goal nr. 321 (precomputed): !KU( ~ra_o_key.1 ) @ #vk.29
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 151 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 86 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 85 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 301 (precomputed): !Indexes( '1' ) ▶₀ #vr.7
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 89 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 173 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ~ptr, '1'
    ) ▶₁ #incMC1
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 86 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 85 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 220 (precomputed):
    !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ~ptr_new.2,
                  ('1'+'1')
    ) ▶₁ #incMC2
  solved goal nr. 329 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave>, ~mcid, ptr.84, '1'
    ) @ #j.85
  solved goal nr. 66 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 60 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1) ) @ #vk.18
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 68 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 133 (precomputed): !KU( ~ra_r_key ) @ #vk.30
  solved goal nr. 274 (precomputed):
    !DB_index( ~ptr.1, '1' ) ▶₂ #db_store1
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 73 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 287 (precomputed):
    !DB_index( ~ptr_new, ('1'+'1') ) ▶₂ #db_store2
  solved goal nr. 137 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.30
  solved goal nr. 140 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+valMC)>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+'1')>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 141 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.30, sealed_e_return_t.31
    ) @ #E_r_data_reply_ex_t.32
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 142 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 141 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.30,
                       sealed_e_return_t.31
    ) @ #E_r_data_reply_ex_t.32
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 85 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 84 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 142 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 306 (precomputed): !DB_index( ptr.3, '1' ) ▶₂ #vr.8
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 86 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 85 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 84 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 44 (precomputed):
    !KU( senc(<'upload', ~oname, ~data.1>, ~ra_o_key) ) @ #vk.1
  solved goal nr. 46 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 46 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 40 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 34 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 36 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 35 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.23
  solved goal nr. 40 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, 
                                       index_req>,
                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.7))
  solved goal nr. 37 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 35 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.22
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 44 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 36 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 42 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.25
  solved goal nr. 43 (directly):
    AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req
                                  >,
                                  h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #j.22
  solved goal nr. 36 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.21
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 43 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 44 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 37 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 45 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 44 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.25
  simplified formula:
      "((#i < #j.25) ∨ (#j.25 < #i))"
    to
      "⊤"
  solved goal nr. 45 (simplified): (#i < #j.25)  ∥ (#j.25 < #i)
  solved goal nr. 348 (precomputed): !KU( ~ra_o_key ) @ #vk.27
  solved goal nr. 45 (precomputed):
    !KU( senc(h(senc(<'upload', ~oname, ~data.1>, ~ra_o_key)),
              ~ra_o_key)
    ) @ #vk.2
  solved goal nr. 41 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 48 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 133 (precomputed): !KU( ~ra_r_key ) @ #vk.30
  solved goal nr. 47 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.23
  simplified formula:
      "((#i < #j.23) ∨ (#j.23 < #i))"
    to
      "⊤"
  solved goal nr. 48 (simplified): (#i < #j.23)  ∥ (#j.23 < #i)
  solved goal nr. 60 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 45 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, index_req
    ) ▶₀ #j
  solved goal nr. 45 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, ('1'+'1')
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 66 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( oname_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                      data_rcvd.32>,
                                     ~ra_o_key.33)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.30)) ∨
        (∃ #j.
          (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                         data_rcvd.32>,
                                        ~ra_o_key.33)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.30)))"
  solved goal nr. 67 (simplified):
     (last(#vr.30))  ∥
     (∃ #j.
       (!KU( data_rcvd.32 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.30))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.31, 
                                      data_rcvd.32>,
                                     ~ra_o_key.33)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.30))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 65 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 66 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  solved goal nr. 350 (precomputed): !KU( ~ra_o_key ) @ #vk.27
  solved goal nr. 50 (precomputed):
    !KU( senc(<'upload', ~oname, ~data>, ~ra_o_key.1) ) @ #vk.4
  solved goal nr. 68 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 144 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.33
  solved goal nr. 144 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+x)>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+'1')>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 145 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.31, sealed_e_return_t.32
    ) @ #E_r_data_reply_ex_t.33
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 146 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 145 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.31,
                       sealed_e_return_t.32
    ) @ #E_r_data_reply_ex_t.33
  solved goal nr. 69 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 75 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 69 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 146 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 72 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 352 (precomputed): !KU( ~ra_o_key.1 ) @ #vk.27
  solved goal nr. 51 (precomputed):
    !KU( senc(h(senc(<'upload', ~oname, ~data>, ~ra_o_key.1)),
              ~ra_o_key.1)
    ) @ #vk.5
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 46 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 46 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 90 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 89 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 121 (precomputed): !KU( ~ra_r_key ) @ #vk.33
  solved goal nr. 60 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 46 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 46 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 89 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 88 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 57 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+'1'+'1')>, ~ra_r_key) ) @ #vk.7
  solved goal nr. 354 (precomputed): !KU( ~ra_o_key.1 ) @ #vk.27
  solved goal nr. 67 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 132 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.35
  solved goal nr. 135 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+x)>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+'1')>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 136 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.34, sealed_e_return_t.35
    ) @ #E_r_data_reply_ex_t.36
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 137 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 136 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.34,
                       sealed_e_return_t.35
    ) @ #E_r_data_reply_ex_t.36
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 137 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 68 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 356 (precomputed): !KU( ~ra_r_key ) @ #vk.27
  solved goal nr. 68 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 58 (precomputed):
    !KU( senc(h(senc(<'RCHR_data_req', ('1'+'1'+'1')>, ~ra_r_key)),
              ~ra_r_key)
    ) @ #vk.8
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 74 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  solved goal nr. 71 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.35
  simplified formula:
      "((#i < #j.35) ∨ (#j.35 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.35)  ∥ (#j.35 < #i)
  simplified formula:
      "¬(('1'+'1') = ('1'+'1'))"
    to
      "⊥"
  solved goal nr. 46 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 46 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 85 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 89 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 88 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 26 (precomputed):
    !KU( senc(<oname_sealed.1, data_sealed, index_req_x.1>,
              h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #vk.13
  solved goal nr. 26 (precomputed):
    !KU( senc(<oname_sealed.1, data_sealed, index_req_x>,
              h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
    ) @ #vk.13
  solved goal nr. 133 (directly):
    PSE_CreateMC( <~platform_sec.1, ~mrenclave.29>, ~mcid.30, ptr.66,
                  '1'
    ) @ #j.67
  solved goal nr. 145 (directly):
    PSE_CreateMC( <~platform_sec.1, ~mrenclave.32>, ~mcid.33, ptr.69,
                  '1'
    ) @ #j.70
  solved goal nr. 46 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 46 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 359 (precomputed): !KU( ~ra_r_key ) @ #vk.27
  solved goal nr. 70 (precomputed):
    !KU( senc(<~oname, ~data, ('1'+'1'+'1')>,
              h(<~platform_sec, ~mrsigner, 'seal'>))
    ) @ #vk.14
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 86 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 88 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 85 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  simplified formula:
      "((last(#vr.35)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.35)))"
  solved goal nr. 87 (simplified):
     (last(#vr.35))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.35))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.35))
  solved goal nr. 376 (directly):
    PSE_CreateMC( <~platform_sec, ~mrenclave.51>, ~mcid.52, ptr.88, '1'
    ) @ #j.89
  solved goal nr. 42 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 48 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key)
    ) @ #j.22
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 49 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 47 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 47 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 46 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, index_req
    ) ▶₀ #j
  solved goal nr. 46 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                           ~mc_session.1, ('1'+x.1)
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 67 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 68 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 66 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 67 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  solved goal nr. 69 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 71 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 363 (precomputed): !KU( ~oname ) @ #vk.29
  solved goal nr. 77 (precomputed):
    !KU( senc(<'RCHR_data_resp', ~data>, ~ra_r_key) ) @ #vk.19
  solved goal nr. 70 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 70 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 74 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 73 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 74 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 61 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC.1)>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 150 (precomputed): !KU( ~ra_r_key ) @ #vk.27
  solved goal nr. 389 (directly):
    PSE_CreateMC( <~platform_sec.52, ~mrenclave.55>, ~mcid.56, ptr.94,
                  '1'
    ) @ #j.95
  solved goal nr. 47 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 91 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 47 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 90 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 388 (directly):
    PSE_CreateMC( <~platform_sec.52, ~mrenclave.55>, ~mcid.56, ptr.93,
                  '1'
    ) @ #j.94
  solved goal nr. 78 (precomputed):
    !KU( senc(h(senc(<'RCHR_data_resp', ~data>, ~ra_r_key)), ~ra_r_key)
    ) @ #vk.20
  solved goal nr. 381 (precomputed): !KU( ~ra_r_key ) @ #vk.27
  solved goal nr. 47 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 47 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 90 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 89 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 154 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.27
  solved goal nr. 156 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+valMC)>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+x)>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 157 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.36, sealed_e_return_t.37
    ) @ #E_r_data_reply_ex_t.38
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 158 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 157 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.36,
                       sealed_e_return_t.37
    ) @ #E_r_data_reply_ex_t.38
  solved goal nr. 388 (directly):
    PSE_CreateMC( <~platform_sec.52, ~mrenclave.55>, ~mcid.56, ptr.94,
                  '1'
    ) @ #j.95
  solved goal nr. 68 (directly):
     (∃ #j.
       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 158 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 400 (directly):
    PSE_CreateMC( <~platform_sec.54, ~mrenclave.56>, ~mcid.68, ptr.113,
                  '1'
    ) @ #j.114
  solved goal nr. 401 (directly):
    PSE_CreateMC( <~platform_sec.54, ~mrenclave.56>, ~mcid.69, ptr.112,
                  '1'
    ) @ #j.113
  solved goal nr. 69 (directly):
     (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 69 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                     ~ra_o_key.2)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 75 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 72 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                 ~ra_o_key.2)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "¬(('1'+valMC.36) = ('1'+valMC.36))"
    to
      "⊥"
  solved goal nr. 399 (precomputed): !KU( ~ra_r_key ) @ #vk.27
  solved goal nr. 47 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 47 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 90 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 89 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 86 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 61 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 138 (precomputed): !KU( ~ra_r_key ) @ #vk.30
  solved goal nr. 47 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  solved goal nr. 47 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 87 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 89 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key.1)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 88 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 86 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 42 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req
    ) ▶₀ #j
  solved goal nr. 42 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+'1')
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 63 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 64 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 62 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 63 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 65 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 151 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+valMC)>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+x)>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 142 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.30
  solved goal nr. 152 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.31, sealed_e_return_t.32
    ) @ #E_r_data_reply_ex_t.33
  solved goal nr. 67 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 153 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 152 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.31,
                       sealed_e_return_t.32
    ) @ #E_r_data_reply_ex_t.33
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 153 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  simplified formula:
      "¬(('1'+valMC.31) = ('1'+valMC.31))"
    to
      "⊥"
  solved goal nr. 47 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15
  solved goal nr. 43 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 47 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 87 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 86 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 43 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 84 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 83 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 43 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 86 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 85 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 43 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 84 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 83 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 61 (precomputed):
    !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 138 (precomputed): !KU( ~ra_r_key ) @ #vk.30
  solved goal nr. 64 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 67 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 66 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 67 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 65 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 65 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 68 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 151 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+x)>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+valMC)>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 152 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.31, sealed_e_return_t.32
    ) @ #E_r_data_reply_ex_t.33
  solved goal nr. 149 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.33
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 153 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 152 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.31,
                       sealed_e_return_t.32
    ) @ #E_r_data_reply_ex_t.33
  solved goal nr. 43 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 43 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 83 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 86 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 82 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 85 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 153 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 43 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 83 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 43 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 82 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 85 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 84 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "¬(('1'+valMC.31) = ('1'+valMC.31))"
    to
      "⊥"
  solved goal nr. 126 (precomputed): !KU( ~ra_r_key ) @ #vk.33
  solved goal nr. 61 (precomputed):
    !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1) ) @ #vk.18
  solved goal nr. 39 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.12))
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 46 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 45 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.20
  simplified formula:
      "((#i < #j.20) ∨ (#j.20 < #i))"
    to
      "⊤"
  solved goal nr. 46 (simplified): (#i < #j.20)  ∥ (#j.20 < #i)
  solved goal nr. 43 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req
    ) ▶₀ #j
  solved goal nr. 43 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+x.1)
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 64 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 65 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 63 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 64 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 68 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 146 (directly):
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
     (senc(<oname_sealed, data_rvcd, ('1'+x)>,
           h(<~platform_sec, ~mrsigner, 'seal'>)) =
      senc(<oname_sealed.1, data_sealed, ('1'+x.1)>,
           h(<~platform_sec.1, ~mrsigner.1, 'seal'>)))
  solved goal nr. 137 (precomputed): !KU( ~ra_r_key.1 ) @ #vk.35
  solved goal nr. 147 (directly):
    E_r_data_reply_ex( ~ra_r_key, index_req_t.35, sealed_e_return_t.36
    ) @ #E_r_data_reply_ex_t.37
  simplified formula:
      "((#E_r_data_reply_ex_x < #E_r_data_reply_ex_x) ∨
        (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x))"
    to
      "⊥"
  solved goal nr. 148 (simplified):
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)  ∥
     (#E_r_data_reply_ex_x < #E_r_data_reply_ex_x)
  solved goal nr. 147 (directly):
    E_r_data_reply_ex( ~ra_r_key.1, index_req_t.35,
                       sealed_e_return_t.36
    ) @ #E_r_data_reply_ex_t.37
  simplified formula:
      "((#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1) ∨
        (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1))"
    to
      "⊥"
  solved goal nr. 148 (simplified):
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)  ∥
     (#E_r_data_reply_ex_x.1 < #E_r_data_reply_ex_x.1)
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  simplified formula:
      "¬(('1'+x.35) = ('1'+x.35))"
    to
      "⊥"
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 85 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 88 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 84 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 87 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 85 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 87 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 84 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 86 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 65 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 67 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 84 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 87 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 83 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 86 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 86 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 84 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 85 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 83 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 43 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req
    ) ▶₀ #j
  solved goal nr. 43 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+'1')
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 64 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  simplified formula:
      "((last(#vr.26)) ∨
        (∃ #j.
          (!KU( oname_rcvd.27 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.27, 
                                         data_rcvd.28>,
                                        ~ra_o_key.29)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.27 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.27, 
                                         data_rcvd.28>,
                                        ~ra_o_key.29)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
  solved goal nr. 65 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 63 (simplified):
     (last(#vr.26))  ∥
     (∃ #j.
       (!KU( oname_rcvd.27 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.27, 
                                      data_rcvd.28>,
                                     ~ra_o_key.29)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.26))
  simplified formula:
      "((last(#vr.26)) ∨
        (∃ #j.
          (!KU( data_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.27, 
                                         data_rcvd.28>,
                                        ~ra_o_key.29)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.27, 
                                         data_rcvd.28>,
                                        ~ra_o_key.29)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.26)))"
  solved goal nr. 64 (simplified):
     (last(#vr.26))  ∥
     (∃ #j.
       (!KU( data_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.26))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.27, 
                                      data_rcvd.28>,
                                     ~ra_o_key.29)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.26))
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 68 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 85 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 84 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 88 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 87 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 85 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 87 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 84 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 86 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 65 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 67 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 68 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 87 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 84 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 86 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 83 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 44 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 86 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 84 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 85 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 83 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 44 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req
    ) ▶₀ #j
  solved goal nr. 44 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+x.1)
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 65 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 66 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 64 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 65 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  solved goal nr. 69 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.31
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 70 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  solved goal nr. 68 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 68 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 74 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  solved goal nr. 71 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.31
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 72 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 89 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 86 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 88 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 85 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 88 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 86 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 87 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 85 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 66 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  solved goal nr. 68 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.31
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 69 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  solved goal nr. 67 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.21))
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 73 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  solved goal nr. 70 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.31
  simplified formula:
      "((#i < #j.31) ∨ (#j.31 < #i))"
    to
      "⊤"
  solved goal nr. 71 (simplified): (#i < #j.31)  ∥ (#j.31 < #i)
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 85 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 88 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 84 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 87 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  solved goal nr. 45 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 87 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 86 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 85 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  simplified formula:
      "((last(#vr.31)) ∨
        (∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
    to
      "((∃ #j.
          (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                        >,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.31)))"
  solved goal nr. 84 (simplified):
     (last(#vr.31))  ∥
     (∃ #j.
       (!KU( oname_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.31))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed, data_sealed
                                     >,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.31))
  solved goal nr. 45 (directly):
     (∃ #j.
       (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 52 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 51 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                     ~ra_r_key.1)
    ) @ #j.22
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 52 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 49 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req.1
    ) ▶₀ #j
  solved goal nr. 49 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+'1')
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 70 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 69 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 71 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 70 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  solved goal nr. 72 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 75 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 74 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 75 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 50 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 50 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 91 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 94 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 90 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 93 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 50 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 50 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 93 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 91 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 92 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 90 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 71 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 74 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 73 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 74 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 72 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 72 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 75 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 50 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 50 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 90 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 89 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 93 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 92 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 50 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 50 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 92 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 90 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 91 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 89 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 46 (directly):
     (∃ #j.
       (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 53 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 52 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                     ~ra_r_key.1)
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 53 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 50 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req.1
    ) ▶₀ #j
  solved goal nr. 50 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+x.1)
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 71 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 72 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 70 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 71 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 75 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 80 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 95 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 91 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 91 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 72 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 75 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 74 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 75 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 91 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 90 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 91 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 90 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 47 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 54 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 53 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.22
  simplified formula:
      "((#i < #j.22) ∨ (#j.22 < #i))"
    to
      "⊤"
  solved goal nr. 54 (simplified): (#i < #j.22)  ∥ (#j.22 < #i)
  solved goal nr. 51 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req
    ) ▶₀ #j
  solved goal nr. 51 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+'1')
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 72 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( oname_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.29)) ∨
        (∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                         data_rcvd.31>,
                                        ~ra_o_key.32)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.29)))"
  solved goal nr. 73 (simplified):
     (last(#vr.29))  ∥
     (∃ #j.
       (!KU( data_rcvd.31 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.29))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.30, 
                                      data_rcvd.31>,
                                     ~ra_o_key.32)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.29))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 71 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 72 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 81 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 78 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 93 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 96 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 92 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 95 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 95 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 93 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 94 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 92 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 75 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 80 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.34
  simplified formula:
      "((#i < #j.34) ∨ (#j.34 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.34)  ∥ (#j.34 < #i)
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 92 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 95 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 91 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 94 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 94 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 92 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 93 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  simplified formula:
      "((last(#vr.34)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.34)))"
  solved goal nr. 91 (simplified):
     (last(#vr.34))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.34))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.34))
  solved goal nr. 48 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 55 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 54 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 55 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 52 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req
    ) ▶₀ #j
  solved goal nr. 52 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+x.1)
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 73 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 74 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 72 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 73 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 76 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 76 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 82 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 80 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 79 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 80 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 97 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 96 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 96 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 95 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 81 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 78 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 96 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 95 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 95 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 46 (directly):
     (∃ #j.
       (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 53 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 52 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                     ~ra_r_key.1)
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 53 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 50 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+'1')
    ) ▶₀ #j
  solved goal nr. 50 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req.1
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 71 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 70 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 72 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 71 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 75 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 80 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 95 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 91 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 91 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 72 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 75 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 74 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 75 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 91 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 90 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 51 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 91 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 90 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 47 (directly):
     (∃ #j.
       (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 54 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 53 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                     ~ra_r_key.1)
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 54 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 51 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req.1
    ) ▶₀ #j
  solved goal nr. 51 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+x.1)
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 72 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 71 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 73 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 72 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 81 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 79 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 78 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 96 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 93 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 95 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 92 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 95 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 93 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 94 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 92 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 73 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 75 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 76 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 80 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 92 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 95 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 91 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 94 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 52 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 94 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 93 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 92 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 91 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 48 (directly):
     (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                         ~ra_r_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.13))
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 55 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 54 (directly):
    AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                     ~ra_r_key.1)
    ) @ #j.21
  simplified formula:
      "((#i < #j.21) ∨ (#j.21 < #i))"
    to
      "⊤"
  solved goal nr. 55 (simplified): (#i < #j.21)  ∥ (#j.21 < #i)
  solved goal nr. 52 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req
    ) ▶₀ #j
  solved goal nr. 52 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+'1')
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 73 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 72 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( oname_rcvd.28 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 74 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.27)) ∨
        (∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                         data_rcvd.29>,
                                        ~ra_o_key.30)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.27)))"
  solved goal nr. 73 (simplified):
     (last(#vr.27))  ∥
     (∃ #j.
       (!KU( data_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.27))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.28, 
                                      data_rcvd.29>,
                                     ~ra_o_key.30)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.27))
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 76 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 76 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 82 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 80 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 79 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 80 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 97 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 96 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 96 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 95 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 74 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 76 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 77 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 81 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 78 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.33
  simplified formula:
      "((#i < #j.33) ∨ (#j.33 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.33)  ∥ (#j.33 < #i)
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 96 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 95 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 53 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 93 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 95 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  simplified formula:
      "((last(#vr.33)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.33)))"
  solved goal nr. 92 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 94 (simplified):
     (last(#vr.33))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.33))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.33))
  solved goal nr. 53 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, index_req
    ) ▶₀ #j
  solved goal nr. 53 (precomputed):
    Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                           ~mc_session, ('1'+x.2)
    ) ▶₀ #j
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 74 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 75 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 73 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( oname_rcvd.29 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  simplified formula:
      "((last(#vr.28)) ∨
        (∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
    to
      "((∃ #j.
          (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                         data_rcvd.30>,
                                        ~ra_o_key.31)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.28)))"
  solved goal nr. 74 (simplified):
     (last(#vr.28))  ∥
     (∃ #j.
       (!KU( data_rcvd.30 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.28))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.29, 
                                      data_rcvd.30>,
                                     ~ra_o_key.31)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.28))
  solved goal nr. 76 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 78 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 79 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 77 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  solved goal nr. 77 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 81 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 83 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 80 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 81 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 54 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 54 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 95 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 98 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 94 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 97 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 54 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 54 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 95 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 97 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 94 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 96 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 75 (directly):
     (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 77 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 78 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 76 (directly):
     (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 80 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 76 (directly):
     (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>,
                                     ~ra_o_key.1)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.22))
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 82 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 79 (directly):
    AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                 ~ra_o_key.1)
    ) @ #j.32
  simplified formula:
      "((#i < #j.32) ∨ (#j.32 < #i))"
    to
      "⊤"
  solved goal nr. 80 (simplified): (#i < #j.32)  ∥ (#j.32 < #i)
  solved goal nr. 54 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 54 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 94 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 93 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 97 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 96 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  solved goal nr. 54 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  solved goal nr. 54 (precomputed):
    EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
             ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
    ) ▶₁ #j
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 96 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 95 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j. (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 94 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
  simplified formula:
      "((last(#vr.32)) ∨
        (∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
    to
      "((∃ #j.
          (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32)) ∨
        (∃ #j.
          (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                         data_sealed>,
                                        ~ra_o_key)
           ) @ #j)
         ∧
          (¬(last(#j))) ∧ (#j < #vr.32)))"
  solved goal nr. 93 (simplified):
     (last(#vr.32))  ∥
     (∃ #j.
       (!KU( oname_sealed.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.32))  ∥
     (∃ #j.
       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_sealed.1, 
                                      data_sealed>,
                                     ~ra_o_key)
        ) @ #j)
      ∧
       (¬(last(#j))) ∧ (#j < #vr.32))
theory bi_safe begin

// Function signature and definition of the equational theory E

builtins: multiset
functions: fst/1, h/1, pair/2, sdec/2, senc/2, snd/1
equations:
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2



restriction Equality:
  "∀ x y #i. (Eql( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction MemoryCanBeFreedOnlyOnce:
  "∀ owner pointer pointer_new1 val_old1 val_new1 pointer_new2 val_old2
     val_new2 #i #j.
    ((Free( owner, pointer, pointer_new1, val_old1, val_new1 ) @ #i) ∧
     (Free( owner, pointer, pointer_new2, val_old2, val_new2 ) @ #j)) ⇒
    (#i = #j)"
  // safety formula

rule (modulo E) DO_setup[color=#145a32]:
   [ Fr( ~oname ) ] --[ DO_Setup( ~oname ) ]-> [ !OMem( ~oname ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DO_upload[color=#c8d6b9]:
   [ Fr( ~data ), Fr( ~ra_o_key ), !OMem( oname ) ]
  --[
  AUTO_OUT_0_1_DO_upload( senc(<'upload', oname, ~data>, ~ra_o_key) ),
  DO_upload( ~ra_o_key, ~data, oname,
             senc(<'upload', oname, ~data>, ~ra_o_key),
             senc(h(senc(<'upload', oname, ~data>, ~ra_o_key)), ~ra_o_key)
  )
  ]->
   [
   Out( <senc(<'upload', oname, ~data>, ~ra_o_key), 
         senc(h(senc(<'upload', oname, ~data>, ~ra_o_key)), ~ra_o_key)>
   ),
   RA_o_login( ~ra_o_key )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) L1_platform[color=#566573]:
   [ Fr( ~platform_sec ) ]
  --[ L1_platform( ~platform_sec ) ]->
   [ !L12( ~platform_sec ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) L2_mrsigner_mrenclave[color=#566573]:
   [
   Fr( ~mrsigner ), Fr( ~mrenclave ), !L12( platform_sec ),
   Fr( ~mc_session )
   ]
  --[ L2_mrsigner_mrenclave( platform_sec, ~mrsigner, ~mrenclave ) ]->
   [
   Sgx_create_MC( <platform_sec, ~mrenclave>, ~mc_session ),
   L22( platform_sec, ~mrsigner, ~mrenclave, ~mc_session ), Out( ~mrsigner )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) PSE_CreateMC[color=#dbf6fa]:
   [ Fr( ~mcid ), Fr( ~ptr ), Sgx_create_MC( MC_owner_policy, label ) ]
  --[ PSE_CreateMC( MC_owner_policy, ~mcid, ~ptr, '1' ) ]->
   [
   !Priv_mem_ME( MC_owner_policy, ~mcid, ~ptr, '1' ),
   Sgx_create_MC_done( MC_owner_policy, label, ~mcid, '1' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) L2_MC[color=#566573]:
   [
   Sgx_create_MC_done( <platform_sec, ~mrenclave>, ~mc_session, mcid, valMC
   ),
   L22( platform_sec, ~mrsigner, ~mrenclave, ~mc_session )
   ]
  --[ L2_MC( platform_sec, ~mrsigner, ~mrenclave, mcid, valMC ) ]->
   [ !L23( platform_sec, ~mrsigner, ~mrenclave, mcid, valMC ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) L3_process[color=#566573]:
   [ !L23( platform_sec, mrsigner, mrenclave, mcid, valMC ), Fr( ~p_id ) ]
  --[ L3_process( platform_sec, mrsigner, mrenclave, ~p_id, mcid, valMC )
  ]->
   [
   Start_thread_e_upload( platform_sec, mrsigner, mrenclave, ~p_id, mcid ),
   Start_thread_db_upload( ~p_id ),
   Start_thread_e_data_req( platform_sec, mrsigner, mrenclave, ~p_id ),
   Start_thread_db_data_req( ~p_id )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) E_o_decrypt[color=#e5e8e8]:
   [
   In( <senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key), 
        senc(h(senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key)), ~ra_o_key)>
   ),
   Start_thread_e_upload( platform_sec, mrsigner, mrenclave, ~p_id, mcid ),
   RA_o_login( ~ra_o_key ), Fr( ~mc_session )
   ]
  --[
  E_o_decrypt( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_o_key,
               data_rcvd, oname_rcvd,
               senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key),
               senc(h(senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key)), ~ra_o_key),
               mcid
  ),
  AUTO_IN_2_1_E_o_decrypt( senc(<'upload', oname_rcvd, data_rcvd>,
                                ~ra_o_key),
                           data_rcvd
  ),
  AUTO_IN_1_1_E_o_decrypt( senc(<'upload', oname_rcvd, data_rcvd>,
                                ~ra_o_key),
                           oname_rcvd
  )
  ]->
   [
   Sgx_increment_MC( <platform_sec, mrenclave>, mcid, ~mc_session ),
   EPC_E_o( platform_sec, mrsigner, mrenclave, ~p_id, ~mc_session,
            ~ra_o_key, data_rcvd, oname_rcvd, mcid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) PSE_sgx_increment_MC[color=#dbf6fa]:
   [
   Sgx_increment_MC( MC_owner_policy, mcid, label ),
   !Priv_mem_ME( MC_owner_policy, mcid, ptr_old, valMC ), Fr( ~ptr_new )
   ]
  --[
  Free( mcid, ptr_old, ~ptr_new, valMC, ('1'+valMC) ),
  PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old, ~ptr_new,
                        ('1'+valMC)
  )
  ]->
   [
   Sgx_increment_MC_done( MC_owner_policy, mcid, label, ('1'+valMC) ),
   !Priv_mem_ME( MC_owner_policy, mcid, ~ptr_new, ('1'+valMC) )
   ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

rule (modulo E) E_o_upload[color=#e5e8e8]:
   [
   Sgx_increment_MC_done( <platform_sec, mrenclave>, mcid, ~mc_session,
                          valMC
   ),
   EPC_E_o( platform_sec, mrsigner, mrenclave, ~p_id, ~mc_session,
            ~ra_o_key, data_rcvd, oname_rcvd, mcid
   )
   ]
  --[
  E_o_upload( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_o_key,
              data_rcvd, oname_rcvd, mcid, valMC,
              senc(<oname_rcvd, data_rcvd, valMC>, h(<platform_sec, mrsigner, 'seal'>))
  ),
  AUTO_OUT_0_1_E_o_upload( senc(<oname_rcvd, data_rcvd, valMC>,
                                h(<platform_sec, mrsigner, 'seal'>))
  )
  ]->
   [
   Out( <'db_store', 
         senc(<oname_rcvd, data_rcvd, valMC>, h(<platform_sec, mrsigner, 'seal'>))
        >
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DB_setup[color=#df9881]:
   [ Fr( ~ptr ) ] --[ DB_setup( ~ptr, '1' ) ]-> [ !DB_index( ~ptr, '1' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DB_store[color=#f7e6c5]:
   [
   Fr( ~ptr_new ), Start_thread_db_upload( ~p_id ), !DB_index( ptr, i ),
   In( <'db_store', sealed_cipher> )
   ]
  --[
  Free( ~p_id, ptr, ~ptr_new, i, ('1'+i) ),
  DB_store( ~p_id, ptr, i, ~ptr_new, ('1'+i), sealed_cipher ),
  Stored_sealing( ('1'+i), sealed_cipher )
  ]->
   [ !DB_mem( ('1'+i), sealed_cipher ), !DB_index( ~ptr_new, ('1'+i) ) ]

  // loop breaker: [2]
  /* has exactly the trivial AC variant */

rule (modulo E) Start[color=#ecec57]:
   [ Fr( ~na ) ] --[ Start( ) ]-> [ !Indexes( ('1'+'1') ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Loop[color=#ecec57]:
   [ !Indexes( x ) ] --[ Loop( ) ]-> [ !Indexes( ('1'+x) ) ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) RCHR_data_req[color=#d2b4de]:
   [ !Indexes( index_req ), Fr( ~ra_r_key ) ]
  --[
  RCHR_data_req( ~ra_r_key, index_req,
                 senc(<'RCHR_data_req', index_req>, ~ra_r_key),
                 senc(h(senc(<'RCHR_data_req', index_req>, ~ra_r_key)), ~ra_r_key)
  ),
  RCHR_data_req( ~ra_r_key, index_req,
                 senc(<'RCHR_data_req', index_req>, ~ra_r_key),
                 senc(h(senc(<'RCHR_data_req', index_req>, ~ra_r_key)), ~ra_r_key)
  ),
  AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>, ~ra_r_key)
  )
  ]->
   [
   Out( <senc(<'RCHR_data_req', index_req>, ~ra_r_key), 
         senc(h(senc(<'RCHR_data_req', index_req>, ~ra_r_key)), ~ra_r_key)>
   ),
   RA_r_login( ~ra_r_key ), Mem_RCHR( ~ra_r_key, index_req )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) E_r_data_req[color=#b2babb]:
   [
   In( <senc(<'RCHR_data_req', index_req>, ~ra_r_key), 
        senc(h(senc(<'RCHR_data_req', index_req>, ~ra_r_key)), ~ra_r_key)>
   ),
   RA_r_login( ~ra_r_key ),
   Start_thread_e_data_req( platform_sec, mrsigner, mrenclave, ~p_id )
   ]
  --[
  E_r_data_req( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                index_req, senc(<'RCHR_data_req', index_req>, ~ra_r_key),
                senc(h(senc(<'RCHR_data_req', index_req>, ~ra_r_key)), ~ra_r_key)
  ),
  AUTO_IN_3_1_E_r_data_req( senc(<'RCHR_data_req', index_req>, ~ra_r_key),
                            index_req
  )
  ]->
   [
   Out( <'db_retrieve_req', index_req> ),
   EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key, index_req )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) DB_retrieve[color=#f7e6c5]:
   [
   In( <'db_retrieve', index_req> ), !DB_mem( index_req, sealed_cipher ),
   Start_thread_db_data_req( ~p_id )
   ]
  --[ DB_retrieve( ~p_id, index_req, sealed_cipher ) ]->
   [ Out( <'db_retrieve_resp', sealed_cipher> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) E_r_data_resp[color=#b2babb]:
   [
   In( <'db_retrieve_resp', 
        senc(<oname_sealed, data_sealed, index_sealed>,
             h(<platform_sec, mrsigner, 'seal'>))
       >
   ),
   EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key, index_req )
   ]
  --[
  E_r_data_resp( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                 index_sealed, data_sealed,
                 senc(<oname_sealed, data_sealed, index_sealed>,
                      h(<platform_sec, mrsigner, 'seal'>)),
                 senc(<'RCHR_data_resp', data_sealed>, ~ra_r_key),
                 senc(h(senc(<'RCHR_data_resp', data_sealed>, ~ra_r_key)), ~ra_r_key)
  ),
  E_r_data_reply( ~ra_r_key, index_req ),
  E_r_data_reply_ex( ~ra_r_key, index_req,
                     senc(<oname_sealed, data_sealed, index_sealed>,
                          h(<platform_sec, mrsigner, 'seal'>))
  ),
  Eql( index_req, index_sealed ),
  AUTO_IN_5_1_E_r_data_resp( senc(<oname_sealed, data_sealed, index_sealed
                                  >,
                                  h(<platform_sec, mrsigner, 'seal'>)),
                             data_sealed
  )
  ]->
   [
   Out( <'RCHR_data_resp', 
         senc(<'RCHR_data_resp', data_sealed>, ~ra_r_key), 
         senc(h(senc(<'RCHR_data_resp', data_sealed>, ~ra_r_key)), ~ra_r_key)>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) RCHR_data_resp[color=#d2b4de]:
   [
   Mem_RCHR( ~ra_r_key, index_req ),
   In( <'RCHR_data_resp', senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key), 
        senc(h(senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key)), ~ra_r_key)>
   )
   ]
  --[
  RCHR_data_resp( ~ra_r_key, index_req, data_rvcd,
                  senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key),
                  senc(h(senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key)), ~ra_r_key)
  ),
  RCHR_data_rcv( ~ra_r_key, index_req )
  ]->
   [ ]

  /* has exactly the trivial AC variant */

lemma AUTO_typing_src [sources]:
  all-traces
  "((((⊤) ∧
      (∀ x m #i.
        (AUTO_IN_1_1_E_o_decrypt( m, x ) @ #i) ⇒
        ((∃ #j. (!KU( x ) @ #j) ∧ (#j < #i)) ∨
         (∃ #j. (AUTO_OUT_0_1_DO_upload( m ) @ #j) ∧ (#j < #i))))) ∧
     (∀ x m #i.
       (AUTO_IN_2_1_E_o_decrypt( m, x ) @ #i) ⇒
       ((∃ #j. (!KU( x ) @ #j) ∧ (#j < #i)) ∨
        (∃ #j. (AUTO_OUT_0_1_DO_upload( m ) @ #j) ∧ (#j < #i))))) ∧
    (∀ x m #i.
      (AUTO_IN_3_1_E_r_data_req( m, x ) @ #i) ⇒
      ((∃ #j. (!KU( x ) @ #j) ∧ (#j < #i)) ∨
       (∃ #j. (AUTO_OUT_0_1_RCHR_data_req( m ) @ #j) ∧ (#j < #i))))) ∧
   (∀ x m #i.
     (AUTO_IN_5_1_E_r_data_resp( m, x ) @ #i) ⇒
     ((∃ #j. (!KU( x ) @ #j) ∧ (#j < #i)) ∨
      (∃ #j. (AUTO_OUT_0_1_E_o_upload( m ) @ #j) ∧ (#j < #i))))"
/*
guarded formula characterizing all counter-examples:
"((∃ x m #i.
    (AUTO_IN_1_1_E_o_decrypt( m, x ) @ #i)
   ∧
    (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
    (∀ #j. (AUTO_OUT_0_1_DO_upload( m ) @ #j) ⇒ ¬(#j < #i))) ∨
  (∃ x m #i.
    (AUTO_IN_2_1_E_o_decrypt( m, x ) @ #i)
   ∧
    (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
    (∀ #j. (AUTO_OUT_0_1_DO_upload( m ) @ #j) ⇒ ¬(#j < #i))) ∨
  (∃ x m #i.
    (AUTO_IN_3_1_E_r_data_req( m, x ) @ #i)
   ∧
    (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
    (∀ #j. (AUTO_OUT_0_1_RCHR_data_req( m ) @ #j) ⇒ ¬(#j < #i))) ∨
  (∃ x m #i.
    (AUTO_IN_5_1_E_r_data_resp( m, x ) @ #i)
   ∧
    (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
    (∀ #j. (AUTO_OUT_0_1_E_o_upload( m ) @ #j) ⇒ ¬(#j < #i))))"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∃ x m #i.
           (AUTO_IN_1_1_E_o_decrypt( m, x ) @ #i)
          ∧
           (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
           (∀ #j. (AUTO_OUT_0_1_DO_upload( m ) @ #j) ⇒ ¬(#j < #i)))  ∥
         (∃ x m #i.
           (AUTO_IN_2_1_E_o_decrypt( m, x ) @ #i)
          ∧
           (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
           (∀ #j. (AUTO_OUT_0_1_DO_upload( m ) @ #j) ⇒ ¬(#j < #i)))  ∥
         (∃ x m #i.
           (AUTO_IN_3_1_E_r_data_req( m, x ) @ #i)
          ∧
           (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
           (∀ #j. (AUTO_OUT_0_1_RCHR_data_req( m ) @ #j) ⇒ ¬(#j < #i)))  ∥
         (∃ x m #i.
           (AUTO_IN_5_1_E_r_data_resp( m, x ) @ #i)
          ∧
           (∀ #j. (!KU( x ) @ #j) ⇒ ¬(#j < #i)) ∧
           (∀ #j. (AUTO_OUT_0_1_E_o_upload( m ) @ #j) ⇒ ¬(#j < #i))) )
    case case_1
    solve( (last(#i))  ∥
           (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
           (∃ #j.
             (AUTO_OUT_0_1_DO_upload( senc(<'upload', x, data_rcvd>, ~ra_o_key)
              ) @ #j)
            ∧
             (¬(last(#j))) ∧ (#j < #i)) )
      case case_1
      solve( Start_thread_e_upload( platform_sec, mrsigner, mrenclave, ~p_id,
                                    mcid
             ) ▶₁ #i )
        case L3_process
        solve( RA_o_login( ~ra_o_key ) ▶₂ #i )
          case DO_upload
          solve( !KU( senc(<'upload', x, data_rcvd>, ~ra_o_key) ) @ #vk.1 )
            case DO_upload
            by contradiction /* from formulas */
          next
            case E_o_upload_case_1
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                   ~ra_o_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.12)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_o_upload_case_2
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                   ~ra_o_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.13)) )
              case case_1
              solve( (∃ #j.
                       (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                     ~ra_o_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_r_data_req_case_1
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* forbidden KD-fact */
            qed
          next
            case E_r_data_req_case_2
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (#vr.8, 0) ~~> (#vk, 0) )
                case d_union
                by contradiction /* forbidden KD-fact */
              qed
            qed
          next
            case E_r_data_resp_case_1
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                              ~mc_session.1, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                         ~ra_o_key.2)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j.
                             (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                              ~mc_session.1, ('1'+'1')
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                         ~ra_o_key.2)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j.
                             (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case E_r_data_resp_case_2
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                              ~mc_session.1, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                         ~ra_o_key.2)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j.
                             (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                              ~mc_session.1, ('1'+x.1)
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                         ~ra_o_key.2)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j.
                             (!KU( data_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd.1>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    qed
  next
    case case_2
    solve( (last(#i))  ∥
           (∃ #j. (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
           (∃ #j.
             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, x>, ~ra_o_key)
              ) @ #j)
            ∧
             (¬(last(#j))) ∧ (#j < #i)) )
      case case_1
      solve( Start_thread_e_upload( platform_sec, mrsigner, mrenclave, ~p_id,
                                    mcid
             ) ▶₁ #i )
        case L3_process
        solve( RA_o_login( ~ra_o_key ) ▶₂ #i )
          case DO_upload
          solve( !KU( senc(<'upload', oname_rcvd, x>, ~ra_o_key) ) @ #vk.1 )
            case DO_upload
            by contradiction /* from formulas */
          next
            case E_o_upload_case_1
            solve( (∃ #j.
                     (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                   ~ra_o_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.12)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_o_upload_case_2
            solve( (∃ #j.
                     (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                   ~ra_o_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.13)) )
              case case_1
              solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                     ~ra_o_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_r_data_req_case_1
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* forbidden KD-fact */
            qed
          next
            case E_r_data_req_case_2
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (#vr.8, 0) ~~> (#vk, 0) )
                case d_union
                by contradiction /* forbidden KD-fact */
              qed
            qed
          next
            case E_r_data_resp_case_1
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                              ~mc_session.1, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                         ~ra_o_key.2)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                              ~mc_session.1, ('1'+'1')
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                         ~ra_o_key.2)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case E_r_data_resp_case_2
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                              ~mc_session.1, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                         ~ra_o_key.2)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                              ~mc_session.1, ('1'+x.1)
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                         ~ra_o_key.2)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case case_2
      solve( (last(#i))  ∥
             (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
             (∃ #j.
               (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, x>, ~ra_o_key)
                ) @ #j)
              ∧
               (¬(last(#j))) ∧ (#j < #i)) )
        case case_1
        solve( Start_thread_e_upload( platform_sec, mrsigner, mrenclave, ~p_id,
                                      mcid
               ) ▶₁ #i )
          case L3_process
          solve( RA_o_login( ~ra_o_key ) ▶₂ #i )
            case DO_upload
            solve( !KU( senc(<'upload', oname_rcvd, x>, ~ra_o_key) ) @ #vk.1 )
              case DO_upload
              by contradiction /* from formulas */
            next
              case E_o_upload_case_1
              solve( (∃ #j.
                       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                     ~ra_o_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case E_o_upload_case_2
              solve( (∃ #j.
                       (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                     ~ra_o_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                       (∃ #j.
                         (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                       ~ra_o_key.1)
                          ) @ #j)
                        ∧
                         (¬(last(#j))) ∧ (#j < #vr.13)) )
                  case case_1
                  by contradiction /* cyclic */
                next
                  case case_2
                  by contradiction /* impossible chain */
                qed
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case E_r_data_req_case_1
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.7)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* forbidden KD-fact */
              qed
            next
              case E_r_data_req_case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.7)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                solve( (#vr.8, 0) ~~> (#vk, 0) )
                  case d_union
                  by contradiction /* forbidden KD-fact */
                qed
              qed
            next
              case E_r_data_resp_case_1
              solve( (∃ #j.
                       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.7)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                       (∃ #j.
                         (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                           ~ra_r_key)
                          ) @ #j)
                        ∧
                         (¬(last(#j))) ∧ (#j < #vr.12)) )
                  case case_1
                  solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                                ~mc_session.1, index_req
                         ) ▶₀ #j )
                    case PSE_sgx_increment_MC
                    solve( (∃ #j.
                             (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                             (∃ #j.
                               (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                             ~ra_o_key.2)
                                ) @ #j)
                              ∧
                               (¬(last(#j))) ∧ (#j < #vr.21)) )
                        case case_1
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* cyclic */
                        qed
                      next
                        case case_2
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* impossible chain */
                        qed
                      qed
                    next
                      case case_2
                      solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                             (∃ #j.
                               (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                                ) @ #j)
                              ∧
                               (¬(last(#j))) ∧ (#j < #vr.21)) )
                        case case_1
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* cyclic */
                        qed
                      next
                        case case_2
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                                ~mc_session.1, ('1'+'1')
                         ) ▶₀ #j )
                    case PSE_sgx_increment_MC
                    solve( (∃ #j.
                             (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                             (∃ #j.
                               (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                             ~ra_o_key.2)
                                ) @ #j)
                              ∧
                               (¬(last(#j))) ∧ (#j < #vr.21)) )
                        case case_1
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* cyclic */
                        qed
                      next
                        case case_2
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* impossible chain */
                        qed
                      qed
                    next
                      case case_2
                      solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                             (∃ #j.
                               (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                                ) @ #j)
                              ∧
                               (¬(last(#j))) ∧ (#j < #vr.21)) )
                        case case_1
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* cyclic */
                        qed
                      next
                        case case_2
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case E_r_data_resp_case_2
              solve( (∃ #j.
                       (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                      h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.7)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                       (∃ #j.
                         (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                           ~ra_r_key)
                          ) @ #j)
                        ∧
                         (¬(last(#j))) ∧ (#j < #vr.12)) )
                  case case_1
                  solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                                ~mc_session.1, index_req
                         ) ▶₀ #j )
                    case PSE_sgx_increment_MC
                    solve( (∃ #j.
                             (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                             (∃ #j.
                               (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                             ~ra_o_key.2)
                                ) @ #j)
                              ∧
                               (¬(last(#j))) ∧ (#j < #vr.21)) )
                        case case_1
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* cyclic */
                        qed
                      next
                        case case_2
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* impossible chain */
                        qed
                      qed
                    next
                      case case_2
                      solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                             (∃ #j.
                               (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                                ) @ #j)
                              ∧
                               (¬(last(#j))) ∧ (#j < #vr.21)) )
                        case case_1
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* cyclic */
                        qed
                      next
                        case case_2
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid.1,
                                                ~mc_session.1, ('1'+x.1)
                         ) ▶₀ #j )
                    case PSE_sgx_increment_MC
                    solve( (∃ #j.
                             (!KU( oname_rcvd.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                           ~ra_o_key.2)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                             (∃ #j.
                               (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd.1, data_rcvd>,
                                                             ~ra_o_key.2)
                                ) @ #j)
                              ∧
                               (¬(last(#j))) ∧ (#j < #vr.21)) )
                        case case_1
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* cyclic */
                        qed
                      next
                        case case_2
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* impossible chain */
                        qed
                      qed
                    next
                      case case_2
                      solve( (∃ #j. (!KU( ~data.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                             (∃ #j.
                               (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname.1, ~data.1>, ~ra_o_key.2)
                                ) @ #j)
                              ∧
                               (¬(last(#j))) ∧ (#j < #vr.21)) )
                        case case_1
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* cyclic */
                        qed
                      next
                        case case_2
                        solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                        ~mc_session.1, ~ra_o_key.1, data_sealed, oname_sealed, ~mcid.1
                               ) ▶₁ #j )
                          case E_o_decrypt
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case c_senc
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case case_2
        by contradiction /* from formulas */
      next
        case case_3
        by contradiction /* from formulas */
      qed
    next
      case case_3
      by contradiction /* from formulas */
    qed
  next
    case case_3
    solve( (last(#i))  ∥
           (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
           (∃ #j.
             (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', x>, ~ra_r_key)
              ) @ #j)
            ∧
             (¬(last(#j))) ∧ (#j < #i)) )
      case case_1
      solve( RA_r_login( ~ra_r_key ) ▶₁ #i )
        case RCHR_data_req_case_1
        solve( Start_thread_e_data_req( platform_sec, mrsigner, mrenclave, ~p_id
               ) ▶₂ #i )
          case L3_process
          solve( !KU( senc(<'RCHR_data_req', x>, ~ra_r_key) ) @ #vk.1 )
            case E_o_upload_case_1
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.12)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_o_upload_case_2
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.13)) )
              case case_1
              solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                     ~ra_o_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_r_data_req_case_1
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* forbidden KD-fact */
            qed
          next
            case E_r_data_req_case_2
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (#vr.8, 0) ~~> (#vk, 0) )
                case d_union
                by contradiction /* forbidden KD-fact */
              qed
            qed
          next
            case E_r_data_resp_case_1
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+'1')
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case E_r_data_resp_case_2
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+x.1)
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case RCHR_data_req
            by contradiction /* from formulas */
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        qed
      next
        case RCHR_data_req_case_2
        solve( Start_thread_e_data_req( platform_sec, mrsigner, mrenclave, ~p_id
               ) ▶₂ #i )
          case L3_process
          solve( !KU( senc(<'RCHR_data_req', x>, ~ra_r_key) ) @ #vk.1 )
            case E_o_upload_case_1
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.12)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_o_upload_case_2
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.13)) )
              case case_1
              solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                     ~ra_o_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_r_data_req_case_1
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* forbidden KD-fact */
            qed
          next
            case E_r_data_req_case_2
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (#vr.8, 0) ~~> (#vk, 0) )
                case d_union
                by contradiction /* forbidden KD-fact */
              qed
            qed
          next
            case E_r_data_resp_case_1
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+'1')
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case E_r_data_resp_case_2
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.7))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.7)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.12))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.12)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+x.1)
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.21)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.21))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.21)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case RCHR_data_req
            by contradiction /* from formulas */
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    qed
  next
    case case_4
    solve( (last(#i))  ∥
           (∃ #j. (!KU( x ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #i))  ∥
           (∃ #j.
             (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed, x, index_req>,
                                            h(<platform_sec, mrsigner, 'seal'>))
              ) @ #j)
            ∧
             (¬(last(#j))) ∧ (#j < #i)) )
      case case_1
      solve( EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                      index_req
             ) ▶₁ #i )
        case E_r_data_req_case_1
        solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr))  ∥
               (∃ #j.
                 (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                   ~ra_r_key)
                  ) @ #j)
                ∧
                 (¬(last(#j))) ∧ (#j < #vr)) )
          case case_1
          solve( !KU( senc(<oname_sealed, x, index_req>,
                           h(<~platform_sec, ~mrsigner, 'seal'>))
                 ) @ #vk.2 )
            case E_o_upload_case_1
            by contradiction /* from formulas */
          next
            case E_o_upload_case_2
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.13)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_o_upload_case_3
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.14)) )
              case case_1
              solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                     ~ra_o_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.14)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_r_data_req_case_1
            solve( (∃ #j.
                     (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* forbidden KD-fact */
            qed
          next
            case E_r_data_req_case_2
            solve( (∃ #j.
                     (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (#vr.9, 0) ~~> (#vk, 0) )
                case d_union
                by contradiction /* forbidden KD-fact */
              qed
            qed
          next
            case E_r_data_resp_case_1
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, index_req.1
                                                    >,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j.
                       (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req.1
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+'1')
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case E_r_data_resp_case_2
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, index_req.1
                                                    >,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j.
                       (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req.1
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+x.1)
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( !KU( senc(<oname_sealed, x, ('1'+'1')>,
                           h(<~platform_sec, ~mrsigner, 'seal'>))
                 ) @ #vk.2 )
            case E_o_upload_case_1
            by contradiction /* from formulas */
          next
            case E_o_upload_case_2
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.13)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_o_upload_case_3
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.14)) )
              case case_1
              solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                     ~ra_o_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.14)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_r_data_req_case_1
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* forbidden KD-fact */
            qed
          next
            case E_r_data_req_case_2
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (#vr.9, 0) ~~> (#vk, 0) )
                case d_union
                by contradiction /* forbidden KD-fact */
              qed
            qed
          next
            case E_r_data_resp_case_1
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+'1')
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case E_r_data_resp_case_2
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+x.1)
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        qed
      next
        case E_r_data_req_case_2
        solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr))  ∥
               (∃ #j.
                 (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                   ~ra_r_key)
                  ) @ #j)
                ∧
                 (¬(last(#j))) ∧ (#j < #vr)) )
          case case_1
          solve( !KU( senc(<oname_sealed, x, index_req>,
                           h(<~platform_sec, ~mrsigner, 'seal'>))
                 ) @ #vk.2 )
            case E_o_upload_case_1
            by contradiction /* from formulas */
          next
            case E_o_upload_case_2
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.13)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_o_upload_case_3
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.14)) )
              case case_1
              solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                     ~ra_o_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.14)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_r_data_req_case_1
            solve( (∃ #j.
                     (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* forbidden KD-fact */
            qed
          next
            case E_r_data_req_case_2
            solve( (∃ #j.
                     (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (#vr.9, 0) ~~> (#vk, 0) )
                case d_union
                by contradiction /* forbidden KD-fact */
              qed
            qed
          next
            case E_r_data_resp_case_1
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, index_req.1
                                                    >,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j.
                       (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req.1
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+'1')
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case E_r_data_resp_case_2
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, index_req.1
                                                    >,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j.
                       (!KU( index_req.1 ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req.1>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req.1
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+x.1)
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( !KU( senc(<oname_sealed, x, ('1'+x.1)>,
                           h(<~platform_sec, ~mrsigner, 'seal'>))
                 ) @ #vk.2 )
            case E_o_upload_case_1
            by contradiction /* from formulas */
          next
            case E_o_upload_case_2
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.13)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_o_upload_case_3
            solve( (∃ #j.
                     (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                   ~ra_o_key)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.14)) )
              case case_1
              solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.14))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                     ~ra_o_key)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.14)) )
                case case_1
                by contradiction /* cyclic */
              next
                case case_2
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* impossible chain */
            qed
          next
            case E_r_data_req_case_1
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              by contradiction /* forbidden KD-fact */
            qed
          next
            case E_r_data_req_case_2
            solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                       ~ra_r_key.1)
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (#vr.9, 0) ~~> (#vk, 0) )
                case d_union
                by contradiction /* forbidden KD-fact */
              qed
            qed
          next
            case E_r_data_resp_case_1
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+'1')
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case E_r_data_resp_case_2
            solve( (∃ #j.
                     (!KU( data_sealed ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.8))  ∥
                   (∃ #j.
                     (AUTO_OUT_0_1_E_o_upload( senc(<oname_sealed.1, data_sealed, index_req>,
                                                    h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                      ) @ #j)
                    ∧
                     (¬(last(#j))) ∧ (#j < #vr.8)) )
              case case_1
              by contradiction /* cyclic */
            next
              case case_2
              solve( (∃ #j. (!KU( index_req ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.13))  ∥
                     (∃ #j.
                       (AUTO_OUT_0_1_RCHR_data_req( senc(<'RCHR_data_req', index_req>,
                                                         ~ra_r_key.1)
                        ) @ #j)
                      ∧
                       (¬(last(#j))) ∧ (#j < #vr.13)) )
                case case_1
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, index_req
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( Sgx_increment_MC_done( <~platform_sec.1, mrenclave.1>, mcid,
                                              ~mc_session, ('1'+x.2)
                       ) ▶₀ #j )
                  case PSE_sgx_increment_MC
                  solve( (∃ #j.
                           (!KU( oname_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                         (∃ #j.
                           (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                         ~ra_o_key.1)
                            ) @ #j)
                          ∧
                           (¬(last(#j))) ∧ (#j < #vr.22)) )
                    case case_1
                    solve( (∃ #j. (!KU( data_rcvd ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', oname_rcvd, data_rcvd>,
                                                           ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  next
                    case case_2
                    solve( (∃ #j. (!KU( ~data ) @ #j) ∧ (¬(last(#j))) ∧ (#j < #vr.22))  ∥
                           (∃ #j.
                             (AUTO_OUT_0_1_DO_upload( senc(<'upload', ~oname, ~data>, ~ra_o_key.1)
                              ) @ #j)
                            ∧
                             (¬(last(#j))) ∧ (#j < #vr.22)) )
                      case case_1
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* cyclic */
                      qed
                    next
                      case case_2
                      solve( EPC_E_o( ~platform_sec.1, ~mrsigner.1, ~mrenclave.1, ~p_id.1,
                                      ~mc_session, ~ra_o_key, data_sealed, oname_sealed.1, ~mcid
                             ) ▶₁ #j )
                        case E_o_decrypt
                        by contradiction /* impossible chain */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    qed
  qed
qed

lemma createMC_for_every_incMC_ind_reuse [use_induction, reuse]:
  all-traces
  "∀ MC_owner_policy mcid ptr_old ptr_new valMC #i.
    (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old, ptr_new, valMC
     ) @ #i) ⇒
    (∃ ptr #j.
      (PSE_CreateMC( MC_owner_policy, mcid, ptr, '1' ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ MC_owner_policy mcid ptr_old ptr_new valMC #i.
  (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old, ptr_new, valMC
   ) @ #i)
 ∧
  ∀ ptr #j.
   (PSE_CreateMC( MC_owner_policy, mcid, ptr, '1' ) @ #j) ⇒ ¬(#j < #i)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (last(#i))  ∥
         (∃ ptr #j.
           (PSE_CreateMC( MC_owner_policy, mcid, ptr, '1' ) @ #j)
          ∧
           (¬(last(#j))) ∧ (#j < #i)) )
    case case_1
    solve( Sgx_increment_MC( MC_owner_policy, mcid, label ) ▶₀ #i )
      case E_o_decrypt
      by contradiction /* from formulas */
    qed
  next
    case case_2
    by contradiction /* from formulas */
  qed
qed

lemma MC_value_never_equals_ind_reuse [use_induction, reuse]:
  all-traces
  "∀ MC_owner_policy mcid ptr_old1 ptr_new1 ptr_old2 ptr_new2 valMC #i #j.
    ((PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old1, ptr_new1, valMC
      ) @ #i) ∧
     (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old2, ptr_new2, valMC
      ) @ #j)) ⇒
    (#i = #j)"
/*
guarded formula characterizing all counter-examples:
"∃ MC_owner_policy mcid ptr_old1 ptr_new1 ptr_old2 ptr_new2 valMC #i #j.
  (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old1, ptr_new1, valMC
   ) @ #i) ∧
  (PSE_sgx_increment_MC( MC_owner_policy, mcid, ptr_old2, ptr_new2, valMC
   ) @ #j)
 ∧
  ¬(#i = #j)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (#i < #j)  ∥ (#j < #i) )
    case case_1
    solve( Sgx_increment_MC( MC_owner_policy, ~mcid, label ) ▶₀ #i )
      case E_o_decrypt
      solve( Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
             ) ▶₀ #j )
        case E_o_decrypt
        solve( !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key)
               ) @ #vk.1 )
          case DO_upload
          solve( !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.1)
                 ) @ #vk.4 )
            case DO_upload
            solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old1, valMC
                   ) ▶₁ #i )
              case PSE_CreateMC
              solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old2, '1'
                     ) ▶₁ #j )
                case PSE_CreateMC
                by contradiction /* cyclic */
              qed
            next
              case PSE_sgx_increment_MC
              solve( !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.2)
                     ) @ #vk.7 )
                case DO_upload
                solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old2,
                                     ('1'+valMC)
                       ) ▶₁ #j )
                  case PSE_sgx_increment_MC
                  by contradiction /* cyclic */
                qed
              next
                case c_senc
                by solve( !KU( ~ra_o_key.2 ) @ #vk.10 )
              qed
            qed
          next
            case c_senc
            by solve( !KU( ~ra_o_key.1 ) @ #vk.7 )
          qed
        next
          case c_senc
          by solve( !KU( ~ra_o_key ) @ #vk.7 )
        qed
      qed
    qed
  next
    case case_2
    solve( Sgx_increment_MC( MC_owner_policy, ~mcid, label ) ▶₀ #i )
      case E_o_decrypt
      solve( Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
             ) ▶₀ #j )
        case E_o_decrypt
        solve( !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key)
               ) @ #vk.1 )
          case DO_upload
          solve( !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.1)
                 ) @ #vk.4 )
            case DO_upload
            solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old1, valMC
                   ) ▶₁ #i )
              case PSE_CreateMC
              solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old2, '1'
                     ) ▶₁ #j )
                case PSE_CreateMC
                by contradiction /* cyclic */
              qed
            next
              case PSE_sgx_increment_MC
              solve( !KU( senc(<'upload', oname_rcvd, data_rcvd>, ~ra_o_key.2)
                     ) @ #vk.7 )
                case DO_upload
                solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ptr_old2,
                                     ('1'+valMC)
                       ) ▶₁ #j )
                  case PSE_sgx_increment_MC
                  by contradiction /* cyclic */
                qed
              next
                case c_senc
                by solve( !KU( ~ra_o_key.2 ) @ #vk.10 )
              qed
            qed
          next
            case c_senc
            by solve( !KU( ~ra_o_key.1 ) @ #vk.7 )
          qed
        next
          case c_senc
          by solve( !KU( ~ra_o_key ) @ #vk.7 )
        qed
      qed
    qed
  qed
qed

lemma honest_run_req11:
  exists-trace
  "∃ oname #do_setup ra_o_key data cipher_upload_req gcm_tag_upload_req
     #do_upload platform #L1_platform mrenclave mrsigner
     #L2_mrsigner_mrenclave mcid valMC_init ptrMC1 #cmc #L2_MC p_id
     #L3_process #e_o_decrypt ptrMC2 index_added #incMC sealed_e_return
     #e_o_upload index_init ptrIndex1 #db_setup ptrIndex2 #db_store ra_r_key
     index_req cipher_data_req gcm_tag_data_req #rchr_data_req_11
     #E_r_data_req #db_retrieve cipher_data_resp gcm_tag_data_resp
     #E_r_data_resp #rchr_data_resp.
    (((((((((((((((((((DO_Setup( oname ) @ #do_setup) ∧
                      (DO_upload( ra_o_key, data, oname, cipher_upload_req, gcm_tag_upload_req
                       ) @ #do_upload)) ∧
                     (L1_platform( platform ) @ #L1_platform)) ∧
                    (L2_mrsigner_mrenclave( platform, mrsigner, mrenclave
                     ) @ #L2_mrsigner_mrenclave)) ∧
                   (valMC_init = '1')) ∧
                  (PSE_CreateMC( <platform, mrenclave>, mcid, ptrMC1, valMC_init
                   ) @ #cmc)) ∧
                 (L2_MC( platform, mrsigner, mrenclave, mcid, valMC_init ) @ #L2_MC)) ∧
                (L3_process( platform, mrsigner, mrenclave, p_id, mcid, valMC_init
                 ) @ #L3_process)) ∧
               (E_o_decrypt( platform, mrsigner, mrenclave, p_id, ra_o_key, data, oname,
                             cipher_upload_req, gcm_tag_upload_req, mcid
                ) @ #e_o_decrypt)) ∧
              (index_added = ('1'+valMC_init))) ∧
             (PSE_sgx_increment_MC( <platform, mrenclave>, mcid, ptrMC1, ptrMC2,
                                    index_added
              ) @ #incMC)) ∧
            (E_o_upload( platform, mrsigner, mrenclave, p_id, ra_o_key, data, oname,
                         mcid, index_added, sealed_e_return
             ) @ #e_o_upload)) ∧
           (DB_setup( ptrIndex1, index_init ) @ #db_setup)) ∧
          (index_init = '1')) ∧
         (DB_store( p_id, ptrIndex1, index_init, ptrIndex2, ('1'+index_init),
                    sealed_e_return
          ) @ #db_store)) ∧
        (RCHR_data_req( ra_r_key, index_req, cipher_data_req, gcm_tag_data_req
         ) @ #rchr_data_req_11)) ∧
       (E_r_data_req( platform, mrsigner, mrenclave, p_id, ra_r_key, index_req,
                      cipher_data_req, gcm_tag_data_req
        ) @ #E_r_data_req)) ∧
      (DB_retrieve( p_id, index_req, sealed_e_return ) @ #db_retrieve)) ∧
     (E_r_data_resp( platform, mrsigner, mrenclave, p_id, ra_r_key, index_req,
                     data, sealed_e_return, cipher_data_resp, gcm_tag_data_resp
      ) @ #E_r_data_resp)) ∧
    (RCHR_data_resp( ra_r_key, index_req, data, cipher_data_resp,
                     gcm_tag_data_resp
     ) @ #rchr_data_resp)"
/*
guarded formula characterizing all satisfying traces:
"∃ oname #do_setup ra_o_key data cipher_upload_req gcm_tag_upload_req
   #do_upload platform #L1_platform mrenclave mrsigner
   #L2_mrsigner_mrenclave mcid valMC_init ptrMC1 #cmc #L2_MC p_id
   #L3_process #e_o_decrypt ptrMC2 index_added #incMC sealed_e_return
   #e_o_upload index_init ptrIndex1 #db_setup ptrIndex2 #db_store ra_r_key
   index_req cipher_data_req gcm_tag_data_req #rchr_data_req_11
   #E_r_data_req #db_retrieve cipher_data_resp gcm_tag_data_resp
   #E_r_data_resp #rchr_data_resp.
  (DO_Setup( oname ) @ #do_setup) ∧
  (DO_upload( ra_o_key, data, oname, cipher_upload_req, gcm_tag_upload_req
   ) @ #do_upload) ∧
  (L1_platform( platform ) @ #L1_platform) ∧
  (L2_mrsigner_mrenclave( platform, mrsigner, mrenclave
   ) @ #L2_mrsigner_mrenclave) ∧
  (valMC_init = '1') ∧
  (PSE_CreateMC( <platform, mrenclave>, mcid, ptrMC1, valMC_init
   ) @ #cmc) ∧
  (L2_MC( platform, mrsigner, mrenclave, mcid, valMC_init ) @ #L2_MC) ∧
  (L3_process( platform, mrsigner, mrenclave, p_id, mcid, valMC_init
   ) @ #L3_process) ∧
  (E_o_decrypt( platform, mrsigner, mrenclave, p_id, ra_o_key, data, oname,
                cipher_upload_req, gcm_tag_upload_req, mcid
   ) @ #e_o_decrypt) ∧
  (index_added = ('1'+valMC_init)) ∧
  (PSE_sgx_increment_MC( <platform, mrenclave>, mcid, ptrMC1, ptrMC2,
                         index_added
   ) @ #incMC) ∧
  (E_o_upload( platform, mrsigner, mrenclave, p_id, ra_o_key, data, oname,
               mcid, index_added, sealed_e_return
   ) @ #e_o_upload) ∧
  (DB_setup( ptrIndex1, index_init ) @ #db_setup) ∧
  (index_init = '1') ∧
  (DB_store( p_id, ptrIndex1, index_init, ptrIndex2, ('1'+index_init),
             sealed_e_return
   ) @ #db_store) ∧
  (RCHR_data_req( ra_r_key, index_req, cipher_data_req, gcm_tag_data_req
   ) @ #rchr_data_req_11) ∧
  (E_r_data_req( platform, mrsigner, mrenclave, p_id, ra_r_key, index_req,
                 cipher_data_req, gcm_tag_data_req
   ) @ #E_r_data_req) ∧
  (DB_retrieve( p_id, index_req, sealed_e_return ) @ #db_retrieve) ∧
  (E_r_data_resp( platform, mrsigner, mrenclave, p_id, ra_r_key, index_req,
                  data, sealed_e_return, cipher_data_resp, gcm_tag_data_resp
   ) @ #E_r_data_resp) ∧
  (RCHR_data_resp( ra_r_key, index_req, data, cipher_data_resp,
                   gcm_tag_data_resp
   ) @ #rchr_data_resp)"
*/
simplify
solve( !OMem( ~oname ) ▶₂ #do_upload )
  case DO_setup
  solve( !L12( ~platform_sec ) ▶₂ #L2_mrsigner_mrenclave )
    case L1_platform
    solve( Sgx_create_MC( <~platform_sec, ~mrenclave>, label ) ▶₂ #cmc )
      case L2_mrsigner_mrenclave
      solve( Sgx_create_MC_done( <~platform_sec, ~mrenclave>, ~mc_session,
                                 ~mcid, '1'
             ) ▶₀ #L2_MC )
        case PSE_CreateMC
        solve( L22( ~platform_sec, ~mrsigner, ~mrenclave, ~mc_session
               ) ▶₁ #L2_MC )
          case L2_mrsigner_mrenclave
          solve( !L23( ~platform_sec, ~mrsigner, ~mrenclave, ~mcid, '1'
                 ) ▶₀ #L3_process )
            case L2_MC
            solve( Start_thread_e_upload( ~platform_sec, ~mrsigner, ~mrenclave,
                                          ~p_id, ~mcid
                   ) ▶₁ #e_o_decrypt )
              case L3_process
              solve( RA_o_login( ~ra_o_key ) ▶₂ #e_o_decrypt )
                case DO_upload
                solve( RA_r_login( ~ra_r_key ) ▶₁ #E_r_data_req )
                  case RCHR_data_req_case_1
                  solve( Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                                                  ~p_id
                         ) ▶₂ #E_r_data_req )
                    case L3_process
                    solve( !DB_mem( index_req,
                                    senc(<oname_sealed, ~data, index_req>,
                                         h(<~platform_sec, ~mrsigner, 'seal'>))
                           ) ▶₁ #db_retrieve )
                      case DB_store
                      solve( Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve )
                        case L3_process
                        solve( EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
                                        ('1'+i)
                               ) ▶₁ #E_r_data_resp )
                          case E_r_data_req
                          solve( Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp )
                            case RCHR_data_req
                            solve( PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ~ptr,
                                                         ptrMC2, ('1'+'1')
                                   ) @ #incMC )
                              case PSE_sgx_increment_MC
                              solve( Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
                                     ) ▶₀ #incMC )
                                case E_o_decrypt
                                solve( E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                                                   ~ra_o_key, ~data, ~oname, ~mcid, ('1'+'1'),
                                                   senc(<oname_sealed, ~data, ('1'+'1')>,
                                                        h(<~platform_sec, ~mrsigner, 'seal'>))
                                       ) @ #e_o_upload )
                                  case E_o_upload
                                  solve( Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                                                                ~mc_session.2, ('1'+'1')
                                         ) ▶₀ #e_o_upload )
                                    case PSE_sgx_increment_MC
                                    solve( EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                                                    ~mc_session.2, ~ra_o_key, ~data, ~oname, ~mcid
                                           ) ▶₁ #e_o_upload )
                                      case E_o_decrypt
                                      solve( DB_store( ~p_id, ~ptr.1, '1', ptrIndex2, ('1'+'1'),
                                                       senc(<~oname, ~data, ('1'+'1')>,
                                                            h(<~platform_sec, ~mrsigner, 'seal'>))
                                             ) @ #db_store )
                                        case DB_store
                                        solve( Start_thread_db_upload( ~p_id ) ▶₁ #db_store )
                                          case L3_process
                                          solve( RCHR_data_req( ~ra_r_key, ('1'+'1'),
                                                                senc(<'RCHR_data_req', ('1'+'1')>, ~ra_r_key),
                                                                senc(h(senc(<'RCHR_data_req', ('1'+'1')>,
                                                                            ~ra_r_key)),
                                                                     ~ra_r_key)
                                                 ) @ #rchr_data_req_11 )
                                            case RCHR_data_req
                                            solve( !DB_index( ptr.2, '1' ) ▶₂ #vr.1 )
                                              case DB_setup
                                              solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid, ~ptr,
                                                                   '1'
                                                     ) ▶₁ #incMC )
                                                case PSE_CreateMC
                                                solve( !DB_index( ~ptr.1, '1' ) ▶₂ #db_store )
                                                  case DB_setup
                                                  solve( !KU( senc(<'upload', ~oname, ~data>, ~ra_o_key)
                                                         ) @ #vk.1 )
                                                    case DO_upload
                                                    solve( !KU( senc(h(senc(<'upload', ~oname, ~data>,
                                                                            ~ra_o_key)),
                                                                     ~ra_o_key)
                                                           ) @ #vk.2 )
                                                      case DO_upload
                                                      solve( !KU( senc(<'RCHR_data_req', ('1'+'1')>,
                                                                       ~ra_r_key)
                                                             ) @ #vk.4 )
                                                        case RCHR_data_req
                                                        solve( !KU( senc(h(senc(<'RCHR_data_req', ('1'+'1')>,
                                                                                ~ra_r_key)),
                                                                         ~ra_r_key)
                                                               ) @ #vk.5 )
                                                          case RCHR_data_req
                                                          solve( !KU( senc(<~oname, ~data, ('1'+'1')>,
                                                                           h(<~platform_sec, ~mrsigner, 'seal'
                                                                             >))
                                                                 ) @ #vk.11 )
                                                            case E_o_upload
                                                            solve( !KU( senc(<'RCHR_data_resp', ~data>,
                                                                             ~ra_r_key)
                                                                   ) @ #vk.16 )
                                                              case E_r_data_resp
                                                              solve( !KU( senc(h(senc(<'RCHR_data_resp', ~data
                                                                                      >,
                                                                                      ~ra_r_key)),
                                                                               ~ra_r_key)
                                                                     ) @ #vk.17 )
                                                                case E_r_data_resp
                                                                SOLVED // trace found
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma honest_run_req111:
  exists-trace
  "∃ oname #do_setup ra_o_key data cipher_upload_req gcm_tag_upload_req
     #do_upload platform #L1_platform mrenclave mrsigner
     #L2_mrsigner_mrenclave mcid valMC_init ptrMC1 #cmc #L2_MC p_id
     #L3_process #e_o_decrypt ptrMC2 ptrMC3 index_added #incMC sealed_e_return
     #e_o_upload index_init ptrIndex1 #db_setup ptrIndex2 ptrIndex3 #db_store
     ra_r_key index_req cipher_data_req gcm_tag_data_req #rchr_data_req_111
     #E_r_data_req #db_retrieve cipher_data_resp gcm_tag_data_resp
     #E_r_data_resp #rchr_data_resp.
    (((((((((((((((((((DO_Setup( oname ) @ #do_setup) ∧
                      (DO_upload( ra_o_key, data, oname, cipher_upload_req, gcm_tag_upload_req
                       ) @ #do_upload)) ∧
                     (L1_platform( platform ) @ #L1_platform)) ∧
                    (L2_mrsigner_mrenclave( platform, mrsigner, mrenclave
                     ) @ #L2_mrsigner_mrenclave)) ∧
                   (valMC_init = '1')) ∧
                  (PSE_CreateMC( <platform, mrenclave>, mcid, ptrMC1, valMC_init
                   ) @ #cmc)) ∧
                 (L2_MC( platform, mrsigner, mrenclave, mcid, valMC_init ) @ #L2_MC)) ∧
                (L3_process( platform, mrsigner, mrenclave, p_id, mcid, valMC_init
                 ) @ #L3_process)) ∧
               (E_o_decrypt( platform, mrsigner, mrenclave, p_id, ra_o_key, data, oname,
                             cipher_upload_req, gcm_tag_upload_req, mcid
                ) @ #e_o_decrypt)) ∧
              (index_added = ('1'+'1'+valMC_init))) ∧
             (PSE_sgx_increment_MC( <platform, mrenclave>, mcid, ptrMC2, ptrMC3,
                                    index_added
              ) @ #incMC)) ∧
            (E_o_upload( platform, mrsigner, mrenclave, p_id, ra_o_key, data, oname,
                         mcid, index_added, sealed_e_return
             ) @ #e_o_upload)) ∧
           (DB_setup( ptrIndex1, index_init ) @ #db_setup)) ∧
          (index_init = '1')) ∧
         (DB_store( p_id, ptrIndex2, ('1'+index_init), ptrIndex3,
                    ('1'+'1'+index_init), sealed_e_return
          ) @ #db_store)) ∧
        (RCHR_data_req( ra_r_key, index_req, cipher_data_req, gcm_tag_data_req
         ) @ #rchr_data_req_111)) ∧
       (E_r_data_req( platform, mrsigner, mrenclave, p_id, ra_r_key, index_req,
                      cipher_data_req, gcm_tag_data_req
        ) @ #E_r_data_req)) ∧
      (DB_retrieve( p_id, index_req, sealed_e_return ) @ #db_retrieve)) ∧
     (E_r_data_resp( platform, mrsigner, mrenclave, p_id, ra_r_key, index_req,
                     data, sealed_e_return, cipher_data_resp, gcm_tag_data_resp
      ) @ #E_r_data_resp)) ∧
    (RCHR_data_resp( ra_r_key, index_req, data, cipher_data_resp,
                     gcm_tag_data_resp
     ) @ #rchr_data_resp)"
/*
guarded formula characterizing all satisfying traces:
"∃ oname #do_setup ra_o_key data cipher_upload_req gcm_tag_upload_req
   #do_upload platform #L1_platform mrenclave mrsigner
   #L2_mrsigner_mrenclave mcid valMC_init ptrMC1 #cmc #L2_MC p_id
   #L3_process #e_o_decrypt ptrMC2 ptrMC3 index_added #incMC sealed_e_return
   #e_o_upload index_init ptrIndex1 #db_setup ptrIndex2 ptrIndex3 #db_store
   ra_r_key index_req cipher_data_req gcm_tag_data_req #rchr_data_req_111
   #E_r_data_req #db_retrieve cipher_data_resp gcm_tag_data_resp
   #E_r_data_resp #rchr_data_resp.
  (DO_Setup( oname ) @ #do_setup) ∧
  (DO_upload( ra_o_key, data, oname, cipher_upload_req, gcm_tag_upload_req
   ) @ #do_upload) ∧
  (L1_platform( platform ) @ #L1_platform) ∧
  (L2_mrsigner_mrenclave( platform, mrsigner, mrenclave
   ) @ #L2_mrsigner_mrenclave) ∧
  (valMC_init = '1') ∧
  (PSE_CreateMC( <platform, mrenclave>, mcid, ptrMC1, valMC_init
   ) @ #cmc) ∧
  (L2_MC( platform, mrsigner, mrenclave, mcid, valMC_init ) @ #L2_MC) ∧
  (L3_process( platform, mrsigner, mrenclave, p_id, mcid, valMC_init
   ) @ #L3_process) ∧
  (E_o_decrypt( platform, mrsigner, mrenclave, p_id, ra_o_key, data, oname,
                cipher_upload_req, gcm_tag_upload_req, mcid
   ) @ #e_o_decrypt) ∧
  (index_added = ('1'+'1'+valMC_init)) ∧
  (PSE_sgx_increment_MC( <platform, mrenclave>, mcid, ptrMC2, ptrMC3,
                         index_added
   ) @ #incMC) ∧
  (E_o_upload( platform, mrsigner, mrenclave, p_id, ra_o_key, data, oname,
               mcid, index_added, sealed_e_return
   ) @ #e_o_upload) ∧
  (DB_setup( ptrIndex1, index_init ) @ #db_setup) ∧
  (index_init = '1') ∧
  (DB_store( p_id, ptrIndex2, ('1'+index_init), ptrIndex3,
             ('1'+'1'+index_init), sealed_e_return
   ) @ #db_store) ∧
  (RCHR_data_req( ra_r_key, index_req, cipher_data_req, gcm_tag_data_req
   ) @ #rchr_data_req_111) ∧
  (E_r_data_req( platform, mrsigner, mrenclave, p_id, ra_r_key, index_req,
                 cipher_data_req, gcm_tag_data_req
   ) @ #E_r_data_req) ∧
  (DB_retrieve( p_id, index_req, sealed_e_return ) @ #db_retrieve) ∧
  (E_r_data_resp( platform, mrsigner, mrenclave, p_id, ra_r_key, index_req,
                  data, sealed_e_return, cipher_data_resp, gcm_tag_data_resp
   ) @ #E_r_data_resp) ∧
  (RCHR_data_resp( ra_r_key, index_req, data, cipher_data_resp,
                   gcm_tag_data_resp
   ) @ #rchr_data_resp)"
*/
simplify
solve( !OMem( ~oname ) ▶₂ #do_upload )
  case DO_setup
  solve( !L12( ~platform_sec ) ▶₂ #L2_mrsigner_mrenclave )
    case L1_platform
    solve( Sgx_create_MC( <~platform_sec, ~mrenclave>, label ) ▶₂ #cmc )
      case L2_mrsigner_mrenclave
      solve( Sgx_create_MC_done( <~platform_sec, ~mrenclave>, ~mc_session,
                                 ~mcid, '1'
             ) ▶₀ #L2_MC )
        case PSE_CreateMC
        solve( L22( ~platform_sec, ~mrsigner, ~mrenclave, ~mc_session
               ) ▶₁ #L2_MC )
          case L2_mrsigner_mrenclave
          solve( !L23( ~platform_sec, ~mrsigner, ~mrenclave, ~mcid, '1'
                 ) ▶₀ #L3_process )
            case L2_MC
            solve( Start_thread_e_upload( ~platform_sec, ~mrsigner, ~mrenclave,
                                          ~p_id, ~mcid
                   ) ▶₁ #e_o_decrypt )
              case L3_process
              solve( RA_o_login( ~ra_o_key ) ▶₂ #e_o_decrypt )
                case DO_upload
                solve( RA_r_login( ~ra_r_key ) ▶₁ #E_r_data_req )
                  case RCHR_data_req_case_2
                  solve( Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                                                  ~p_id
                         ) ▶₂ #E_r_data_req )
                    case L3_process
                    solve( !DB_mem( index_req,
                                    senc(<oname_sealed, ~data, index_req>,
                                         h(<~platform_sec, ~mrsigner, 'seal'>))
                           ) ▶₁ #db_retrieve )
                      case DB_store
                      solve( Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve )
                        case L3_process
                        solve( EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
                                        ('1'+i)
                               ) ▶₁ #E_r_data_resp )
                          case E_r_data_req
                          solve( Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp )
                            case RCHR_data_req
                            solve( PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ptrMC2,
                                                         ptrMC3, ('1'+'1'+'1')
                                   ) @ #incMC )
                              case PSE_sgx_increment_MC
                              solve( Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
                                     ) ▶₀ #incMC )
                                case E_o_decrypt
                                solve( E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                                                   ~ra_o_key, ~data, ~oname, ~mcid, ('1'+'1'+'1'),
                                                   senc(<oname_sealed, ~data, ('1'+i)>,
                                                        h(<~platform_sec, ~mrsigner, 'seal'>))
                                       ) @ #e_o_upload )
                                  case E_o_upload
                                  solve( Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                                                                ~mc_session.2, ('1'+'1'+'1')
                                         ) ▶₀ #e_o_upload )
                                    case PSE_sgx_increment_MC
                                    solve( EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id,
                                                    ~mc_session.2, ~ra_o_key, ~data, ~oname, ~mcid
                                           ) ▶₁ #e_o_upload )
                                      case E_o_decrypt
                                      solve( DB_store( ~p_id, ptrIndex2, ('1'+'1'), ptrIndex3, ('1'+'1'+'1'),
                                                       senc(<~oname, ~data, ('1'+'1'+'1')>,
                                                            h(<~platform_sec, ~mrsigner, 'seal'>))
                                             ) @ #db_store )
                                        case DB_store
                                        solve( Start_thread_db_upload( ~p_id ) ▶₁ #db_store )
                                          case L3_process
                                          solve( RCHR_data_req( ~ra_r_key, ('1'+'1'+'1'),
                                                                senc(<'RCHR_data_req', ('1'+'1'+'1')>,
                                                                     ~ra_r_key),
                                                                senc(h(senc(<'RCHR_data_req', ('1'+'1'+'1')>,
                                                                            ~ra_r_key)),
                                                                     ~ra_r_key)
                                                 ) @ #rchr_data_req_111 )
                                            case RCHR_data_req
                                            solve( !Indexes( ('1'+'1') ) ▶₀ #vr )
                                              case Start
                                              solve( !DB_index( ptr.2, ('1'+'1') ) ▶₂ #vr.1 )
                                                case DB_store
                                                solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>, ~mcid,
                                                                     ptrMC2, ('1'+'1')
                                                       ) ▶₁ #incMC )
                                                  case PSE_sgx_increment_MC
                                                  solve( !KU( senc(<'upload', oname_rcvd, data_rcvd>,
                                                                   ~ra_o_key.1)
                                                         ) @ #vk.24 )
                                                    case DO_upload
                                                    solve( !DB_index( ptrIndex2, ('1'+'1') ) ▶₂ #db_store )
                                                      case DB_store
                                                      solve( !DB_index( ptr.3, '1' ) ▶₂ #vr.8 )
                                                        case DB_setup
                                                        solve( !Priv_mem_ME( <~platform_sec, ~mrenclave>,
                                                                             ~mcid, ptr_old, '1'
                                                               ) ▶₁ #vr.14 )
                                                          case PSE_CreateMC
                                                          solve( !DB_index( ptr.5, '1' ) ▶₂ #vr.20 )
                                                            case DB_setup
                                                            solve( !KU( senc(<'upload', ~oname, ~data>,
                                                                             ~ra_o_key)
                                                                   ) @ #vk.3 )
                                                              case DO_upload
                                                              solve( !KU( senc(h(senc(<'upload', ~oname, ~data
                                                                                      >,
                                                                                      ~ra_o_key)),
                                                                               ~ra_o_key)
                                                                     ) @ #vk.4 )
                                                                case DO_upload
                                                                solve( !KU( senc(<'RCHR_data_req', 
                                                                                  ('1'+'1'+'1')>,
                                                                                 ~ra_r_key)
                                                                       ) @ #vk.6 )
                                                                  case RCHR_data_req
                                                                  solve( !KU( senc(h(senc(<'RCHR_data_req', 
                                                                                           ('1'+'1'+'1')>,
                                                                                          ~ra_r_key)),
                                                                                   ~ra_r_key)
                                                                         ) @ #vk.7 )
                                                                    case RCHR_data_req
                                                                    solve( !KU( senc(<~oname, ~data, 
                                                                                      ('1'+'1'+'1')>,
                                                                                     h(<~platform_sec, 
                                                                                        ~mrsigner, 'seal'>))
                                                                           ) @ #vk.13 )
                                                                      case E_o_upload
                                                                      solve( !KU( senc(<'RCHR_data_resp', 
                                                                                        ~data>,
                                                                                       ~ra_r_key)
                                                                             ) @ #vk.18 )
                                                                        case E_r_data_resp
                                                                        solve( !KU( senc(h(senc(<
                                                                                                 'RCHR_data_resp', 
                                                                                                 ~data>,
                                                                                                ~ra_r_key)),
                                                                                         ~ra_r_key)
                                                                               ) @ #vk.19 )
                                                                          case E_r_data_resp
                                                                          solve( !KU( senc(h(senc(<'upload', 
                                                                                                   ~oname.1, 
                                                                                                   ~data.1>,
                                                                                                  ~ra_o_key.1)),
                                                                                           ~ra_o_key.1)
                                                                                 ) @ #vk.26 )
                                                                            case DO_upload
                                                                            SOLVED // trace found
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma honest_run_2_upload:
  exists-trace
  "∃ oname #do_setup ra_o_key1 data1 cipher_upload_req1 gcm_tag_upload_req1
     #do_upload1 ra_o_key2 data2 cipher_upload_req2 gcm_tag_upload_req2
     #do_upload2 platform #L1_platform mrenclave mrsigner
     #L2_mrsigner_mrenclave mcid valMC_init ptrMC1 #cmc #L2_MC p_id1
     #L3_process1 p_id2 #L3_process2 #e_o_decrypt1 ptrMC2 index_added1 #incMC1
     sealed_e_return1 #e_o_upload1 #e_o_decrypt2 ptrMC3 index_added2 #incMC2
     sealed_e_return2 #e_o_upload2 index_init ptrIndex1 #db_setup ptrIndex2
     ptrIndex3 #db_store1 #db_store2 ra_r_key index_req cipher_data_req
     gcm_tag_data_req #rchr_data_req_111 #E_r_data_req #db_retrieve
     cipher_data_resp gcm_tag_data_resp #E_r_data_resp #rchr_data_resp.
    ((((((((((((((((((((((((((DO_Setup( oname ) @ #do_setup) ∧
                             (DO_upload( ra_o_key1, data1, oname, cipher_upload_req1,
                                         gcm_tag_upload_req1
                              ) @ #do_upload1)) ∧
                            (DO_upload( ra_o_key2, data2, oname, cipher_upload_req2,
                                        gcm_tag_upload_req2
                             ) @ #do_upload2)) ∧
                           (L1_platform( platform ) @ #L1_platform)) ∧
                          (L2_mrsigner_mrenclave( platform, mrsigner, mrenclave
                           ) @ #L2_mrsigner_mrenclave)) ∧
                         (valMC_init = '1')) ∧
                        (PSE_CreateMC( <platform, mrenclave>, mcid, ptrMC1, valMC_init
                         ) @ #cmc)) ∧
                       (L2_MC( platform, mrsigner, mrenclave, mcid, valMC_init ) @ #L2_MC)) ∧
                      (L3_process( platform, mrsigner, mrenclave, p_id1, mcid, valMC_init
                       ) @ #L3_process1)) ∧
                     (L3_process( platform, mrsigner, mrenclave, p_id2, mcid, valMC_init
                      ) @ #L3_process2)) ∧
                    (E_o_decrypt( platform, mrsigner, mrenclave, p_id1, ra_o_key1, data1,
                                  oname, cipher_upload_req1, gcm_tag_upload_req1, mcid
                     ) @ #e_o_decrypt1)) ∧
                   (index_added1 = ('1'+valMC_init))) ∧
                  (PSE_sgx_increment_MC( <platform, mrenclave>, mcid, ptrMC1, ptrMC2,
                                         index_added1
                   ) @ #incMC1)) ∧
                 (E_o_upload( platform, mrsigner, mrenclave, p_id1, ra_o_key1, data1,
                              oname, mcid, index_added1, sealed_e_return1
                  ) @ #e_o_upload1)) ∧
                (E_o_decrypt( platform, mrsigner, mrenclave, p_id2, ra_o_key2, data2,
                              oname, cipher_upload_req2, gcm_tag_upload_req2, mcid
                 ) @ #e_o_decrypt2)) ∧
               (index_added2 = ('1'+'1'+valMC_init))) ∧
              (PSE_sgx_increment_MC( <platform, mrenclave>, mcid, ptrMC2, ptrMC3,
                                     index_added2
               ) @ #incMC2)) ∧
             (E_o_upload( platform, mrsigner, mrenclave, p_id2, ra_o_key2, data2,
                          oname, mcid, index_added2, sealed_e_return2
              ) @ #e_o_upload2)) ∧
            (DB_setup( ptrIndex1, index_init ) @ #db_setup)) ∧
           (index_init = '1')) ∧
          (DB_store( p_id1, ptrIndex1, index_init, ptrIndex2, ('1'+index_init),
                     sealed_e_return2
           ) @ #db_store1)) ∧
         (DB_store( p_id2, ptrIndex2, ('1'+index_init), ptrIndex3,
                    ('1'+'1'+index_init), sealed_e_return2
          ) @ #db_store2)) ∧
        (RCHR_data_req( ra_r_key, index_req, cipher_data_req, gcm_tag_data_req
         ) @ #rchr_data_req_111)) ∧
       (E_r_data_req( platform, mrsigner, mrenclave, p_id2, ra_r_key, index_req,
                      cipher_data_req, gcm_tag_data_req
        ) @ #E_r_data_req)) ∧
      (DB_retrieve( p_id2, index_req, sealed_e_return2 ) @ #db_retrieve)) ∧
     (E_r_data_resp( platform, mrsigner, mrenclave, p_id2, ra_r_key,
                     index_req, data2, sealed_e_return2, cipher_data_resp, gcm_tag_data_resp
      ) @ #E_r_data_resp)) ∧
    (RCHR_data_resp( ra_r_key, index_req, data2, cipher_data_resp,
                     gcm_tag_data_resp
     ) @ #rchr_data_resp)"
/*
guarded formula characterizing all satisfying traces:
"∃ oname #do_setup ra_o_key1 data1 cipher_upload_req1 gcm_tag_upload_req1
   #do_upload1 ra_o_key2 data2 cipher_upload_req2 gcm_tag_upload_req2
   #do_upload2 platform #L1_platform mrenclave mrsigner
   #L2_mrsigner_mrenclave mcid valMC_init ptrMC1 #cmc #L2_MC p_id1
   #L3_process1 p_id2 #L3_process2 #e_o_decrypt1 ptrMC2 index_added1 #incMC1
   sealed_e_return1 #e_o_upload1 #e_o_decrypt2 ptrMC3 index_added2 #incMC2
   sealed_e_return2 #e_o_upload2 index_init ptrIndex1 #db_setup ptrIndex2
   ptrIndex3 #db_store1 #db_store2 ra_r_key index_req cipher_data_req
   gcm_tag_data_req #rchr_data_req_111 #E_r_data_req #db_retrieve
   cipher_data_resp gcm_tag_data_resp #E_r_data_resp #rchr_data_resp.
  (DO_Setup( oname ) @ #do_setup) ∧
  (DO_upload( ra_o_key1, data1, oname, cipher_upload_req1,
              gcm_tag_upload_req1
   ) @ #do_upload1) ∧
  (DO_upload( ra_o_key2, data2, oname, cipher_upload_req2,
              gcm_tag_upload_req2
   ) @ #do_upload2) ∧
  (L1_platform( platform ) @ #L1_platform) ∧
  (L2_mrsigner_mrenclave( platform, mrsigner, mrenclave
   ) @ #L2_mrsigner_mrenclave) ∧
  (valMC_init = '1') ∧
  (PSE_CreateMC( <platform, mrenclave>, mcid, ptrMC1, valMC_init
   ) @ #cmc) ∧
  (L2_MC( platform, mrsigner, mrenclave, mcid, valMC_init ) @ #L2_MC) ∧
  (L3_process( platform, mrsigner, mrenclave, p_id1, mcid, valMC_init
   ) @ #L3_process1) ∧
  (L3_process( platform, mrsigner, mrenclave, p_id2, mcid, valMC_init
   ) @ #L3_process2) ∧
  (E_o_decrypt( platform, mrsigner, mrenclave, p_id1, ra_o_key1, data1,
                oname, cipher_upload_req1, gcm_tag_upload_req1, mcid
   ) @ #e_o_decrypt1) ∧
  (index_added1 = ('1'+valMC_init)) ∧
  (PSE_sgx_increment_MC( <platform, mrenclave>, mcid, ptrMC1, ptrMC2,
                         index_added1
   ) @ #incMC1) ∧
  (E_o_upload( platform, mrsigner, mrenclave, p_id1, ra_o_key1, data1,
               oname, mcid, index_added1, sealed_e_return1
   ) @ #e_o_upload1) ∧
  (E_o_decrypt( platform, mrsigner, mrenclave, p_id2, ra_o_key2, data2,
                oname, cipher_upload_req2, gcm_tag_upload_req2, mcid
   ) @ #e_o_decrypt2) ∧
  (index_added2 = ('1'+'1'+valMC_init)) ∧
  (PSE_sgx_increment_MC( <platform, mrenclave>, mcid, ptrMC2, ptrMC3,
                         index_added2
   ) @ #incMC2) ∧
  (E_o_upload( platform, mrsigner, mrenclave, p_id2, ra_o_key2, data2,
               oname, mcid, index_added2, sealed_e_return2
   ) @ #e_o_upload2) ∧
  (DB_setup( ptrIndex1, index_init ) @ #db_setup) ∧
  (index_init = '1') ∧
  (DB_store( p_id1, ptrIndex1, index_init, ptrIndex2, ('1'+index_init),
             sealed_e_return2
   ) @ #db_store1) ∧
  (DB_store( p_id2, ptrIndex2, ('1'+index_init), ptrIndex3,
             ('1'+'1'+index_init), sealed_e_return2
   ) @ #db_store2) ∧
  (RCHR_data_req( ra_r_key, index_req, cipher_data_req, gcm_tag_data_req
   ) @ #rchr_data_req_111) ∧
  (E_r_data_req( platform, mrsigner, mrenclave, p_id2, ra_r_key, index_req,
                 cipher_data_req, gcm_tag_data_req
   ) @ #E_r_data_req) ∧
  (DB_retrieve( p_id2, index_req, sealed_e_return2 ) @ #db_retrieve) ∧
  (E_r_data_resp( platform, mrsigner, mrenclave, p_id2, ra_r_key,
                  index_req, data2, sealed_e_return2, cipher_data_resp, gcm_tag_data_resp
   ) @ #E_r_data_resp) ∧
  (RCHR_data_resp( ra_r_key, index_req, data2, cipher_data_resp,
                   gcm_tag_data_resp
   ) @ #rchr_data_resp)"
*/
simplify
solve( !OMem( ~oname ) ▶₂ #do_upload1 )
  case DO_setup
  solve( !OMem( ~oname ) ▶₂ #do_upload2 )
    case DO_setup
    solve( !L12( ~platform_sec ) ▶₂ #L2_mrsigner_mrenclave )
      case L1_platform
      solve( Sgx_create_MC( <~platform_sec, ~mrenclave>, label ) ▶₂ #cmc )
        case L2_mrsigner_mrenclave
        solve( Sgx_create_MC_done( <~platform_sec, ~mrenclave>, ~mc_session,
                                   ~mcid, '1'
               ) ▶₀ #L2_MC )
          case PSE_CreateMC
          solve( L22( ~platform_sec, ~mrsigner, ~mrenclave, ~mc_session
                 ) ▶₁ #L2_MC )
            case L2_mrsigner_mrenclave
            solve( !L23( ~platform_sec, ~mrsigner, ~mrenclave, ~mcid, '1'
                   ) ▶₀ #L3_process1 )
              case L2_MC
              solve( !L23( ~platform_sec, ~mrsigner, ~mrenclave, ~mcid, '1'
                     ) ▶₀ #L3_process2 )
                case L2_MC
                solve( Start_thread_e_upload( ~platform_sec, ~mrsigner, ~mrenclave,
                                              ~p_id.1, ~mcid
                       ) ▶₁ #e_o_decrypt1 )
                  case L3_process
                  solve( RA_o_login( ~ra_o_key ) ▶₂ #e_o_decrypt1 )
                    case DO_upload
                    solve( Start_thread_e_upload( ~platform_sec, ~mrsigner, ~mrenclave,
                                                  ~p_id, ~mcid
                           ) ▶₁ #e_o_decrypt2 )
                      case L3_process
                      solve( RA_o_login( ~ra_o_key.1 ) ▶₂ #e_o_decrypt2 )
                        case DO_upload
                        solve( RA_r_login( ~ra_r_key ) ▶₁ #E_r_data_req )
                          case RCHR_data_req_case_2
                          solve( Start_thread_e_data_req( ~platform_sec, ~mrsigner, ~mrenclave,
                                                          ~p_id
                                 ) ▶₂ #E_r_data_req )
                            case L3_process
                            solve( !DB_mem( index_req,
                                            senc(<oname_sealed, ~data, index_req>,
                                                 h(<~platform_sec, ~mrsigner, 'seal'>))
                                   ) ▶₁ #db_retrieve )
                              case DB_store
                              solve( Start_thread_db_data_req( ~p_id ) ▶₂ #db_retrieve )
                                case L3_process
                                solve( EPC_E_r( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id, ~ra_r_key,
                                                ('1'+i)
                                       ) ▶₁ #E_r_data_resp )
                                  case E_r_data_req
                                  solve( Mem_RCHR( ~ra_r_key, ('1'+i) ) ▶₀ #rchr_data_resp )
                                    case RCHR_data_req
                                    solve( PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, ~ptr,
                                                                 ptrMC2, ('1'+'1')
                                           ) @ #incMC1 )
                                      case PSE_sgx_increment_MC
                                      solve( Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid, label
                                             ) ▶₀ #incMC1 )
                                        case E_o_decrypt
                                        solve( E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id.1,
                                                           ~ra_o_key, ~data.1, ~oname, ~mcid, ('1'+'1'),
                                                           sealed_e_return1
                                               ) @ #e_o_upload1 )
                                          case E_o_upload
                                          solve( Sgx_increment_MC_done( <~platform_sec, ~mrenclave>, ~mcid,
                                                                        ~mc_session.3, ('1'+'1')
                                                 ) ▶₀ #e_o_upload1 )
                                            case PSE_sgx_increment_MC
                                            solve( EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave, ~p_id.1,
                                                            ~mc_session.3, ~ra_o_key, ~data.1, ~oname, ~mcid
                                                   ) ▶₁ #e_o_upload1 )
                                              case E_o_decrypt
                                              solve( PSE_sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid,
                                                                           ~ptr_new, ptrMC3, ('1'+'1'+'1')
                                                     ) @ #incMC2 )
                                                case PSE_sgx_increment_MC
                                                solve( Sgx_increment_MC( <~platform_sec, ~mrenclave>, ~mcid,
                                                                         label
                                                       ) ▶₀ #incMC2 )
                                                  case E_o_decrypt
                                                  solve( E_o_upload( ~platform_sec, ~mrsigner, ~mrenclave,
                                                                     ~p_id, ~ra_o_key.1, ~data, ~oname, ~mcid,
                                                                     ('1'+'1'+'1'),
                                                                     senc(<oname_sealed, ~data, ('1'+i)>,
                                                                          h(<~platform_sec, ~mrsigner, 'seal'
                                                                            >))
                                                         ) @ #e_o_upload2 )
                                                    case E_o_upload
                                                    solve( Sgx_increment_MC_done( <~platform_sec, ~mrenclave>,
                                                                                  ~mcid, ~mc_session.3,
                                                                                  ('1'+'1'+'1')
                                                           ) ▶₀ #e_o_upload2 )
                                                      case PSE_sgx_increment_MC
                                                      solve( EPC_E_o( ~platform_sec, ~mrsigner, ~mrenclave,
                                                                      ~p_id, ~mc_session.3, ~ra_o_key.1,
                                                                      ~data, ~oname, ~mcid
                                                             ) ▶₁ #e_o_upload2 )
                                                        case E_o_decrypt
                                                        solve( DB_store( ~p_id.1, ~ptr.1, '1', ptrIndex2,
                                                                         ('1'+'1'),
                                                                         senc(<~oname, ~data, ('1'+'1'+'1')>,
                                                                              h(<~platform_sec, ~mrsigner, 
                                                                                 'seal'>))
                                                               ) @ #db_store1 )
                                                          case DB_store
                                                          solve( Start_thread_db_upload( ~p_id.1
                                                                 ) ▶₁ #db_store1 )
                                                            case L3_process
                                                            solve( DB_store( ~p_id, ~ptr_new, ('1'+'1'),
                                                                             ptrIndex3, ('1'+'1'+'1'),
                                                                             senc(<~oname, ~data, 
                                                                                   ('1'+'1'+'1')>,
                                                                                  h(<~platform_sec, 
                                                                                     ~mrsigner, 'seal'>))
                                                                   ) @ #db_store2 )
                                                              case DB_store
                                                              solve( Start_thread_db_upload( ~p_id
                                                                     ) ▶₁ #db_store2 )
                                                                case L3_process
                                                                solve( RCHR_data_req( ~ra_r_key,
                                                                                      ('1'+'1'+'1'),
                                                                                      senc(<'RCHR_data_req', 
                                                                                            ('1'+'1'+'1')>,
                                                                                           ~ra_r_key),
                                                                                      senc(h(senc(<
                                                                                                   'RCHR_data_req', 
                                                                                                   ('1'+'1'+
                                                                                                    '1')
                                                                                                  >,
                                                                                                  ~ra_r_key)),
                                                                                           ~ra_r_key)
                                                                       ) @ #rchr_data_req_111 )
                                                                  case RCHR_data_req
                                                                  solve( !Indexes( ('1'+'1') ) ▶₀ #vr )
                                                                    case Start
                                                                    solve( !DB_index( ptr.2, ('1'+'1')
                                                                           ) ▶₂ #vr.1 )
                                                                      case DB_store
                                                                      solve( !Priv_mem_ME( <~platform_sec, 
                                                                                            ~mrenclave>,
                                                                                           ~mcid, ~ptr, '1'
                                                                             ) ▶₁ #incMC1 )
                                                                        case PSE_CreateMC
                                                                        solve( !Priv_mem_ME( <~platform_sec, 
                                                                                              ~mrenclave>,
                                                                                             ~mcid,
                                                                                             ~ptr_new.2,
                                                                                             ('1'+'1')
                                                                               ) ▶₁ #incMC2 )
                                                                          case PSE_sgx_increment_MC
                                                                          solve( !DB_index( ~ptr.1, '1'
                                                                                 ) ▶₂ #db_store1 )
                                                                            case DB_setup
                                                                            solve( !DB_index( ~ptr_new,
                                                                                              ('1'+'1')
                                                                                   ) ▶₂ #db_store2 )
                                                                              case DB_store
                                                                              solve( !DB_index( ptr.3, '1'
                                                                                     ) ▶₂ #vr.8 )
                                                                                case DB_setup
                                                                                solve( !KU( senc(<'upload', 
                                                                                                  ~oname, 
                                                                                                  ~data.1>,
                                                                                                 ~ra_o_key)
                                                                                       ) @ #vk.1 )
                                                                                  case DO_upload
                                                                                  solve( !KU( senc(h(senc(<
                                                                                                           'upload', 
                                                                                                           ~oname, 
                                                                                                           ~data.1
                                                                                                          >,
                                                                                                          ~ra_o_key)),
                                                                                                   ~ra_o_key)
                                                                                         ) @ #vk.2 )
                                                                                    case DO_upload
                                                                                    solve( !KU( senc(<
                                                                                                      'upload', 
                                                                                                      ~oname, 
                                                                                                      ~data>,
                                                                                                     ~ra_o_key.1)
                                                                                           ) @ #vk.4 )
                                                                                      case DO_upload
                                                                                      solve( !KU( senc(h(senc(<
                                                                                                               'upload', 
                                                                                                               ~oname, 
                                                                                                               ~data
                                                                                                              >,
                                                                                                              ~ra_o_key.1)),
                                                                                                       ~ra_o_key.1)
                                                                                             ) @ #vk.5 )
                                                                                        case DO_upload
                                                                                        solve( !KU( senc(<
                                                                                                          'RCHR_data_req', 
                                                                                                          (
                                                                                                           '1'+
                                                                                                           '1'+
                                                                                                           '1'
                                                                                                          )
                                                                                                         >,
                                                                                                         ~ra_r_key)
                                                                                               ) @ #vk.7 )
                                                                                          case RCHR_data_req
                                                                                          solve( !KU( senc(h(senc(<
                                                                                                                   'RCHR_data_req', 
                                                                                                                   (
                                                                                                                    '1'+
                                                                                                                    '1'+
                                                                                                                    '1'
                                                                                                                   )
                                                                                                                  >,
                                                                                                                  ~ra_r_key)),
                                                                                                           ~ra_r_key)
                                                                                                 ) @ #vk.8 )
                                                                                            case RCHR_data_req
                                                                                            solve( !KU( senc(<
                                                                                                              ~oname, 
                                                                                                              ~data, 
                                                                                                              (
                                                                                                               '1'+
                                                                                                               '1'+
                                                                                                               '1'
                                                                                                              )
                                                                                                             >,
                                                                                                             h(<
                                                                                                                ~platform_sec, 
                                                                                                                ~mrsigner, 
                                                                                                                'seal'
                                                                                                               >))
                                                                                                   ) @ #vk.14 )
                                                                                              case E_o_upload
                                                                                              solve( !KU( senc(<
                                                                                                                'RCHR_data_resp', 
                                                                                                                ~data
                                                                                                               >,
                                                                                                               ~ra_r_key)
                                                                                                     ) @ #vk.19 )
                                                                                                case E_r_data_resp
                                                                                                solve( !KU( senc(h(senc(<
                                                                                                                         'RCHR_data_resp', 
                                                                                                                         ~data
                                                                                                                        >,
                                                                                                                        ~ra_r_key)),
                                                                                                                 ~ra_r_key)
                                                                                                       ) @ #vk.20 )
                                                                                                  case E_r_data_resp
                                                                                                  SOLVED // trace found
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma unique_ra_session_at_ecall [reuse]:
  all-traces
  "∀ ra_r_key_x index_req_x1 sealed_e_return_x1 #E_r_data_reply_ex_x1
     index_req_x2 sealed_e_return_x2 #E_r_data_reply_ex_x2.
    ((E_r_data_reply_ex( ra_r_key_x, index_req_x1, sealed_e_return_x1
      ) @ #E_r_data_reply_ex_x1) ∧
     (E_r_data_reply_ex( ra_r_key_x, index_req_x2, sealed_e_return_x2
      ) @ #E_r_data_reply_ex_x2)) ⇒
    (#E_r_data_reply_ex_x1 = #E_r_data_reply_ex_x2)"
/*
guarded formula characterizing all counter-examples:
"∃ ra_r_key_x index_req_x1 sealed_e_return_x1 #E_r_data_reply_ex_x1
   index_req_x2 sealed_e_return_x2 #E_r_data_reply_ex_x2.
  (E_r_data_reply_ex( ra_r_key_x, index_req_x1, sealed_e_return_x1
   ) @ #E_r_data_reply_ex_x1) ∧
  (E_r_data_reply_ex( ra_r_key_x, index_req_x2, sealed_e_return_x2
   ) @ #E_r_data_reply_ex_x2)
 ∧
  ¬(#E_r_data_reply_ex_x1 = #E_r_data_reply_ex_x2)"
*/
simplify
solve( (#E_r_data_reply_ex_x1 < #E_r_data_reply_ex_x2)  ∥
       (#E_r_data_reply_ex_x2 < #E_r_data_reply_ex_x1) )
  case case_1
  solve( EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                  index_req_x1
         ) ▶₁ #E_r_data_reply_ex_x1 )
    case E_r_data_req_case_1
    solve( EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
                    ~ra_r_key, index_req_x2
           ) ▶₁ #E_r_data_reply_ex_x2 )
      case E_r_data_req
      by contradiction /* cyclic */
    qed
  next
    case E_r_data_req_case_2
    solve( EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
                    ~ra_r_key, index_req_x2
           ) ▶₁ #E_r_data_reply_ex_x2 )
      case E_r_data_req
      by contradiction /* cyclic */
    qed
  qed
next
  case case_2
  solve( EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                  index_req_x1
         ) ▶₁ #E_r_data_reply_ex_x1 )
    case E_r_data_req_case_1
    solve( EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
                    ~ra_r_key, index_req_x2
           ) ▶₁ #E_r_data_reply_ex_x2 )
      case E_r_data_req
      by contradiction /* cyclic */
    qed
  next
    case E_r_data_req_case_2
    solve( EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
                    ~ra_r_key, index_req_x2
           ) ▶₁ #E_r_data_reply_ex_x2 )
      case E_r_data_req
      by contradiction /* cyclic */
    qed
  qed
qed

lemma unique_ra_session_at_request [reuse]:
  all-traces
  "∀ ra_r_key index_req1 #RCHR_data_rcv1 index_req2 #RCHR_data_rcv2.
    ((RCHR_data_rcv( ra_r_key, index_req1 ) @ #RCHR_data_rcv1) ∧
     (RCHR_data_rcv( ra_r_key, index_req2 ) @ #RCHR_data_rcv2)) ⇒
    (#RCHR_data_rcv1 = #RCHR_data_rcv2)"
/*
guarded formula characterizing all counter-examples:
"∃ ra_r_key index_req1 #RCHR_data_rcv1 index_req2 #RCHR_data_rcv2.
  (RCHR_data_rcv( ra_r_key, index_req1 ) @ #RCHR_data_rcv1) ∧
  (RCHR_data_rcv( ra_r_key, index_req2 ) @ #RCHR_data_rcv2)
 ∧
  ¬(#RCHR_data_rcv1 = #RCHR_data_rcv2)"
*/
simplify
solve( (#RCHR_data_rcv1 < #RCHR_data_rcv2)  ∥
       (#RCHR_data_rcv2 < #RCHR_data_rcv1) )
  case case_1
  solve( Mem_RCHR( ~ra_r_key, index_req1 ) ▶₀ #RCHR_data_rcv1 )
    case RCHR_data_req_case_1
    solve( Mem_RCHR( ~ra_r_key, index_req2 ) ▶₀ #RCHR_data_rcv2 )
      case RCHR_data_req
      by contradiction /* cyclic */
    qed
  next
    case RCHR_data_req_case_2
    solve( Mem_RCHR( ~ra_r_key, index_req2 ) ▶₀ #RCHR_data_rcv2 )
      case RCHR_data_req
      by contradiction /* cyclic */
    qed
  qed
next
  case case_2
  solve( Mem_RCHR( ~ra_r_key, index_req1 ) ▶₀ #RCHR_data_rcv1 )
    case RCHR_data_req_case_1
    solve( Mem_RCHR( ~ra_r_key, index_req2 ) ▶₀ #RCHR_data_rcv2 )
      case RCHR_data_req
      by contradiction /* cyclic */
    qed
  next
    case RCHR_data_req_case_2
    solve( Mem_RCHR( ~ra_r_key, index_req2 ) ▶₀ #RCHR_data_rcv2 )
      case RCHR_data_req
      by contradiction /* cyclic */
    qed
  qed
qed

lemma unique_ra_session_n_index_req_resp_map [reuse]:
  all-traces
  "∀ ra_r_key index_req #RCHR_data_rcv.
    (RCHR_data_rcv( ra_r_key, index_req ) @ #RCHR_data_rcv) ⇒
    (∃ ra_r_key_x index_req_x sealed_e_return_x #E_r_data_reply_ex_x.
      (E_r_data_reply_ex( ra_r_key_x, index_req_x, sealed_e_return_x
       ) @ #E_r_data_reply_ex_x) ∧
      (ra_r_key_x = ra_r_key))"
/*
guarded formula characterizing all counter-examples:
"∃ ra_r_key index_req #RCHR_data_rcv.
  (RCHR_data_rcv( ra_r_key, index_req ) @ #RCHR_data_rcv)
 ∧
  ∀ ra_r_key_x index_req_x sealed_e_return_x #E_r_data_reply_ex_x.
   (E_r_data_reply_ex( ra_r_key_x, index_req_x, sealed_e_return_x
    ) @ #E_r_data_reply_ex_x) ∧
   (ra_r_key_x = ra_r_key)
  ⇒
   ⊥"
*/
simplify
solve( Mem_RCHR( ~ra_r_key, index_req ) ▶₀ #RCHR_data_rcv )
  case RCHR_data_req_case_1
  solve( !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.3 )
    case E_r_data_resp
    by contradiction /* from formulas */
  next
    case c_senc
    by solve( !KU( ~ra_r_key ) @ #vk.6 )
  qed
next
  case RCHR_data_req_case_2
  solve( !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.3 )
    case E_r_data_resp
    by contradiction /* from formulas */
  next
    case c_senc
    by solve( !KU( ~ra_r_key ) @ #vk.6 )
  qed
qed

lemma unique_ra_session_n_index_req_resp_inj_map_plain:
  all-traces
  "∀ ra_r_key index_req #RCHR_data_rcv.
    (RCHR_data_rcv( ra_r_key, index_req ) @ #RCHR_data_rcv) ⇒
    (∃ ra_r_key_x index_req_x sealed_e_return_x #E_r_data_reply_ex_x.
      (((E_r_data_reply_ex( ra_r_key_x, index_req_x, sealed_e_return_x
         ) @ #E_r_data_reply_ex_x) ∧
        (ra_r_key_x = ra_r_key)) ∧
       (index_req_x = index_req)) ∧
      (∀ ra_r_key_y index_req_y sealed_e_return_y #E_r_data_reply_ex_y.
        ((E_r_data_reply_ex( ra_r_key_y, index_req_y, sealed_e_return_y
          ) @ #E_r_data_reply_ex_y) ∧
         (ra_r_key_y = ra_r_key_x)) ⇒
        (#E_r_data_reply_ex_x = #E_r_data_reply_ex_y)))"
/*
guarded formula characterizing all counter-examples:
"∃ ra_r_key index_req #RCHR_data_rcv.
  (RCHR_data_rcv( ra_r_key, index_req ) @ #RCHR_data_rcv)
 ∧
  ∀ ra_r_key_x index_req_x sealed_e_return_x #E_r_data_reply_ex_x.
   (E_r_data_reply_ex( ra_r_key_x, index_req_x, sealed_e_return_x
    ) @ #E_r_data_reply_ex_x) ∧
   (ra_r_key_x = ra_r_key) ∧
   (index_req_x = index_req)
  ⇒
   ∃ ra_r_key_y index_req_y sealed_e_return_y #E_r_data_reply_ex_y.
    (E_r_data_reply_ex( ra_r_key_y, index_req_y, sealed_e_return_y
     ) @ #E_r_data_reply_ex_y) ∧
    (ra_r_key_y = ra_r_key_x)
   ∧
    ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_y)"
*/
simplify
solve( Mem_RCHR( ~ra_r_key, index_req ) ▶₀ #RCHR_data_rcv )
  case RCHR_data_req_case_1
  solve( EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                  index_req_x
         ) ▶₁ #E_r_data_reply_ex_x )
    case E_r_data_req
    solve( !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.3 )
      case E_r_data_resp
      solve( !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
                       h(<~platform_sec, ~mrsigner, 'seal'>))
             ) @ #vk.7 )
        case E_o_upload
        solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.9 )
          case RCHR_data_req
          by contradiction /* from formulas */
        next
          case c_senc
          by solve( !KU( ~ra_r_key ) @ #vk.15 )
        qed
      next
        case c_senc
        solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.9 )
          case RCHR_data_req
          by contradiction /* from formulas */
        next
          case c_senc
          by solve( !KU( ~ra_r_key ) @ #vk.18 )
        qed
      qed
    next
      case c_senc
      by solve( !KU( ~ra_r_key ) @ #vk.12 )
    qed
  qed
next
  case RCHR_data_req_case_2
  solve( EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                  index_req_x
         ) ▶₁ #E_r_data_reply_ex_x )
    case E_r_data_req
    solve( !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.3 )
      case E_r_data_resp
      solve( !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
                       h(<~platform_sec, ~mrsigner, 'seal'>))
             ) @ #vk.7 )
        case E_o_upload
        solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.9 )
          case RCHR_data_req
          by contradiction /* from formulas */
        next
          case c_senc
          by solve( !KU( ~ra_r_key ) @ #vk.15 )
        qed
      next
        case c_senc
        solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.9 )
          case RCHR_data_req
          by contradiction /* from formulas */
        next
          case c_senc
          by solve( !KU( ~ra_r_key ) @ #vk.18 )
        qed
      qed
    next
      case c_senc
      by solve( !KU( ~ra_r_key ) @ #vk.12 )
    qed
  qed
qed

lemma sealing_replay_plain:
  all-traces
  "∀ ra_r_key_x index_req_x #RCHR_data_rcv_x ra_r_key_y index_req_y
     #RCHR_data_rcv_y.
    (((RCHR_data_rcv( ra_r_key_x, index_req_x ) @ #RCHR_data_rcv_x) ∧
      (RCHR_data_rcv( ra_r_key_y, index_req_y ) @ #RCHR_data_rcv_y)) ∧
     (¬(index_req_x = index_req_y))) ⇒
    (∃ sealed_e_return_a #E_r_data_reply_ex_a sealed_e_return_b
       #E_r_data_reply_ex_b.
      ((((E_r_data_reply_ex( ra_r_key_x, index_req_x, sealed_e_return_a
          ) @ #E_r_data_reply_ex_a) ∧
         (∀ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
           (E_r_data_reply_ex( ra_r_key_x, index_req_t, sealed_e_return_t
            ) @ #E_r_data_reply_ex_t) ⇒
           (#E_r_data_reply_ex_a = #E_r_data_reply_ex_t))) ∧
        (E_r_data_reply_ex( ra_r_key_y, index_req_y, sealed_e_return_b
         ) @ #E_r_data_reply_ex_b)) ∧
       (∀ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
         (E_r_data_reply_ex( ra_r_key_y, index_req_t, sealed_e_return_t
          ) @ #E_r_data_reply_ex_t) ⇒
         (#E_r_data_reply_ex_b = #E_r_data_reply_ex_t))) ∧
      (¬(sealed_e_return_a = sealed_e_return_b)))"
/*
guarded formula characterizing all counter-examples:
"∃ ra_r_key_x index_req_x #RCHR_data_rcv_x ra_r_key_y index_req_y
   #RCHR_data_rcv_y.
  (RCHR_data_rcv( ra_r_key_x, index_req_x ) @ #RCHR_data_rcv_x) ∧
  (RCHR_data_rcv( ra_r_key_y, index_req_y ) @ #RCHR_data_rcv_y)
 ∧
  (¬(index_req_x = index_req_y)) ∧
  (∀ sealed_e_return_a #E_r_data_reply_ex_a sealed_e_return_b
     #E_r_data_reply_ex_b.
    (E_r_data_reply_ex( ra_r_key_x, index_req_x, sealed_e_return_a
     ) @ #E_r_data_reply_ex_a) ∧
    (E_r_data_reply_ex( ra_r_key_y, index_req_y, sealed_e_return_b
     ) @ #E_r_data_reply_ex_b)
   ⇒
    ((∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ra_r_key_x, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_a = #E_r_data_reply_ex_t)) ∨
     (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
       (E_r_data_reply_ex( ra_r_key_y, index_req_t, sealed_e_return_t
        ) @ #E_r_data_reply_ex_t)
      ∧
       ¬(#E_r_data_reply_ex_b = #E_r_data_reply_ex_t)) ∨
     (sealed_e_return_a = sealed_e_return_b)))"
*/
simplify
solve( Mem_RCHR( ~ra_r_key, index_req_x ) ▶₀ #RCHR_data_rcv_x )
  case RCHR_data_req_case_1
  solve( Mem_RCHR( ~ra_r_key.1, index_req_y ) ▶₀ #RCHR_data_rcv_y )
    case RCHR_data_req_case_1
    by contradiction /* from formulas */
  next
    case RCHR_data_req_case_2
    solve( EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                    index_req_x
           ) ▶₁ #E_r_data_reply_ex_x )
      case E_r_data_req
      solve( EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
                      ~ra_r_key.1, index_req_x.1
             ) ▶₁ #E_r_data_reply_ex_x.1 )
        case E_r_data_req
        solve( !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.4 )
          case E_r_data_resp
          solve( !KU( senc(<'RCHR_data_resp', data_rvcd.1>, ~ra_r_key.1)
                 ) @ #vk.7 )
            case E_r_data_resp
            solve( !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
                             h(<~platform_sec, ~mrsigner, 'seal'>))
                   ) @ #vk.12 )
              case E_o_upload
              solve( !KU( senc(<oname_sealed.1, data_sealed, index_req_x>,
                               h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                     ) @ #vk.13 )
                case E_o_upload
                solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+'1')>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+valMC)>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    next
                      case case_3
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.27 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.27 )
                qed
              next
                case c_senc
                solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+'1')>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+x)>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.30 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.30 )
                qed
              qed
            next
              case c_senc
              solve( !KU( senc(<oname_sealed.1, data_sealed, index_req_x.1>,
                               h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                     ) @ #vk.13 )
                case E_o_upload
                solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+'1')>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+valMC)>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.32 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.30 )
                qed
              next
                case c_senc
                solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+'1')>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+x)>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    next
                      case case_3
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.34 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.33 )
                qed
              qed
            qed
          next
            case c_senc
            by solve( !KU( ~ra_r_key.1 ) @ #vk.21 )
          qed
        next
          case c_senc
          by solve( !KU( ~ra_r_key ) @ #vk.21 )
        qed
      qed
    qed
  qed
next
  case RCHR_data_req_case_2
  solve( Mem_RCHR( ~ra_r_key.1, index_req_y ) ▶₀ #RCHR_data_rcv_y )
    case RCHR_data_req_case_1
    solve( EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                    index_req_x
           ) ▶₁ #E_r_data_reply_ex_x )
      case E_r_data_req
      solve( EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
                      ~ra_r_key.1, index_req_x.1
             ) ▶₁ #E_r_data_reply_ex_x.1 )
        case E_r_data_req
        solve( !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.4 )
          case E_r_data_resp
          solve( !KU( senc(<'RCHR_data_resp', data_rvcd.1>, ~ra_r_key.1)
                 ) @ #vk.7 )
            case E_r_data_resp
            solve( !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
                             h(<~platform_sec, ~mrsigner, 'seal'>))
                   ) @ #vk.12 )
              case E_o_upload
              solve( !KU( senc(<oname_sealed.1, data_sealed, index_req_x>,
                               h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                     ) @ #vk.13 )
                case E_o_upload
                solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', ('1'+valMC.1)>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+valMC)>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+'1')>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    next
                      case case_3
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.27 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.27 )
                qed
              next
                case c_senc
                solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+valMC)>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+'1')>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.30 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.30 )
                qed
              qed
            next
              case c_senc
              solve( !KU( senc(<oname_sealed.1, data_sealed, index_req_x.1>,
                               h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                     ) @ #vk.13 )
                case E_o_upload
                solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+x)>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+'1')>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.33 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.30 )
                qed
              next
                case c_senc
                solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+x)>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+'1')>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    next
                      case case_3
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.35 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.33 )
                qed
              qed
            qed
          next
            case c_senc
            by solve( !KU( ~ra_r_key.1 ) @ #vk.21 )
          qed
        next
          case c_senc
          by solve( !KU( ~ra_r_key ) @ #vk.21 )
        qed
      qed
    qed
  next
    case RCHR_data_req_case_2
    solve( EPC_E_r( platform_sec, mrsigner, mrenclave, ~p_id, ~ra_r_key,
                    index_req_x
           ) ▶₁ #E_r_data_reply_ex_x )
      case E_r_data_req
      solve( EPC_E_r( platform_sec.1, mrsigner.1, mrenclave.1, ~p_id.1,
                      ~ra_r_key.1, index_req_x.1
             ) ▶₁ #E_r_data_reply_ex_x.1 )
        case E_r_data_req
        solve( !KU( senc(<'RCHR_data_resp', data_rvcd>, ~ra_r_key) ) @ #vk.4 )
          case E_r_data_resp
          solve( !KU( senc(<'RCHR_data_resp', data_rvcd.1>, ~ra_r_key.1)
                 ) @ #vk.7 )
            case E_r_data_resp
            solve( !KU( senc(<oname_sealed, data_rvcd, index_req_x>,
                             h(<~platform_sec, ~mrsigner, 'seal'>))
                   ) @ #vk.12 )
              case E_o_upload
              solve( !KU( senc(<oname_sealed.1, data_sealed, index_req_x>,
                               h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                     ) @ #vk.13 )
                case E_o_upload
                solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', ('1'+valMC.1)>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+valMC)>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+x)>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    next
                      case case_3
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.27 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.27 )
                qed
              next
                case c_senc
                solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+valMC)>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+x)>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.30 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.30 )
                qed
              qed
            next
              case c_senc
              solve( !KU( senc(<oname_sealed.1, data_sealed, index_req_x.1>,
                               h(<~platform_sec.1, ~mrsigner.1, 'seal'>))
                     ) @ #vk.13 )
                case E_o_upload
                solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', ('1'+valMC)>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+x)>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+valMC)>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.33 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.30 )
                qed
              next
                case c_senc
                solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key) ) @ #vk.15 )
                  case RCHR_data_req
                  solve( !KU( senc(<'RCHR_data_req', index_req_x>, ~ra_r_key.1)
                         ) @ #vk.18 )
                    case RCHR_data_req
                    solve( (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x = #E_r_data_reply_ex_t))  ∥
                           (∃ index_req_t sealed_e_return_t #E_r_data_reply_ex_t.
                             (E_r_data_reply_ex( ~ra_r_key.1, index_req_t, sealed_e_return_t
                              ) @ #E_r_data_reply_ex_t)
                            ∧
                             ¬(#E_r_data_reply_ex_x.1 = #E_r_data_reply_ex_t))  ∥
                           (senc(<oname_sealed, data_rvcd, ('1'+x)>,
                                 h(<~platform_sec, ~mrsigner, 'seal'>)) =
                            senc(<oname_sealed.1, data_sealed, ('1'+x.1)>,
                                 h(<~platform_sec.1, ~mrsigner.1, 'seal'>))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    next
                      case case_3
                      by contradiction /* from formulas */
                    qed
                  next
                    case c_senc
                    by solve( !KU( ~ra_r_key.1 ) @ #vk.35 )
                  qed
                next
                  case c_senc
                  by solve( !KU( ~ra_r_key ) @ #vk.33 )
                qed
              qed
            qed
          next
            case c_senc
            by solve( !KU( ~ra_r_key.1 ) @ #vk.21 )
          qed
        next
          case c_senc
          by solve( !KU( ~ra_r_key ) @ #vk.21 )
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: bi_safe.spthy

  AUTO_typing_src (all-traces): verified (678 steps)
  createMC_for_every_incMC_ind_reuse (all-traces): verified (7 steps)
  MC_value_never_equals_ind_reuse (all-traces): verified (30 steps)
  honest_run_req11 (exists-trace): verified (34 steps)
  honest_run_req111 (exists-trace): verified (40 steps)
  honest_run_2_upload (exists-trace): verified (51 steps)
  unique_ra_session_at_ecall (all-traces): verified (12 steps)
  unique_ra_session_at_request (all-traces): verified (12 steps)
  unique_ra_session_n_index_req_resp_map (all-traces): verified (8 steps)
  unique_ra_session_n_index_req_resp_inj_map_plain (all-traces): verified (22 steps)
  sealing_replay_plain (all-traces): verified (122 steps)

==============================================================================

